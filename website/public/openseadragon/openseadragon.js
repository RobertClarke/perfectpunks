window.OpenSeadragon=window.OpenSeadragon||function(options){return new OpenSeadragon.Viewer(options);};if(typeof define==='function'&&define.amd){define(function(){return(window.OpenSeadragon);});}
(function($){$.version={versionStr:'2.2.1',major:parseInt('2',10),minor:parseInt('2',10),revision:parseInt('1',10)};var class2type={'[object Boolean]':'boolean','[object Number]':'number','[object String]':'string','[object Function]':'function','[object Array]':'array','[object Date]':'date','[object RegExp]':'regexp','[object Object]':'object'},toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty;$.isFunction=function(obj){return $.type(obj)==="function";};$.isArray=Array.isArray||function(obj){return $.type(obj)==="array";};$.isWindow=function(obj){return obj&&typeof obj==="object"&&"setInterval"in obj;};$.type=function(obj){return(obj===null)||(obj===undefined)?String(obj):class2type[toString.call(obj)]||"object";};$.isPlainObject=function(obj){if(!obj||OpenSeadragon.type(obj)!=="object"||obj.nodeType||$.isWindow(obj)){return false;}
if(obj.constructor&&!hasOwn.call(obj,"constructor")&&!hasOwn.call(obj.constructor.prototype,"isPrototypeOf")){return false;}
var lastKey;for(var key in obj){lastKey=key;}
return lastKey===undefined||hasOwn.call(obj,lastKey);};$.isEmptyObject=function(obj){for(var name in obj){return false;}
return true;};$.freezeObject=function(obj){if(Object.freeze){$.freezeObject=Object.freeze;}else{$.freezeObject=function(obj){return obj;};}
return $.freezeObject(obj);};$.supportsCanvas=(function(){var canvasElement=document.createElement('canvas');return!!($.isFunction(canvasElement.getContext)&&canvasElement.getContext('2d'));}());$.isCanvasTainted=function(canvas){var isTainted=false;try{var data=canvas.getContext('2d').getImageData(0,0,1,1);}catch(e){isTainted=true;}
return isTainted;};$.pixelDensityRatio=(function(){if($.supportsCanvas){var context=document.createElement('canvas').getContext('2d');var devicePixelRatio=window.devicePixelRatio||1;var backingStoreRatio=context.webkitBackingStorePixelRatio||context.mozBackingStorePixelRatio||context.msBackingStorePixelRatio||context.oBackingStorePixelRatio||context.backingStorePixelRatio||1;return devicePixelRatio/backingStoreRatio;}else{return 1;}}());}(OpenSeadragon));(function($){$.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},length=arguments.length,deep=false,i=1;if(typeof target==="boolean"){deep=target;target=arguments[1]||{};i=2;}
if(typeof target!=="object"&&!OpenSeadragon.isFunction(target)){target={};}
if(length===i){target=this;--i;}
for(;i<length;i++){options=arguments[i];if(options!==null||options!==undefined){for(name in options){src=target[name];copy=options[name];if(target===copy){continue;}
if(deep&&copy&&(OpenSeadragon.isPlainObject(copy)||(copyIsArray=OpenSeadragon.isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&OpenSeadragon.isArray(src)?src:[];}else{clone=src&&OpenSeadragon.isPlainObject(src)?src:{};}
target[name]=OpenSeadragon.extend(deep,clone,copy);}else if(copy!==undefined){target[name]=copy;}}}}
return target;};var isIOSDevice=function(){if(typeof navigator!=='object'){return false;}
var userAgent=navigator.userAgent;if(typeof userAgent!=='string'){return false;}
return userAgent.indexOf('iPhone')!==-1||userAgent.indexOf('iPad')!==-1||userAgent.indexOf('iPod')!==-1;};$.extend($,{DEFAULT_SETTINGS:{xmlPath:null,tileSources:null,tileHost:null,initialPage:0,crossOriginPolicy:false,ajaxWithCredentials:false,panHorizontal:true,panVertical:true,constrainDuringPan:false,wrapHorizontal:false,wrapVertical:false,visibilityRatio:0.5,minPixelRatio:0.5,defaultZoomLevel:0,minZoomLevel:null,maxZoomLevel:null,homeFillsViewer:false,clickTimeThreshold:300,clickDistThreshold:5,dblClickTimeThreshold:300,dblClickDistThreshold:20,springStiffness:6.5,animationTime:1.2,gestureSettingsMouse:{scrollToZoom:true,clickToZoom:true,dblClickToZoom:false,pinchToZoom:false,flickEnabled:false,flickMinSpeed:120,flickMomentum:0.25,pinchRotate:false},gestureSettingsTouch:{scrollToZoom:false,clickToZoom:false,dblClickToZoom:true,pinchToZoom:true,flickEnabled:true,flickMinSpeed:120,flickMomentum:0.25,pinchRotate:false},gestureSettingsPen:{scrollToZoom:false,clickToZoom:true,dblClickToZoom:false,pinchToZoom:false,flickEnabled:false,flickMinSpeed:120,flickMomentum:0.25,pinchRotate:false},gestureSettingsUnknown:{scrollToZoom:false,clickToZoom:false,dblClickToZoom:true,pinchToZoom:true,flickEnabled:true,flickMinSpeed:120,flickMomentum:0.25,pinchRotate:false},zoomPerClick:2,zoomPerScroll:1.2,zoomPerSecond:1.0,blendTime:0,alwaysBlend:false,autoHideControls:true,immediateRender:false,minZoomImageRatio:0.9,maxZoomPixelRatio:1.1,smoothTileEdgesMinZoom:1.1,iOSDevice:isIOSDevice(),pixelsPerWheelLine:40,autoResize:true,preserveImageSizeOnResize:false,minScrollDeltaTime:50,showSequenceControl:true,sequenceControlAnchor:null,preserveViewport:false,preserveOverlays:false,navPrevNextWrap:false,showNavigationControl:true,navigationControlAnchor:null,showZoomControl:true,showHomeControl:true,showFullPageControl:true,showRotationControl:false,controlsFadeDelay:2000,controlsFadeLength:1500,mouseNavEnabled:true,showNavigator:false,navigatorId:null,navigatorPosition:null,navigatorSizeRatio:0.2,navigatorMaintainSizeRatio:false,navigatorTop:null,navigatorLeft:null,navigatorHeight:null,navigatorWidth:null,navigatorAutoResize:true,navigatorAutoFade:true,navigatorRotate:true,degrees:0,opacity:1,compositeOperation:null,placeholderFillStyle:null,showReferenceStrip:false,referenceStripScroll:'horizontal',referenceStripElement:null,referenceStripHeight:null,referenceStripWidth:null,referenceStripPosition:'BOTTOM_LEFT',referenceStripSizeRatio:0.2,collectionRows:3,collectionColumns:0,collectionLayout:'horizontal',collectionMode:false,collectionTileSize:800,collectionTileMargin:80,imageLoaderLimit:0,maxImageCacheCount:200,timeout:30000,useCanvas:true,prefixUrl:"/images/",navImages:{zoomIn:{REST:'zoomin_rest.png',GROUP:'zoomin_grouphover.png',HOVER:'zoomin_hover.png',DOWN:'zoomin_pressed.png'},zoomOut:{REST:'zoomout_rest.png',GROUP:'zoomout_grouphover.png',HOVER:'zoomout_hover.png',DOWN:'zoomout_pressed.png'},home:{REST:'home_rest.png',GROUP:'home_grouphover.png',HOVER:'home_hover.png',DOWN:'home_pressed.png'},fullpage:{REST:'fullpage_rest.png',GROUP:'fullpage_grouphover.png',HOVER:'fullpage_hover.png',DOWN:'fullpage_pressed.png'},rotateleft:{REST:'rotateleft_rest.png',GROUP:'rotateleft_grouphover.png',HOVER:'rotateleft_hover.png',DOWN:'rotateleft_pressed.png'},rotateright:{REST:'rotateright_rest.png',GROUP:'rotateright_grouphover.png',HOVER:'rotateright_hover.png',DOWN:'rotateright_pressed.png'},previous:{REST:'previous_rest.png',GROUP:'previous_grouphover.png',HOVER:'previous_hover.png',DOWN:'previous_pressed.png'},next:{REST:'next_rest.png',GROUP:'next_grouphover.png',HOVER:'next_hover.png',DOWN:'next_pressed.png'}},debugMode:false,debugGridColor:'#437AB2'},SIGNAL:"----seadragon----",delegate:function(object,method){return function(){var args=arguments;if(args===undefined){args=[];}
return method.apply(object,args);};},BROWSERS:{UNKNOWN:0,IE:1,FIREFOX:2,SAFARI:3,CHROME:4,OPERA:5},getElement:function(element){if(typeof(element)=="string"){element=document.getElementById(element);}
return element;},getElementPosition:function(element){var result=new $.Point(),isFixed,offsetParent;element=$.getElement(element);isFixed=$.getElementStyle(element).position=="fixed";offsetParent=getOffsetParent(element,isFixed);while(offsetParent){result.x+=element.offsetLeft;result.y+=element.offsetTop;if(isFixed){result=result.plus($.getPageScroll());}
element=offsetParent;isFixed=$.getElementStyle(element).position=="fixed";offsetParent=getOffsetParent(element,isFixed);}
return result;},getElementOffset:function(element){element=$.getElement(element);var doc=element&&element.ownerDocument,docElement,win,boundingRect={top:0,left:0};if(!doc){return new $.Point();}
docElement=doc.documentElement;if(typeof element.getBoundingClientRect!==typeof undefined){boundingRect=element.getBoundingClientRect();}
win=(doc==doc.window)?doc:(doc.nodeType===9)?doc.defaultView||doc.parentWindow:false;return new $.Point(boundingRect.left+(win.pageXOffset||docElement.scrollLeft)-(docElement.clientLeft||0),boundingRect.top+(win.pageYOffset||docElement.scrollTop)-(docElement.clientTop||0));},getElementSize:function(element){element=$.getElement(element);return new $.Point(element.clientWidth,element.clientHeight);},getElementStyle:document.documentElement.currentStyle?function(element){element=$.getElement(element);return element.currentStyle;}:function(element){element=$.getElement(element);return window.getComputedStyle(element,"");},getCssPropertyWithVendorPrefix:function(property){var memo={};$.getCssPropertyWithVendorPrefix=function(property){if(memo[property]!==undefined){return memo[property];}
var style=document.createElement('div').style;var result=null;if(style[property]!==undefined){result=property;}else{var prefixes=['Webkit','Moz','MS','O','webkit','moz','ms','o'];var suffix=$.capitalizeFirstLetter(property);for(var i=0;i<prefixes.length;i++){var prop=prefixes[i]+suffix;if(style[prop]!==undefined){result=prop;break;}}}
memo[property]=result;return result;};return $.getCssPropertyWithVendorPrefix(property);},capitalizeFirstLetter:function(string){return string.charAt(0).toUpperCase()+string.slice(1);},pointInElement:function(element,point){element=$.getElement(element);var offset=$.getElementOffset(element),size=$.getElementSize(element);return point.x>=offset.x&&point.x<offset.x+size.x&&point.y<offset.y+size.y&&point.y>=offset.y;},getEvent:function(event){if(event){$.getEvent=function(event){return event;};}else{$.getEvent=function(){return window.event;};}
return $.getEvent(event);},getMousePosition:function(event){if(typeof(event.pageX)=="number"){$.getMousePosition=function(event){var result=new $.Point();event=$.getEvent(event);result.x=event.pageX;result.y=event.pageY;return result;};}else if(typeof(event.clientX)=="number"){$.getMousePosition=function(event){var result=new $.Point();event=$.getEvent(event);result.x=event.clientX+
document.body.scrollLeft+
document.documentElement.scrollLeft;result.y=event.clientY+
document.body.scrollTop+
document.documentElement.scrollTop;return result;};}else{throw new Error("Unknown event mouse position, no known technique.");}
return $.getMousePosition(event);},getPageScroll:function(){var docElement=document.documentElement||{},body=document.body||{};if(typeof(window.pageXOffset)=="number"){$.getPageScroll=function(){return new $.Point(window.pageXOffset,window.pageYOffset);};}else if(body.scrollLeft||body.scrollTop){$.getPageScroll=function(){return new $.Point(document.body.scrollLeft,document.body.scrollTop);};}else if(docElement.scrollLeft||docElement.scrollTop){$.getPageScroll=function(){return new $.Point(document.documentElement.scrollLeft,document.documentElement.scrollTop);};}else{return new $.Point(0,0);}
return $.getPageScroll();},setPageScroll:function(scroll){if(typeof(window.scrollTo)!=="undefined"){$.setPageScroll=function(scroll){window.scrollTo(scroll.x,scroll.y);};}else{var originalScroll=$.getPageScroll();if(originalScroll.x===scroll.x&&originalScroll.y===scroll.y){return;}
document.body.scrollLeft=scroll.x;document.body.scrollTop=scroll.y;var currentScroll=$.getPageScroll();if(currentScroll.x!==originalScroll.x&&currentScroll.y!==originalScroll.y){$.setPageScroll=function(scroll){document.body.scrollLeft=scroll.x;document.body.scrollTop=scroll.y;};return;}
document.documentElement.scrollLeft=scroll.x;document.documentElement.scrollTop=scroll.y;currentScroll=$.getPageScroll();if(currentScroll.x!==originalScroll.x&&currentScroll.y!==originalScroll.y){$.setPageScroll=function(scroll){document.documentElement.scrollLeft=scroll.x;document.documentElement.scrollTop=scroll.y;};return;}
$.setPageScroll=function(scroll){};}
return $.setPageScroll(scroll);},getWindowSize:function(){var docElement=document.documentElement||{},body=document.body||{};if(typeof(window.innerWidth)=='number'){$.getWindowSize=function(){return new $.Point(window.innerWidth,window.innerHeight);};}else if(docElement.clientWidth||docElement.clientHeight){$.getWindowSize=function(){return new $.Point(document.documentElement.clientWidth,document.documentElement.clientHeight);};}else if(body.clientWidth||body.clientHeight){$.getWindowSize=function(){return new $.Point(document.body.clientWidth,document.body.clientHeight);};}else{throw new Error("Unknown window size, no known technique.");}
return $.getWindowSize();},makeCenteredNode:function(element){element=$.getElement(element);var wrappers=[$.makeNeutralElement('div'),$.makeNeutralElement('div'),$.makeNeutralElement('div')];$.extend(wrappers[0].style,{display:"table",height:"100%",width:"100%"});$.extend(wrappers[1].style,{display:"table-row"});$.extend(wrappers[2].style,{display:"table-cell",verticalAlign:"middle",textAlign:"center"});wrappers[0].appendChild(wrappers[1]);wrappers[1].appendChild(wrappers[2]);wrappers[2].appendChild(element);return wrappers[0];},makeNeutralElement:function(tagName){var element=document.createElement(tagName),style=element.style;style.background="transparent none";style.border="none";style.margin="0px";style.padding="0px";style.position="static";return element;},now:function(){if(Date.now){$.now=Date.now;}else{$.now=function(){return new Date().getTime();};}
return $.now();},makeTransparentImage:function(src){$.makeTransparentImage=function(src){var img=$.makeNeutralElement("img");img.src=src;return img;};if($.Browser.vendor==$.BROWSERS.IE&&$.Browser.version<7){$.makeTransparentImage=function(src){var img=$.makeNeutralElement("img"),element=null;element=$.makeNeutralElement("span");element.style.display="inline-block";img.onload=function(){element.style.width=element.style.width||img.width+"px";element.style.height=element.style.height||img.height+"px";img.onload=null;img=null;};img.src=src;element.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+
src+
"', sizingMethod='scale')";return element;};}
return $.makeTransparentImage(src);},setElementOpacity:function(element,opacity,usesAlpha){var ieOpacity,ieFilter;element=$.getElement(element);if(usesAlpha&&!$.Browser.alpha){opacity=Math.round(opacity);}
if($.Browser.opacity){element.style.opacity=opacity<1?opacity:"";}else{if(opacity<1){ieOpacity=Math.round(100*opacity);ieFilter="alpha(opacity="+ieOpacity+")";element.style.filter=ieFilter;}else{element.style.filter="";}}},setElementTouchActionNone:function(element){element=$.getElement(element);if(typeof element.style.touchAction!=='undefined'){element.style.touchAction='none';}else if(typeof element.style.msTouchAction!=='undefined'){element.style.msTouchAction='none';}},addClass:function(element,className){element=$.getElement(element);if(!element.className){element.className=className;}else if((' '+element.className+' ').indexOf(' '+className+' ')===-1){element.className+=' '+className;}},indexOf:function(array,searchElement,fromIndex){if(Array.prototype.indexOf){this.indexOf=function(array,searchElement,fromIndex){return array.indexOf(searchElement,fromIndex);};}else{this.indexOf=function(array,searchElement,fromIndex){var i,pivot=(fromIndex)?fromIndex:0,length;if(!array){throw new TypeError();}
length=array.length;if(length===0||pivot>=length){return-1;}
if(pivot<0){pivot=length-Math.abs(pivot);}
for(i=pivot;i<length;i++){if(array[i]===searchElement){return i;}}
return-1;};}
return this.indexOf(array,searchElement,fromIndex);},removeClass:function(element,className){var oldClasses,newClasses=[],i;element=$.getElement(element);oldClasses=element.className.split(/\s+/);for(i=0;i<oldClasses.length;i++){if(oldClasses[i]&&oldClasses[i]!==className){newClasses.push(oldClasses[i]);}}
element.className=newClasses.join(' ');},addEvent:(function(){if(window.addEventListener){return function(element,eventName,handler,useCapture){element=$.getElement(element);element.addEventListener(eventName,handler,useCapture);};}else if(window.attachEvent){return function(element,eventName,handler,useCapture){element=$.getElement(element);element.attachEvent('on'+eventName,handler);};}else{throw new Error("No known event model.");}}()),removeEvent:(function(){if(window.removeEventListener){return function(element,eventName,handler,useCapture){element=$.getElement(element);element.removeEventListener(eventName,handler,useCapture);};}else if(window.detachEvent){return function(element,eventName,handler,useCapture){element=$.getElement(element);element.detachEvent('on'+eventName,handler);};}else{throw new Error("No known event model.");}}()),cancelEvent:function(event){event=$.getEvent(event);if(event.preventDefault){$.cancelEvent=function(event){event.preventDefault();};}else{$.cancelEvent=function(event){event=$.getEvent(event);event.cancel=true;event.returnValue=false;};}
$.cancelEvent(event);},stopEvent:function(event){event=$.getEvent(event);if(event.stopPropagation){$.stopEvent=function(event){event.stopPropagation();};}else{$.stopEvent=function(event){event=$.getEvent(event);event.cancelBubble=true;};}
$.stopEvent(event);},createCallback:function(object,method){var initialArgs=[],i;for(i=2;i<arguments.length;i++){initialArgs.push(arguments[i]);}
return function(){var args=initialArgs.concat([]),i;for(i=0;i<arguments.length;i++){args.push(arguments[i]);}
return method.apply(object,args);};},getUrlParameter:function(key){var value=URLPARAMS[key];return value?value:null;},getUrlProtocol:function(url){var match=url.match(/^([a-z]+:)\/\//i);if(match===null){return window.location.protocol;}
return match[1].toLowerCase();},createAjaxRequest:function(local){var supportActiveX;try{supportActiveX=!!new ActiveXObject("Microsoft.XMLHTTP");}catch(e){supportActiveX=false;}
if(supportActiveX){if(window.XMLHttpRequest){$.createAjaxRequest=function(local){if(local){return new ActiveXObject("Microsoft.XMLHTTP");}
return new XMLHttpRequest();};}else{$.createAjaxRequest=function(){return new ActiveXObject("Microsoft.XMLHTTP");};}}else if(window.XMLHttpRequest){$.createAjaxRequest=function(){return new XMLHttpRequest();};}else{throw new Error("Browser doesn't support XMLHttpRequest.");}
return $.createAjaxRequest(local);},makeAjaxRequest:function(url,onSuccess,onError){var withCredentials;if($.isPlainObject(url)){onSuccess=url.success;onError=url.error;withCredentials=url.withCredentials;url=url.url;}
var protocol=$.getUrlProtocol(url);var request=$.createAjaxRequest(protocol==="file:");if(!$.isFunction(onSuccess)){throw new Error("makeAjaxRequest requires a success callback");}
request.onreadystatechange=function(){if(request.readyState==4){request.onreadystatechange=function(){};if(request.status===200||(request.status===0&&protocol!=="http:"&&protocol!=="https:")){onSuccess(request);}else{$.console.log("AJAX request returned %d: %s",request.status,url);if($.isFunction(onError)){onError(request);}}}};if(withCredentials){request.withCredentials=true;}
try{request.open("GET",url,true);request.send(null);}catch(e){var msg=e.message;var oldIE=$.Browser.vendor==$.BROWSERS.IE&&$.Browser.version<10;if(oldIE&&typeof(e.number)!="undefined"&&e.number==-2147024891){msg+="\nSee http://msdn.microsoft.com/en-us/library/ms537505(v=vs.85).aspx#xdomain";}
$.console.log("%s while making AJAX request: %s",e.name,msg);request.onreadystatechange=function(){};if(window.XDomainRequest){var xdr=new XDomainRequest();if(xdr){xdr.onload=function(e){if($.isFunction(onSuccess)){onSuccess({responseText:xdr.responseText,status:200,statusText:'OK'});}};xdr.onerror=function(e){if($.isFunction(onError)){onError({responseText:xdr.responseText,status:444,statusText:'An error happened. Due to an XDomainRequest deficiency we can not extract any information about this error. Upgrade your browser.'});}};try{xdr.open('GET',url);xdr.send();}catch(e2){if($.isFunction(onError)){onError(request,e);}}}}else{if($.isFunction(onError)){onError(request,e);}}}},jsonp:function(options){var script,url=options.url,head=document.head||document.getElementsByTagName("head")[0]||document.documentElement,jsonpCallback=options.callbackName||'openseadragon'+$.now(),previous=window[jsonpCallback],replace="$1"+jsonpCallback+"$2",callbackParam=options.param||'callback',callback=options.callback;url=url.replace(/(\=)\?(&|$)|\?\?/i,replace);url+=(/\?/.test(url)?"&":"?")+callbackParam+"="+jsonpCallback;window[jsonpCallback]=function(response){if(!previous){try{delete window[jsonpCallback];}catch(e){}}else{window[jsonpCallback]=previous;}
if(callback&&$.isFunction(callback)){callback(response);}};script=document.createElement("script");if(undefined!==options.async||false!==options.async){script.async="async";}
if(options.scriptCharset){script.charset=options.scriptCharset;}
script.src=url;script.onload=script.onreadystatechange=function(_,isAbort){if(isAbort||!script.readyState||/loaded|complete/.test(script.readyState)){script.onload=script.onreadystatechange=null;if(head&&script.parentNode){head.removeChild(script);}
script=undefined;}};head.insertBefore(script,head.firstChild);},createFromDZI:function(){throw "OpenSeadragon.createFromDZI is deprecated, use Viewer.open.";},parseXml:function(string){if(window.DOMParser){$.parseXml=function(string){var xmlDoc=null,parser;parser=new DOMParser();xmlDoc=parser.parseFromString(string,"text/xml");return xmlDoc;};}else if(window.ActiveXObject){$.parseXml=function(string){var xmlDoc=null;xmlDoc=new ActiveXObject("Microsoft.XMLDOM");xmlDoc.async=false;xmlDoc.loadXML(string);return xmlDoc;};}else{throw new Error("Browser doesn't support XML DOM.");}
return $.parseXml(string);},parseJSON:function(string){if(window.JSON&&window.JSON.parse){$.parseJSON=window.JSON.parse;}else{$.parseJSON=function(string){return eval('('+string+')');};}
return $.parseJSON(string);},imageFormatSupported:function(extension){extension=extension?extension:"";return!!FILEFORMATS[extension.toLowerCase()];}});$.Browser={vendor:$.BROWSERS.UNKNOWN,version:0,alpha:true};var FILEFORMATS={"bmp":false,"jpeg":true,"jpg":true,"png":true,"tif":false,"wdp":false},URLPARAMS={};(function(){var app=navigator.appName,ver=navigator.appVersion,ua=navigator.userAgent,regex;switch(navigator.appName){case "Microsoft Internet Explorer":if(!!window.attachEvent&&!!window.ActiveXObject){$.Browser.vendor=$.BROWSERS.IE;$.Browser.version=parseFloat(ua.substring(ua.indexOf("MSIE")+5,ua.indexOf(";",ua.indexOf("MSIE"))));}
break;case "Netscape":if(!!window.addEventListener){if(ua.indexOf("Firefox")>=0){$.Browser.vendor=$.BROWSERS.FIREFOX;$.Browser.version=parseFloat(ua.substring(ua.indexOf("Firefox")+8));}else if(ua.indexOf("Safari")>=0){$.Browser.vendor=ua.indexOf("Chrome")>=0?$.BROWSERS.CHROME:$.BROWSERS.SAFARI;$.Browser.version=parseFloat(ua.substring(ua.substring(0,ua.indexOf("Safari")).lastIndexOf("/")+1,ua.indexOf("Safari")));}else{regex=new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})");if(regex.exec(ua)!==null){$.Browser.vendor=$.BROWSERS.IE;$.Browser.version=parseFloat(RegExp.$1);}}}
break;case "Opera":$.Browser.vendor=$.BROWSERS.OPERA;$.Browser.version=parseFloat(ver);break;}
var query=window.location.search.substring(1),parts=query.split('&'),part,sep,i;for(i=0;i<parts.length;i++){part=parts[i];sep=part.indexOf('=');if(sep>0){URLPARAMS[part.substring(0,sep)]=decodeURIComponent(part.substring(sep+1));}}
$.Browser.alpha=!(($.Browser.vendor==$.BROWSERS.IE&&$.Browser.version<9)||($.Browser.vendor==$.BROWSERS.CHROME&&$.Browser.version<2));$.Browser.opacity=!($.Browser.vendor==$.BROWSERS.IE&&$.Browser.version<9);})();var nullfunction=function(msg){};$.console=window.console||{log:nullfunction,debug:nullfunction,info:nullfunction,warn:nullfunction,error:nullfunction,assert:nullfunction};(function(w){var requestAnimationFrame=w.requestAnimationFrame||w.mozRequestAnimationFrame||w.webkitRequestAnimationFrame||w.msRequestAnimationFrame;var cancelAnimationFrame=w.cancelAnimationFrame||w.mozCancelAnimationFrame||w.webkitCancelAnimationFrame||w.msCancelAnimationFrame;if(requestAnimationFrame&&cancelAnimationFrame){$.requestAnimationFrame=function(){return requestAnimationFrame.apply(w,arguments);};$.cancelAnimationFrame=function(){return cancelAnimationFrame.apply(w,arguments);};}else{var aAnimQueue=[],processing=[],iRequestId=0,iIntervalId;$.requestAnimationFrame=function(callback){aAnimQueue.push([++iRequestId,callback]);if(!iIntervalId){iIntervalId=setInterval(function(){if(aAnimQueue.length){var time=$.now();var temp=processing;processing=aAnimQueue;aAnimQueue=temp;while(processing.length){processing.shift()[1](time);}}else{clearInterval(iIntervalId);iIntervalId=undefined;}},1000/50);}
return iRequestId;};$.cancelAnimationFrame=function(requestId){var i,j;for(i=0,j=aAnimQueue.length;i<j;i+=1){if(aAnimQueue[i][0]===requestId){aAnimQueue.splice(i,1);return;}}
for(i=0,j=processing.length;i<j;i+=1){if(processing[i][0]===requestId){processing.splice(i,1);return;}}};}})(window);function getOffsetParent(element,isFixed){if(isFixed&&element!=document.body){return document.body;}else{return element.offsetParent;}}}(OpenSeadragon));(function($){var fullScreenApi={supportsFullScreen:false,isFullScreen:function(){return false;},getFullScreenElement:function(){return null;},requestFullScreen:function(){},exitFullScreen:function(){},cancelFullScreen:function(){},fullScreenEventName:'',fullScreenErrorEventName:''};if(document.exitFullscreen){fullScreenApi.supportsFullScreen=true;fullScreenApi.getFullScreenElement=function(){return document.fullscreenElement;};fullScreenApi.requestFullScreen=function(element){return element.requestFullscreen();};fullScreenApi.exitFullScreen=function(){document.exitFullscreen();};fullScreenApi.fullScreenEventName="fullscreenchange";fullScreenApi.fullScreenErrorEventName="fullscreenerror";}else if(document.msExitFullscreen){fullScreenApi.supportsFullScreen=true;fullScreenApi.getFullScreenElement=function(){return document.msFullscreenElement;};fullScreenApi.requestFullScreen=function(element){return element.msRequestFullscreen();};fullScreenApi.exitFullScreen=function(){document.msExitFullscreen();};fullScreenApi.fullScreenEventName="MSFullscreenChange";fullScreenApi.fullScreenErrorEventName="MSFullscreenError";}else if(document.webkitExitFullscreen){fullScreenApi.supportsFullScreen=true;fullScreenApi.getFullScreenElement=function(){return document.webkitFullscreenElement;};fullScreenApi.requestFullScreen=function(element){return element.webkitRequestFullscreen();};fullScreenApi.exitFullScreen=function(){document.webkitExitFullscreen();};fullScreenApi.fullScreenEventName="webkitfullscreenchange";fullScreenApi.fullScreenErrorEventName="webkitfullscreenerror";}else if(document.webkitCancelFullScreen){fullScreenApi.supportsFullScreen=true;fullScreenApi.getFullScreenElement=function(){return document.webkitCurrentFullScreenElement;};fullScreenApi.requestFullScreen=function(element){return element.webkitRequestFullScreen();};fullScreenApi.exitFullScreen=function(){document.webkitCancelFullScreen();};fullScreenApi.fullScreenEventName="webkitfullscreenchange";fullScreenApi.fullScreenErrorEventName="webkitfullscreenerror";}else if(document.mozCancelFullScreen){fullScreenApi.supportsFullScreen=true;fullScreenApi.getFullScreenElement=function(){return document.mozFullScreenElement;};fullScreenApi.requestFullScreen=function(element){return element.mozRequestFullScreen();};fullScreenApi.exitFullScreen=function(){document.mozCancelFullScreen();};fullScreenApi.fullScreenEventName="mozfullscreenchange";fullScreenApi.fullScreenErrorEventName="mozfullscreenerror";}
fullScreenApi.isFullScreen=function(){return fullScreenApi.getFullScreenElement()!==null;};fullScreenApi.cancelFullScreen=function(){$.console.error("cancelFullScreen is deprecated. Use exitFullScreen instead.");fullScreenApi.exitFullScreen();};$.extend($,fullScreenApi);})(OpenSeadragon);(function($){$.EventSource=function(){this.events={};};$.EventSource.prototype={addOnceHandler:function(eventName,handler,userData,times){var self=this;times=times||1;var count=0;var onceHandler=function(event){count++;if(count===times){self.removeHandler(eventName,onceHandler);}
handler(event);};this.addHandler(eventName,onceHandler,userData);},addHandler:function(eventName,handler,userData){var events=this.events[eventName];if(!events){this.events[eventName]=events=[];}
if(handler&&$.isFunction(handler)){events[events.length]={handler:handler,userData:userData||null};}},removeHandler:function(eventName,handler){var events=this.events[eventName],handlers=[],i;if(!events){return;}
if($.isArray(events)){for(i=0;i<events.length;i++){if(events[i].handler!==handler){handlers.push(events[i]);}}
this.events[eventName]=handlers;}},removeAllHandlers:function(eventName){if(eventName){this.events[eventName]=[];}else{for(var eventType in this.events){this.events[eventType]=[];}}},getHandler:function(eventName){var events=this.events[eventName];if(!events||!events.length){return null;}
events=events.length===1?[events[0]]:Array.apply(null,events);return function(source,args){var i,length=events.length;for(i=0;i<length;i++){if(events[i]){args.eventSource=source;args.userData=events[i].userData;events[i].handler(args);}}};},raiseEvent:function(eventName,eventArgs){var handler=this.getHandler(eventName);if(handler){if(!eventArgs){eventArgs={};}
handler(this,eventArgs);}}};}(OpenSeadragon));(function($){var MOUSETRACKERS=[];var THIS={};$.MouseTracker=function(options){MOUSETRACKERS.push(this);var args=arguments;if(!$.isPlainObject(options)){options={element:args[0],clickTimeThreshold:args[1],clickDistThreshold:args[2]};}
this.hash=Math.random();this.element=$.getElement(options.element);this.clickTimeThreshold=options.clickTimeThreshold||$.DEFAULT_SETTINGS.clickTimeThreshold;this.clickDistThreshold=options.clickDistThreshold||$.DEFAULT_SETTINGS.clickDistThreshold;this.dblClickTimeThreshold=options.dblClickTimeThreshold||$.DEFAULT_SETTINGS.dblClickTimeThreshold;this.dblClickDistThreshold=options.dblClickDistThreshold||$.DEFAULT_SETTINGS.dblClickDistThreshold;this.userData=options.userData||null;this.stopDelay=options.stopDelay||50;this.enterHandler=options.enterHandler||null;this.exitHandler=options.exitHandler||null;this.pressHandler=options.pressHandler||null;this.nonPrimaryPressHandler=options.nonPrimaryPressHandler||null;this.releaseHandler=options.releaseHandler||null;this.nonPrimaryReleaseHandler=options.nonPrimaryReleaseHandler||null;this.moveHandler=options.moveHandler||null;this.scrollHandler=options.scrollHandler||null;this.clickHandler=options.clickHandler||null;this.dblClickHandler=options.dblClickHandler||null;this.dragHandler=options.dragHandler||null;this.dragEndHandler=options.dragEndHandler||null;this.pinchHandler=options.pinchHandler||null;this.stopHandler=options.stopHandler||null;this.keyDownHandler=options.keyDownHandler||null;this.keyUpHandler=options.keyUpHandler||null;this.keyHandler=options.keyHandler||null;this.focusHandler=options.focusHandler||null;this.blurHandler=options.blurHandler||null;var _this=this;THIS[this.hash]={click:function(event){onClick(_this,event);},dblclick:function(event){onDblClick(_this,event);},keydown:function(event){onKeyDown(_this,event);},keyup:function(event){onKeyUp(_this,event);},keypress:function(event){onKeyPress(_this,event);},focus:function(event){onFocus(_this,event);},blur:function(event){onBlur(_this,event);},wheel:function(event){onWheel(_this,event);},mousewheel:function(event){onMouseWheel(_this,event);},DOMMouseScroll:function(event){onMouseWheel(_this,event);},MozMousePixelScroll:function(event){onMouseWheel(_this,event);},mouseenter:function(event){onMouseEnter(_this,event);},mouseleave:function(event){onMouseLeave(_this,event);},mouseover:function(event){onMouseOver(_this,event);},mouseout:function(event){onMouseOut(_this,event);},mousedown:function(event){onMouseDown(_this,event);},mouseup:function(event){onMouseUp(_this,event);},mouseupcaptured:function(event){onMouseUpCaptured(_this,event);},mousemove:function(event){onMouseMove(_this,event);},mousemovecaptured:function(event){onMouseMoveCaptured(_this,event);},touchstart:function(event){onTouchStart(_this,event);},touchend:function(event){onTouchEnd(_this,event);},touchendcaptured:function(event){onTouchEndCaptured(_this,event);},touchmove:function(event){onTouchMove(_this,event);},touchmovecaptured:function(event){onTouchMoveCaptured(_this,event);},touchcancel:function(event){onTouchCancel(_this,event);},gesturestart:function(event){onGestureStart(_this,event);},gesturechange:function(event){onGestureChange(_this,event);},pointerover:function(event){onPointerOver(_this,event);},MSPointerOver:function(event){onPointerOver(_this,event);},pointerout:function(event){onPointerOut(_this,event);},MSPointerOut:function(event){onPointerOut(_this,event);},pointerdown:function(event){onPointerDown(_this,event);},MSPointerDown:function(event){onPointerDown(_this,event);},pointerup:function(event){onPointerUp(_this,event);},MSPointerUp:function(event){onPointerUp(_this,event);},pointermove:function(event){onPointerMove(_this,event);},MSPointerMove:function(event){onPointerMove(_this,event);},pointercancel:function(event){onPointerCancel(_this,event);},MSPointerCancel:function(event){onPointerCancel(_this,event);},pointerupcaptured:function(event){onPointerUpCaptured(_this,event);},pointermovecaptured:function(event){onPointerMoveCaptured(_this,event);},tracking:false,activePointersLists:[],lastClickPos:null,dblClickTimeOut:null,pinchGPoints:[],lastPinchDist:0,currentPinchDist:0,lastPinchCenter:null,currentPinchCenter:null};if(!options.startDisabled){this.setTracking(true);}};$.MouseTracker.prototype={destroy:function(){var i;stopTracking(this);this.element=null;for(i=0;i<MOUSETRACKERS.length;i++){if(MOUSETRACKERS[i]===this){MOUSETRACKERS.splice(i,1);break;}}
THIS[this.hash]=null;delete THIS[this.hash];},isTracking:function(){return THIS[this.hash].tracking;},setTracking:function(track){if(track){startTracking(this);}else{stopTracking(this);}
return this;},getActivePointersListByType:function(type){var delegate=THIS[this.hash],i,len=delegate.activePointersLists.length,list;for(i=0;i<len;i++){if(delegate.activePointersLists[i].type===type){return delegate.activePointersLists[i];}}
list=new $.MouseTracker.GesturePointList(type);delegate.activePointersLists.push(list);return list;},getActivePointerCount:function(){var delegate=THIS[this.hash],i,len=delegate.activePointersLists.length,count=0;for(i=0;i<len;i++){count+=delegate.activePointersLists[i].getLength();}
return count;},enterHandler:function(){},exitHandler:function(){},pressHandler:function(){},nonPrimaryPressHandler:function(){},releaseHandler:function(){},nonPrimaryReleaseHandler:function(){},moveHandler:function(){},scrollHandler:function(){},clickHandler:function(){},dblClickHandler:function(){},dragHandler:function(){},dragEndHandler:function(){},pinchHandler:function(){},stopHandler:function(){},keyDownHandler:function(){},keyUpHandler:function(){},keyHandler:function(){},focusHandler:function(){},blurHandler:function(){}};$.MouseTracker.gesturePointVelocityTracker=(function(){var trackerPoints=[],intervalId=0,lastTime=0;var _generateGuid=function(tracker,gPoint){return tracker.hash.toString()+gPoint.type+gPoint.id.toString();};var _doTracking=function(){var i,len=trackerPoints.length,trackPoint,gPoint,now=$.now(),elapsedTime,distance,speed;elapsedTime=now-lastTime;lastTime=now;for(i=0;i<len;i++){trackPoint=trackerPoints[i];gPoint=trackPoint.gPoint;gPoint.direction=Math.atan2(gPoint.currentPos.y-trackPoint.lastPos.y,gPoint.currentPos.x-trackPoint.lastPos.x);distance=trackPoint.lastPos.distanceTo(gPoint.currentPos);trackPoint.lastPos=gPoint.currentPos;speed=1000*distance/(elapsedTime+1);gPoint.speed=0.75*speed+0.25*gPoint.speed;}};var addPoint=function(tracker,gPoint){var guid=_generateGuid(tracker,gPoint);trackerPoints.push({guid:guid,gPoint:gPoint,lastPos:gPoint.currentPos});if(trackerPoints.length===1){lastTime=$.now();intervalId=window.setInterval(_doTracking,50);}};var removePoint=function(tracker,gPoint){var guid=_generateGuid(tracker,gPoint),i,len=trackerPoints.length;for(i=0;i<len;i++){if(trackerPoints[i].guid===guid){trackerPoints.splice(i,1);len--;if(len===0){window.clearInterval(intervalId);}
break;}}};return{addPoint:addPoint,removePoint:removePoint};})();$.MouseTracker.captureElement=document;$.MouseTracker.wheelEventName=($.Browser.vendor==$.BROWSERS.IE&&$.Browser.version>8)||('onwheel'in document.createElement('div'))?'wheel':document.onmousewheel!==undefined?'mousewheel':'DOMMouseScroll';$.MouseTracker.supportsMouseCapture=(function(){var divElement=document.createElement('div');return $.isFunction(divElement.setCapture)&&$.isFunction(divElement.releaseCapture);}());$.MouseTracker.subscribeEvents=["click","dblclick","keydown","keyup","keypress","focus","blur",$.MouseTracker.wheelEventName];if($.MouseTracker.wheelEventName=="DOMMouseScroll"){$.MouseTracker.subscribeEvents.push("MozMousePixelScroll");}
if(window.PointerEvent&&(window.navigator.pointerEnabled||$.Browser.vendor!==$.BROWSERS.IE)){$.MouseTracker.havePointerEvents=true;$.MouseTracker.subscribeEvents.push("pointerover","pointerout","pointerdown","pointerup","pointermove","pointercancel");$.MouseTracker.unprefixedPointerEvents=true;if(navigator.maxTouchPoints){$.MouseTracker.maxTouchPoints=navigator.maxTouchPoints;}else{$.MouseTracker.maxTouchPoints=0;}
$.MouseTracker.haveMouseEnter=false;}else if(window.MSPointerEvent&&window.navigator.msPointerEnabled){$.MouseTracker.havePointerEvents=true;$.MouseTracker.subscribeEvents.push("MSPointerOver","MSPointerOut","MSPointerDown","MSPointerUp","MSPointerMove","MSPointerCancel");$.MouseTracker.unprefixedPointerEvents=false;if(navigator.msMaxTouchPoints){$.MouseTracker.maxTouchPoints=navigator.msMaxTouchPoints;}else{$.MouseTracker.maxTouchPoints=0;}
$.MouseTracker.haveMouseEnter=false;}else{$.MouseTracker.havePointerEvents=false;if($.Browser.vendor===$.BROWSERS.IE&&$.Browser.version<9){$.MouseTracker.subscribeEvents.push("mouseenter","mouseleave");$.MouseTracker.haveMouseEnter=true;}else{$.MouseTracker.subscribeEvents.push("mouseover","mouseout");$.MouseTracker.haveMouseEnter=false;}
$.MouseTracker.subscribeEvents.push("mousedown","mouseup","mousemove");if('ontouchstart'in window){$.MouseTracker.subscribeEvents.push("touchstart","touchend","touchmove","touchcancel");}
if('ongesturestart'in window){$.MouseTracker.subscribeEvents.push("gesturestart","gesturechange");}
$.MouseTracker.mousePointerId="legacy-mouse";$.MouseTracker.maxTouchPoints=10;}
$.MouseTracker.GesturePointList=function(type){this._gPoints=[];this.type=type;this.buttons=0;this.contacts=0;this.clicks=0;this.captureCount=0;};$.MouseTracker.GesturePointList.prototype={getLength:function(){return this._gPoints.length;},asArray:function(){return this._gPoints;},add:function(gp){return this._gPoints.push(gp);},removeById:function(id){var i,len=this._gPoints.length;for(i=0;i<len;i++){if(this._gPoints[i].id===id){this._gPoints.splice(i,1);break;}}
return this._gPoints.length;},getByIndex:function(index){if(index<this._gPoints.length){return this._gPoints[index];}
return null;},getById:function(id){var i,len=this._gPoints.length;for(i=0;i<len;i++){if(this._gPoints[i].id===id){return this._gPoints[i];}}
return null;},getPrimary:function(id){var i,len=this._gPoints.length;for(i=0;i<len;i++){if(this._gPoints[i].isPrimary){return this._gPoints[i];}}
return null;}};function clearTrackedPointers(tracker){var delegate=THIS[tracker.hash],i,pointerListCount=delegate.activePointersLists.length;for(i=0;i<pointerListCount;i++){if(delegate.activePointersLists[i].captureCount>0){$.removeEvent($.MouseTracker.captureElement,'mousemove',delegate.mousemovecaptured,true);$.removeEvent($.MouseTracker.captureElement,'mouseup',delegate.mouseupcaptured,true);$.removeEvent($.MouseTracker.captureElement,$.MouseTracker.unprefixedPointerEvents?'pointermove':'MSPointerMove',delegate.pointermovecaptured,true);$.removeEvent($.MouseTracker.captureElement,$.MouseTracker.unprefixedPointerEvents?'pointerup':'MSPointerUp',delegate.pointerupcaptured,true);$.removeEvent($.MouseTracker.captureElement,'touchmove',delegate.touchmovecaptured,true);$.removeEvent($.MouseTracker.captureElement,'touchend',delegate.touchendcaptured,true);delegate.activePointersLists[i].captureCount=0;}}
for(i=0;i<pointerListCount;i++){delegate.activePointersLists.pop();}}
function startTracking(tracker){var delegate=THIS[tracker.hash],event,i;if(!delegate.tracking){for(i=0;i<$.MouseTracker.subscribeEvents.length;i++){event=$.MouseTracker.subscribeEvents[i];$.addEvent(tracker.element,event,delegate[event],false);}
clearTrackedPointers(tracker);delegate.tracking=true;}}
function stopTracking(tracker){var delegate=THIS[tracker.hash],event,i;if(delegate.tracking){for(i=0;i<$.MouseTracker.subscribeEvents.length;i++){event=$.MouseTracker.subscribeEvents[i];$.removeEvent(tracker.element,event,delegate[event],false);}
clearTrackedPointers(tracker);delegate.tracking=false;}}
function getCaptureEventParams(tracker,pointerType){var delegate=THIS[tracker.hash];if(pointerType==='pointerevent'){return{upName:$.MouseTracker.unprefixedPointerEvents?'pointerup':'MSPointerUp',upHandler:delegate.pointerupcaptured,moveName:$.MouseTracker.unprefixedPointerEvents?'pointermove':'MSPointerMove',moveHandler:delegate.pointermovecaptured};}else if(pointerType==='mouse'){return{upName:'mouseup',upHandler:delegate.mouseupcaptured,moveName:'mousemove',moveHandler:delegate.mousemovecaptured};}else if(pointerType==='touch'){return{upName:'touchend',upHandler:delegate.touchendcaptured,moveName:'touchmove',moveHandler:delegate.touchmovecaptured};}else{throw new Error("MouseTracker.getCaptureEventParams: Unknown pointer type.");}}
function capturePointer(tracker,pointerType,pointerCount){var pointsList=tracker.getActivePointersListByType(pointerType),eventParams;pointsList.captureCount+=(pointerCount||1);if(pointsList.captureCount===1){if($.Browser.vendor===$.BROWSERS.IE&&$.Browser.version<9){tracker.element.setCapture(true);}else{eventParams=getCaptureEventParams(tracker,$.MouseTracker.havePointerEvents?'pointerevent':pointerType);if(isInIframe&&canAccessEvents(window.top)){$.addEvent(window.top,eventParams.upName,eventParams.upHandler,true);}
$.addEvent($.MouseTracker.captureElement,eventParams.upName,eventParams.upHandler,true);$.addEvent($.MouseTracker.captureElement,eventParams.moveName,eventParams.moveHandler,true);}}}
function releasePointer(tracker,pointerType,pointerCount){var pointsList=tracker.getActivePointersListByType(pointerType),eventParams;pointsList.captureCount-=(pointerCount||1);if(pointsList.captureCount===0){if($.Browser.vendor===$.BROWSERS.IE&&$.Browser.version<9){tracker.element.releaseCapture();}else{eventParams=getCaptureEventParams(tracker,$.MouseTracker.havePointerEvents?'pointerevent':pointerType);if(isInIframe&&canAccessEvents(window.top)){$.removeEvent(window.top,eventParams.upName,eventParams.upHandler,true);}
$.removeEvent($.MouseTracker.captureElement,eventParams.moveName,eventParams.moveHandler,true);$.removeEvent($.MouseTracker.captureElement,eventParams.upName,eventParams.upHandler,true);}}}
function getPointerType(event){var pointerTypeStr;if($.MouseTracker.unprefixedPointerEvents){pointerTypeStr=event.pointerType;}else{switch(event.pointerType)
{case 0x00000002:pointerTypeStr='touch';break;case 0x00000003:pointerTypeStr='pen';break;case 0x00000004:pointerTypeStr='mouse';break;default:pointerTypeStr='';}}
return pointerTypeStr;}
function getMouseAbsolute(event){return $.getMousePosition(event);}
function getMouseRelative(event,element){return getPointRelativeToAbsolute(getMouseAbsolute(event),element);}
function getPointRelativeToAbsolute(point,element){var offset=$.getElementOffset(element);return point.minus(offset);}
function getCenterPoint(point1,point2){return new $.Point((point1.x+point2.x)/2,(point1.y+point2.y)/2);}
function onClick(tracker,event){if(tracker.clickHandler){$.cancelEvent(event);}}
function onDblClick(tracker,event){if(tracker.dblClickHandler){$.cancelEvent(event);}}
function onKeyDown(tracker,event){var propagate;if(tracker.keyDownHandler){event=$.getEvent(event);propagate=tracker.keyDownHandler({eventSource:tracker,keyCode:event.keyCode?event.keyCode:event.charCode,ctrl:event.ctrlKey,shift:event.shiftKey,alt:event.altKey,meta:event.metaKey,originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(!propagate){$.cancelEvent(event);}}}
function onKeyUp(tracker,event){var propagate;if(tracker.keyUpHandler){event=$.getEvent(event);propagate=tracker.keyUpHandler({eventSource:tracker,keyCode:event.keyCode?event.keyCode:event.charCode,ctrl:event.ctrlKey,shift:event.shiftKey,alt:event.altKey,meta:event.metaKey,originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(!propagate){$.cancelEvent(event);}}}
function onKeyPress(tracker,event){var propagate;if(tracker.keyHandler){event=$.getEvent(event);propagate=tracker.keyHandler({eventSource:tracker,keyCode:event.keyCode?event.keyCode:event.charCode,ctrl:event.ctrlKey,shift:event.shiftKey,alt:event.altKey,meta:event.metaKey,originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(!propagate){$.cancelEvent(event);}}}
function onFocus(tracker,event){var propagate;if(tracker.focusHandler){event=$.getEvent(event);propagate=tracker.focusHandler({eventSource:tracker,originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}
function onBlur(tracker,event){var propagate;if(tracker.blurHandler){event=$.getEvent(event);propagate=tracker.blurHandler({eventSource:tracker,originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}
function onWheel(tracker,event){handleWheelEvent(tracker,event,event);}
function onMouseWheel(tracker,event){event=$.getEvent(event);var simulatedEvent={target:event.target||event.srcElement,type:"wheel",shiftKey:event.shiftKey||false,clientX:event.clientX,clientY:event.clientY,pageX:event.pageX?event.pageX:event.clientX,pageY:event.pageY?event.pageY:event.clientY,deltaMode:event.type=="MozMousePixelScroll"?0:1,deltaX:0,deltaZ:0};if($.MouseTracker.wheelEventName=="mousewheel"){simulatedEvent.deltaY=-1/$.DEFAULT_SETTINGS.pixelsPerWheelLine*event.wheelDelta;}else{simulatedEvent.deltaY=event.detail;}
handleWheelEvent(tracker,simulatedEvent,event);}
function handleWheelEvent(tracker,event,originalEvent){var nDelta=0,propagate;nDelta=event.deltaY<0?1:-1;if(tracker.scrollHandler){propagate=tracker.scrollHandler({eventSource:tracker,pointerType:'mouse',position:getMouseRelative(event,tracker.element),scroll:nDelta,shift:event.shiftKey,isTouchEvent:false,originalEvent:originalEvent,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(originalEvent);}}}
function isParentChild(parent,child)
{if(parent===child){return false;}
while(child&&child!==parent){child=child.parentNode;}
return child===parent;}
function onMouseEnter(tracker,event){event=$.getEvent(event);handleMouseEnter(tracker,event);}
function onMouseOver(tracker,event){event=$.getEvent(event);if(event.currentTarget===event.relatedTarget||isParentChild(event.currentTarget,event.relatedTarget)){return;}
handleMouseEnter(tracker,event);}
function handleMouseEnter(tracker,event){var gPoint={id:$.MouseTracker.mousePointerId,type:'mouse',isPrimary:true,currentPos:getMouseAbsolute(event),currentTime:$.now()};updatePointersEnter(tracker,event,[gPoint]);}
function onMouseLeave(tracker,event){event=$.getEvent(event);handleMouseExit(tracker,event);}
function onMouseOut(tracker,event){event=$.getEvent(event);if(event.currentTarget===event.relatedTarget||isParentChild(event.currentTarget,event.relatedTarget)){return;}
handleMouseExit(tracker,event);}
function handleMouseExit(tracker,event){var gPoint={id:$.MouseTracker.mousePointerId,type:'mouse',isPrimary:true,currentPos:getMouseAbsolute(event),currentTime:$.now()};updatePointersExit(tracker,event,[gPoint]);}
function getStandardizedButton(button){if($.Browser.vendor===$.BROWSERS.IE&&$.Browser.version<9){if(button===1){return 0;}else if(button===2){return 2;}else if(button===4){return 1;}else{return-1;}}else{return button;}}
function onMouseDown(tracker,event){var gPoint;event=$.getEvent(event);gPoint={id:$.MouseTracker.mousePointerId,type:'mouse',isPrimary:true,currentPos:getMouseAbsolute(event),currentTime:$.now()};if(updatePointersDown(tracker,event,[gPoint],getStandardizedButton(event.button))){$.stopEvent(event);capturePointer(tracker,'mouse');}
if(tracker.clickHandler||tracker.dblClickHandler||tracker.pressHandler||tracker.dragHandler||tracker.dragEndHandler){$.cancelEvent(event);}}
function onMouseUp(tracker,event){handleMouseUp(tracker,event);}
function onMouseUpCaptured(tracker,event){handleMouseUp(tracker,event);$.stopEvent(event);}
function handleMouseUp(tracker,event){var gPoint;event=$.getEvent(event);gPoint={id:$.MouseTracker.mousePointerId,type:'mouse',isPrimary:true,currentPos:getMouseAbsolute(event),currentTime:$.now()};if(updatePointersUp(tracker,event,[gPoint],getStandardizedButton(event.button))){releasePointer(tracker,'mouse');}}
function onMouseMove(tracker,event){handleMouseMove(tracker,event);}
function onMouseMoveCaptured(tracker,event){handleMouseMove(tracker,event);$.stopEvent(event);}
function handleMouseMove(tracker,event){var gPoint;event=$.getEvent(event);gPoint={id:$.MouseTracker.mousePointerId,type:'mouse',isPrimary:true,currentPos:getMouseAbsolute(event),currentTime:$.now()};updatePointersMove(tracker,event,[gPoint]);}
function abortTouchContacts(tracker,event,pointsList){var i,gPointCount=pointsList.getLength(),abortGPoints=[];for(i=0;i<gPointCount;i++){abortGPoints.push(pointsList.getByIndex(i));}
if(abortGPoints.length>0){updatePointersUp(tracker,event,abortGPoints,0);pointsList.captureCount=1;releasePointer(tracker,'touch');updatePointersExit(tracker,event,abortGPoints);}}
function onTouchStart(tracker,event){var time,i,j,touchCount=event.changedTouches.length,gPoints=[],parentGPoints,pointsList=tracker.getActivePointersListByType('touch');time=$.now();if(pointsList.getLength()>event.touches.length-touchCount){$.console.warn('Tracked touch contact count doesn\'t match event.touches.length. Removing all tracked touch pointers.');abortTouchContacts(tracker,event,pointsList);}
for(i=0;i<touchCount;i++){gPoints.push({id:event.changedTouches[i].identifier,type:'touch',currentPos:getMouseAbsolute(event.changedTouches[i]),currentTime:time});}
updatePointersEnter(tracker,event,gPoints);for(i=0;i<MOUSETRACKERS.length;i++){if(MOUSETRACKERS[i]!==tracker&&MOUSETRACKERS[i].isTracking()&&isParentChild(MOUSETRACKERS[i].element,tracker.element)){parentGPoints=[];for(j=0;j<touchCount;j++){parentGPoints.push({id:event.changedTouches[j].identifier,type:'touch',currentPos:getMouseAbsolute(event.changedTouches[j]),currentTime:time});}
updatePointersEnter(MOUSETRACKERS[i],event,parentGPoints);}}
if(updatePointersDown(tracker,event,gPoints,0)){$.stopEvent(event);capturePointer(tracker,'touch',touchCount);}
$.cancelEvent(event);}
function onTouchEnd(tracker,event){handleTouchEnd(tracker,event);}
function onTouchEndCaptured(tracker,event){handleTouchEnd(tracker,event);$.stopEvent(event);}
function handleTouchEnd(tracker,event){var time,i,j,touchCount=event.changedTouches.length,gPoints=[],parentGPoints;time=$.now();for(i=0;i<touchCount;i++){gPoints.push({id:event.changedTouches[i].identifier,type:'touch',currentPos:getMouseAbsolute(event.changedTouches[i]),currentTime:time});}
if(updatePointersUp(tracker,event,gPoints,0)){releasePointer(tracker,'touch',touchCount);}
updatePointersExit(tracker,event,gPoints);for(i=0;i<MOUSETRACKERS.length;i++){if(MOUSETRACKERS[i]!==tracker&&MOUSETRACKERS[i].isTracking()&&isParentChild(MOUSETRACKERS[i].element,tracker.element)){parentGPoints=[];for(j=0;j<touchCount;j++){parentGPoints.push({id:event.changedTouches[j].identifier,type:'touch',currentPos:getMouseAbsolute(event.changedTouches[j]),currentTime:time});}
updatePointersExit(MOUSETRACKERS[i],event,parentGPoints);}}
$.cancelEvent(event);}
function onTouchMove(tracker,event){handleTouchMove(tracker,event);}
function onTouchMoveCaptured(tracker,event){handleTouchMove(tracker,event);$.stopEvent(event);}
function handleTouchMove(tracker,event){var i,touchCount=event.changedTouches.length,gPoints=[];for(i=0;i<touchCount;i++){gPoints.push({id:event.changedTouches[i].identifier,type:'touch',currentPos:getMouseAbsolute(event.changedTouches[i]),currentTime:$.now()});}
updatePointersMove(tracker,event,gPoints);$.cancelEvent(event);}
function onTouchCancel(tracker,event){var i,touchCount=event.changedTouches.length,gPoints=[],pointsList=tracker.getActivePointersListByType('touch');abortTouchContacts(tracker,event,pointsList);}
function onGestureStart(tracker,event){event.stopPropagation();event.preventDefault();return false;}
function onGestureChange(tracker,event){event.stopPropagation();event.preventDefault();return false;}
function onPointerOver(tracker,event){var gPoint;if(event.currentTarget===event.relatedTarget||isParentChild(event.currentTarget,event.relatedTarget)){return;}
gPoint={id:event.pointerId,type:getPointerType(event),isPrimary:event.isPrimary,currentPos:getMouseAbsolute(event),currentTime:$.now()};updatePointersEnter(tracker,event,[gPoint]);}
function onPointerOut(tracker,event){var gPoint;if(event.currentTarget===event.relatedTarget||isParentChild(event.currentTarget,event.relatedTarget)){return;}
gPoint={id:event.pointerId,type:getPointerType(event),isPrimary:event.isPrimary,currentPos:getMouseAbsolute(event),currentTime:$.now()};updatePointersExit(tracker,event,[gPoint]);}
function onPointerDown(tracker,event){var gPoint;gPoint={id:event.pointerId,type:getPointerType(event),isPrimary:event.isPrimary,currentPos:getMouseAbsolute(event),currentTime:$.now()};if(updatePointersDown(tracker,event,[gPoint],event.button)){$.stopEvent(event);capturePointer(tracker,gPoint.type);}
if(tracker.clickHandler||tracker.dblClickHandler||tracker.pressHandler||tracker.dragHandler||tracker.dragEndHandler||tracker.pinchHandler){$.cancelEvent(event);}}
function onPointerUp(tracker,event){handlePointerUp(tracker,event);}
function onPointerUpCaptured(tracker,event){var pointsList=tracker.getActivePointersListByType(getPointerType(event));if(pointsList.getById(event.pointerId)){handlePointerUp(tracker,event);}
$.stopEvent(event);}
function handlePointerUp(tracker,event){var gPoint;gPoint={id:event.pointerId,type:getPointerType(event),isPrimary:event.isPrimary,currentPos:getMouseAbsolute(event),currentTime:$.now()};if(updatePointersUp(tracker,event,[gPoint],event.button)){releasePointer(tracker,gPoint.type);}}
function onPointerMove(tracker,event){handlePointerMove(tracker,event);}
function onPointerMoveCaptured(tracker,event){var pointsList=tracker.getActivePointersListByType(getPointerType(event));if(pointsList.getById(event.pointerId)){handlePointerMove(tracker,event);}
$.stopEvent(event);}
function handlePointerMove(tracker,event){var gPoint;gPoint={id:event.pointerId,type:getPointerType(event),isPrimary:event.isPrimary,currentPos:getMouseAbsolute(event),currentTime:$.now()};updatePointersMove(tracker,event,[gPoint]);}
function onPointerCancel(tracker,event){var gPoint;gPoint={id:event.pointerId,type:getPointerType(event)};updatePointersCancel(tracker,event,[gPoint]);}
function startTrackingPointer(pointsList,gPoint){if(!gPoint.hasOwnProperty('isPrimary')){if(pointsList.getLength()===0){gPoint.isPrimary=true;}else{gPoint.isPrimary=false;}}
gPoint.speed=0;gPoint.direction=0;gPoint.contactPos=gPoint.currentPos;gPoint.contactTime=gPoint.currentTime;gPoint.lastPos=gPoint.currentPos;gPoint.lastTime=gPoint.currentTime;return pointsList.add(gPoint);}
function stopTrackingPointer(pointsList,gPoint){var listLength,primaryPoint;if(pointsList.getById(gPoint.id)){listLength=pointsList.removeById(gPoint.id);if(!gPoint.hasOwnProperty('isPrimary')){primaryPoint=pointsList.getPrimary();if(!primaryPoint){primaryPoint=pointsList.getByIndex(0);if(primaryPoint){primaryPoint.isPrimary=true;}}}}else{listLength=pointsList.getLength();}
return listLength;}
function updatePointersEnter(tracker,event,gPoints){var pointsList=tracker.getActivePointersListByType(gPoints[0].type),i,gPointCount=gPoints.length,curGPoint,updateGPoint,propagate;for(i=0;i<gPointCount;i++){curGPoint=gPoints[i];updateGPoint=pointsList.getById(curGPoint.id);if(updateGPoint){updateGPoint.insideElement=true;updateGPoint.lastPos=updateGPoint.currentPos;updateGPoint.lastTime=updateGPoint.currentTime;updateGPoint.currentPos=curGPoint.currentPos;updateGPoint.currentTime=curGPoint.currentTime;curGPoint=updateGPoint;}else{curGPoint.captured=false;curGPoint.insideElementPressed=false;curGPoint.insideElement=true;startTrackingPointer(pointsList,curGPoint);}
if(tracker.enterHandler){propagate=tracker.enterHandler({eventSource:tracker,pointerType:curGPoint.type,position:getPointRelativeToAbsolute(curGPoint.currentPos,tracker.element),buttons:pointsList.buttons,pointers:tracker.getActivePointerCount(),insideElementPressed:curGPoint.insideElementPressed,buttonDownAny:pointsList.buttons!==0,isTouchEvent:curGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}}
function updatePointersExit(tracker,event,gPoints){var delegate=THIS[tracker.hash],pointsList=tracker.getActivePointersListByType(gPoints[0].type),i,gPointCount=gPoints.length,curGPoint,updateGPoint,propagate;for(i=0;i<gPointCount;i++){curGPoint=gPoints[i];updateGPoint=pointsList.getById(curGPoint.id);if(updateGPoint){if(updateGPoint.captured){updateGPoint.insideElement=false;updateGPoint.lastPos=updateGPoint.currentPos;updateGPoint.lastTime=updateGPoint.currentTime;updateGPoint.currentPos=curGPoint.currentPos;updateGPoint.currentTime=curGPoint.currentTime;}else{stopTrackingPointer(pointsList,updateGPoint);}
curGPoint=updateGPoint;}
if(tracker.exitHandler){propagate=tracker.exitHandler({eventSource:tracker,pointerType:curGPoint.type,position:getPointRelativeToAbsolute(curGPoint.currentPos,tracker.element),buttons:pointsList.buttons,pointers:tracker.getActivePointerCount(),insideElementPressed:updateGPoint?updateGPoint.insideElementPressed:false,buttonDownAny:pointsList.buttons!==0,isTouchEvent:curGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}}
function updatePointersDown(tracker,event,gPoints,buttonChanged){var delegate=THIS[tracker.hash],propagate,pointsList=tracker.getActivePointersListByType(gPoints[0].type),i,gPointCount=gPoints.length,curGPoint,updateGPoint;if(typeof event.buttons!=='undefined'){pointsList.buttons=event.buttons;}else{if($.Browser.vendor===$.BROWSERS.IE&&$.Browser.version<9){if(buttonChanged===0){pointsList.buttons+=1;}else if(buttonChanged===1){pointsList.buttons+=4;}else if(buttonChanged===2){pointsList.buttons+=2;}else if(buttonChanged===3){pointsList.buttons+=8;}else if(buttonChanged===4){pointsList.buttons+=16;}else if(buttonChanged===5){pointsList.buttons+=32;}}else{if(buttonChanged===0){pointsList.buttons|=1;}else if(buttonChanged===1){pointsList.buttons|=4;}else if(buttonChanged===2){pointsList.buttons|=2;}else if(buttonChanged===3){pointsList.buttons|=8;}else if(buttonChanged===4){pointsList.buttons|=16;}else if(buttonChanged===5){pointsList.buttons|=32;}}}
if(buttonChanged!==0){if(tracker.nonPrimaryPressHandler){propagate=tracker.nonPrimaryPressHandler({eventSource:tracker,pointerType:gPoints[0].type,position:getPointRelativeToAbsolute(gPoints[0].currentPos,tracker.element),button:buttonChanged,buttons:pointsList.buttons,isTouchEvent:gPoints[0].type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
return false;}
for(i=0;i<gPointCount;i++){curGPoint=gPoints[i];updateGPoint=pointsList.getById(curGPoint.id);if(updateGPoint){updateGPoint.captured=true;updateGPoint.insideElementPressed=true;updateGPoint.insideElement=true;updateGPoint.contactPos=curGPoint.currentPos;updateGPoint.contactTime=curGPoint.currentTime;updateGPoint.lastPos=updateGPoint.currentPos;updateGPoint.lastTime=updateGPoint.currentTime;updateGPoint.currentPos=curGPoint.currentPos;updateGPoint.currentTime=curGPoint.currentTime;curGPoint=updateGPoint;}else{curGPoint.captured=true;curGPoint.insideElementPressed=true;curGPoint.insideElement=true;startTrackingPointer(pointsList,curGPoint);}
pointsList.contacts++;if(tracker.dragHandler||tracker.dragEndHandler||tracker.pinchHandler){$.MouseTracker.gesturePointVelocityTracker.addPoint(tracker,curGPoint);}
if(pointsList.contacts===1){if(tracker.pressHandler){propagate=tracker.pressHandler({eventSource:tracker,pointerType:curGPoint.type,position:getPointRelativeToAbsolute(curGPoint.contactPos,tracker.element),buttons:pointsList.buttons,isTouchEvent:curGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}else if(pointsList.contacts===2){if(tracker.pinchHandler&&curGPoint.type==='touch'){delegate.pinchGPoints=pointsList.asArray();delegate.lastPinchDist=delegate.currentPinchDist=delegate.pinchGPoints[0].currentPos.distanceTo(delegate.pinchGPoints[1].currentPos);delegate.lastPinchCenter=delegate.currentPinchCenter=getCenterPoint(delegate.pinchGPoints[0].currentPos,delegate.pinchGPoints[1].currentPos);}}}
return true;}
function updatePointersUp(tracker,event,gPoints,buttonChanged){var delegate=THIS[tracker.hash],pointsList=tracker.getActivePointersListByType(gPoints[0].type),propagate,insideElementReleased,releasePoint,releaseTime,i,gPointCount=gPoints.length,curGPoint,updateGPoint,releaseCapture=false,wasCaptured=false,quick;if(typeof event.buttons!=='undefined'){pointsList.buttons=event.buttons;}else{if($.Browser.vendor===$.BROWSERS.IE&&$.Browser.version<9){if(buttonChanged===0){pointsList.buttons-=1;}else if(buttonChanged===1){pointsList.buttons-=4;}else if(buttonChanged===2){pointsList.buttons-=2;}else if(buttonChanged===3){pointsList.buttons-=8;}else if(buttonChanged===4){pointsList.buttons-=16;}else if(buttonChanged===5){pointsList.buttons-=32;}}else{if(buttonChanged===0){pointsList.buttons^=~1;}else if(buttonChanged===1){pointsList.buttons^=~4;}else if(buttonChanged===2){pointsList.buttons^=~2;}else if(buttonChanged===3){pointsList.buttons^=~8;}else if(buttonChanged===4){pointsList.buttons^=~16;}else if(buttonChanged===5){pointsList.buttons^=~32;}}}
if(buttonChanged!==0){if(tracker.nonPrimaryReleaseHandler){propagate=tracker.nonPrimaryReleaseHandler({eventSource:tracker,pointerType:gPoints[0].type,position:getPointRelativeToAbsolute(gPoints[0].currentPos,tracker.element),button:buttonChanged,buttons:pointsList.buttons,isTouchEvent:gPoints[0].type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
return false;}
for(i=0;i<gPointCount;i++){curGPoint=gPoints[i];updateGPoint=pointsList.getById(curGPoint.id);if(updateGPoint){if(updateGPoint.captured){updateGPoint.captured=false;releaseCapture=true;wasCaptured=true;}
updateGPoint.lastPos=updateGPoint.currentPos;updateGPoint.lastTime=updateGPoint.currentTime;updateGPoint.currentPos=curGPoint.currentPos;updateGPoint.currentTime=curGPoint.currentTime;if(!updateGPoint.insideElement){stopTrackingPointer(pointsList,updateGPoint);}
releasePoint=updateGPoint.currentPos;releaseTime=updateGPoint.currentTime;if(wasCaptured){pointsList.contacts--;if(tracker.dragHandler||tracker.dragEndHandler||tracker.pinchHandler){$.MouseTracker.gesturePointVelocityTracker.removePoint(tracker,updateGPoint);}
if(pointsList.contacts===0){if(tracker.releaseHandler){propagate=tracker.releaseHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(releasePoint,tracker.element),buttons:pointsList.buttons,insideElementPressed:updateGPoint.insideElementPressed,insideElementReleased:updateGPoint.insideElement,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
if(tracker.dragEndHandler&&!updateGPoint.currentPos.equals(updateGPoint.contactPos)){propagate=tracker.dragEndHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(updateGPoint.currentPos,tracker.element),speed:updateGPoint.speed,direction:updateGPoint.direction,shift:event.shiftKey,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
if((tracker.clickHandler||tracker.dblClickHandler)&&updateGPoint.insideElement){quick=releaseTime-updateGPoint.contactTime<=tracker.clickTimeThreshold&&updateGPoint.contactPos.distanceTo(releasePoint)<=tracker.clickDistThreshold;if(tracker.clickHandler){propagate=tracker.clickHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(updateGPoint.currentPos,tracker.element),quick:quick,shift:event.shiftKey,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
if(tracker.dblClickHandler&&quick){pointsList.clicks++;if(pointsList.clicks===1){delegate.lastClickPos=releasePoint;delegate.dblClickTimeOut=setTimeout(function(){pointsList.clicks=0;},tracker.dblClickTimeThreshold);}else if(pointsList.clicks===2){clearTimeout(delegate.dblClickTimeOut);pointsList.clicks=0;if(delegate.lastClickPos.distanceTo(releasePoint)<=tracker.dblClickDistThreshold){propagate=tracker.dblClickHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(updateGPoint.currentPos,tracker.element),shift:event.shiftKey,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
delegate.lastClickPos=null;}}}}else if(pointsList.contacts===2){if(tracker.pinchHandler&&updateGPoint.type==='touch'){delegate.pinchGPoints=pointsList.asArray();delegate.lastPinchDist=delegate.currentPinchDist=delegate.pinchGPoints[0].currentPos.distanceTo(delegate.pinchGPoints[1].currentPos);delegate.lastPinchCenter=delegate.currentPinchCenter=getCenterPoint(delegate.pinchGPoints[0].currentPos,delegate.pinchGPoints[1].currentPos);}}}else{if(tracker.releaseHandler){propagate=tracker.releaseHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(releasePoint,tracker.element),buttons:pointsList.buttons,insideElementPressed:updateGPoint.insideElementPressed,insideElementReleased:updateGPoint.insideElement,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}}}
return releaseCapture;}
function updatePointersMove(tracker,event,gPoints){var delegate=THIS[tracker.hash],pointsList=tracker.getActivePointersListByType(gPoints[0].type),i,gPointCount=gPoints.length,curGPoint,updateGPoint,gPointArray,delta,propagate;if(typeof event.buttons!=='undefined'){pointsList.buttons=event.buttons;}
for(i=0;i<gPointCount;i++){curGPoint=gPoints[i];updateGPoint=pointsList.getById(curGPoint.id);if(updateGPoint){if(curGPoint.hasOwnProperty('isPrimary')){updateGPoint.isPrimary=curGPoint.isPrimary;}
updateGPoint.lastPos=updateGPoint.currentPos;updateGPoint.lastTime=updateGPoint.currentTime;updateGPoint.currentPos=curGPoint.currentPos;updateGPoint.currentTime=curGPoint.currentTime;}else{curGPoint.captured=false;curGPoint.insideElementPressed=false;curGPoint.insideElement=true;startTrackingPointer(pointsList,curGPoint);}}
if(tracker.stopHandler&&gPoints[0].type==='mouse'){clearTimeout(tracker.stopTimeOut);tracker.stopTimeOut=setTimeout(function(){handlePointerStop(tracker,event,gPoints[0].type);},tracker.stopDelay);}
if(pointsList.contacts===0){if(tracker.moveHandler){propagate=tracker.moveHandler({eventSource:tracker,pointerType:gPoints[0].type,position:getPointRelativeToAbsolute(gPoints[0].currentPos,tracker.element),buttons:pointsList.buttons,isTouchEvent:gPoints[0].type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}else if(pointsList.contacts===1){if(tracker.moveHandler){updateGPoint=pointsList.asArray()[0];propagate=tracker.moveHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(updateGPoint.currentPos,tracker.element),buttons:pointsList.buttons,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
if(tracker.dragHandler){updateGPoint=pointsList.asArray()[0];delta=updateGPoint.currentPos.minus(updateGPoint.lastPos);propagate=tracker.dragHandler({eventSource:tracker,pointerType:updateGPoint.type,position:getPointRelativeToAbsolute(updateGPoint.currentPos,tracker.element),buttons:pointsList.buttons,delta:delta,speed:updateGPoint.speed,direction:updateGPoint.direction,shift:event.shiftKey,isTouchEvent:updateGPoint.type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}else if(pointsList.contacts===2){if(tracker.moveHandler){gPointArray=pointsList.asArray();propagate=tracker.moveHandler({eventSource:tracker,pointerType:gPointArray[0].type,position:getPointRelativeToAbsolute(getCenterPoint(gPointArray[0].currentPos,gPointArray[1].currentPos),tracker.element),buttons:pointsList.buttons,isTouchEvent:gPointArray[0].type==='touch',originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}
if(tracker.pinchHandler&&gPoints[0].type==='touch'){delta=delegate.pinchGPoints[0].currentPos.distanceTo(delegate.pinchGPoints[1].currentPos);if(delta!=delegate.currentPinchDist){delegate.lastPinchDist=delegate.currentPinchDist;delegate.currentPinchDist=delta;delegate.lastPinchCenter=delegate.currentPinchCenter;delegate.currentPinchCenter=getCenterPoint(delegate.pinchGPoints[0].currentPos,delegate.pinchGPoints[1].currentPos);propagate=tracker.pinchHandler({eventSource:tracker,pointerType:'touch',gesturePoints:delegate.pinchGPoints,lastCenter:getPointRelativeToAbsolute(delegate.lastPinchCenter,tracker.element),center:getPointRelativeToAbsolute(delegate.currentPinchCenter,tracker.element),lastDistance:delegate.lastPinchDist,distance:delegate.currentPinchDist,shift:event.shiftKey,originalEvent:event,preventDefaultAction:false,userData:tracker.userData});if(propagate===false){$.cancelEvent(event);}}}}}
function updatePointersCancel(tracker,event,gPoints){updatePointersUp(tracker,event,gPoints,0);updatePointersExit(tracker,event,gPoints);}
function handlePointerStop(tracker,originalMoveEvent,pointerType){if(tracker.stopHandler){tracker.stopHandler({eventSource:tracker,pointerType:pointerType,position:getMouseRelative(originalMoveEvent,tracker.element),buttons:tracker.getActivePointersListByType(pointerType).buttons,isTouchEvent:pointerType==='touch',originalEvent:originalMoveEvent,preventDefaultAction:false,userData:tracker.userData});}}
var isInIframe=(function(){try{return window.self!==window.top;}catch(e){return true;}})();function canAccessEvents(target){try{return target.addEventListener&&target.removeEventListener;}catch(e){return false;}}}(OpenSeadragon));(function($){$.ControlAnchor={NONE:0,TOP_LEFT:1,TOP_RIGHT:2,BOTTOM_RIGHT:3,BOTTOM_LEFT:4,ABSOLUTE:5};$.Control=function(element,options,container){var parent=element.parentNode;if(typeof options==='number')
{$.console.error("Passing an anchor directly into the OpenSeadragon.Control constructor is deprecated; "+
"please use an options object instead.  "+
"Support for this deprecated variant is scheduled for removal in December 2013");options={anchor:options};}
options.attachToViewer=(typeof options.attachToViewer==='undefined')?true:options.attachToViewer;this.autoFade=(typeof options.autoFade==='undefined')?true:options.autoFade;this.element=element;this.anchor=options.anchor;this.container=container;if(this.anchor==$.ControlAnchor.ABSOLUTE){this.wrapper=$.makeNeutralElement("div");this.wrapper.style.position="absolute";this.wrapper.style.top=typeof(options.top)=="number"?(options.top+'px'):options.top;this.wrapper.style.left=typeof(options.left)=="number"?(options.left+'px'):options.left;this.wrapper.style.height=typeof(options.height)=="number"?(options.height+'px'):options.height;this.wrapper.style.width=typeof(options.width)=="number"?(options.width+'px'):options.width;this.wrapper.style.margin="0px";this.wrapper.style.padding="0px";this.element.style.position="relative";this.element.style.top="0px";this.element.style.left="0px";this.element.style.height="100%";this.element.style.width="100%";}else{this.wrapper=$.makeNeutralElement("div");this.wrapper.style.display="inline-block";if(this.anchor==$.ControlAnchor.NONE){this.wrapper.style.width=this.wrapper.style.height="100%";}}
this.wrapper.appendChild(this.element);if(options.attachToViewer){if(this.anchor==$.ControlAnchor.TOP_RIGHT||this.anchor==$.ControlAnchor.BOTTOM_RIGHT){this.container.insertBefore(this.wrapper,this.container.firstChild);}else{this.container.appendChild(this.wrapper);}}else{parent.appendChild(this.wrapper);}};$.Control.prototype={destroy:function(){this.wrapper.removeChild(this.element);this.container.removeChild(this.wrapper);},isVisible:function(){return this.wrapper.style.display!="none";},setVisible:function(visible){this.wrapper.style.display=visible?(this.anchor==$.ControlAnchor.ABSOLUTE?'block':'inline-block'):"none";},setOpacity:function(opacity){if(this.element[$.SIGNAL]&&$.Browser.vendor==$.BROWSERS.IE){$.setElementOpacity(this.element,opacity,true);}else{$.setElementOpacity(this.wrapper,opacity,true);}}};}(OpenSeadragon));(function($){$.ControlDock=function(options){var layouts=['topleft','topright','bottomright','bottomleft'],layout,i;$.extend(true,this,{id:'controldock-'+$.now()+'-'+Math.floor(Math.random()*1000000),container:$.makeNeutralElement('div'),controls:[]},options);this.container.onsubmit=function(){return false;};if(this.element){this.element=$.getElement(this.element);this.element.appendChild(this.container);this.element.style.position='relative';this.container.style.width='100%';this.container.style.height='100%';}
for(i=0;i<layouts.length;i++){layout=layouts[i];this.controls[layout]=$.makeNeutralElement("div");this.controls[layout].style.position='absolute';if(layout.match('left')){this.controls[layout].style.left='0px';}
if(layout.match('right')){this.controls[layout].style.right='0px';}
if(layout.match('top')){this.controls[layout].style.top='0px';}
if(layout.match('bottom')){this.controls[layout].style.bottom='0px';}}
this.container.appendChild(this.controls.topleft);this.container.appendChild(this.controls.topright);this.container.appendChild(this.controls.bottomright);this.container.appendChild(this.controls.bottomleft);};$.ControlDock.prototype={addControl:function(element,controlOptions){element=$.getElement(element);var div=null;if(getControlIndex(this,element)>=0){return;}
switch(controlOptions.anchor){case $.ControlAnchor.TOP_RIGHT:div=this.controls.topright;element.style.position="relative";element.style.paddingRight="0px";element.style.paddingTop="0px";break;case $.ControlAnchor.BOTTOM_RIGHT:div=this.controls.bottomright;element.style.position="relative";element.style.paddingRight="0px";element.style.paddingBottom="0px";break;case $.ControlAnchor.BOTTOM_LEFT:div=this.controls.bottomleft;element.style.position="relative";element.style.paddingLeft="0px";element.style.paddingBottom="0px";break;case $.ControlAnchor.TOP_LEFT:div=this.controls.topleft;element.style.position="relative";element.style.paddingLeft="0px";element.style.paddingTop="0px";break;case $.ControlAnchor.ABSOLUTE:div=this.container;element.style.margin="0px";element.style.padding="0px";break;default:case $.ControlAnchor.NONE:div=this.container;element.style.margin="0px";element.style.padding="0px";break;}
this.controls.push(new $.Control(element,controlOptions,div));element.style.display="inline-block";},removeControl:function(element){element=$.getElement(element);var i=getControlIndex(this,element);if(i>=0){this.controls[i].destroy();this.controls.splice(i,1);}
return this;},clearControls:function(){while(this.controls.length>0){this.controls.pop().destroy();}
return this;},areControlsEnabled:function(){var i;for(i=this.controls.length-1;i>=0;i--){if(this.controls[i].isVisible()){return true;}}
return false;},setControlsEnabled:function(enabled){var i;for(i=this.controls.length-1;i>=0;i--){this.controls[i].setVisible(enabled);}
return this;}};function getControlIndex(dock,element){var controls=dock.controls,i;for(i=controls.length-1;i>=0;i--){if(controls[i].element==element){return i;}}
return-1;}}(OpenSeadragon));(function($){$.Placement=$.freezeObject({CENTER:0,TOP_LEFT:1,TOP:2,TOP_RIGHT:3,RIGHT:4,BOTTOM_RIGHT:5,BOTTOM:6,BOTTOM_LEFT:7,LEFT:8,properties:{0:{isLeft:false,isHorizontallyCentered:true,isRight:false,isTop:false,isVerticallyCentered:true,isBottom:false},1:{isLeft:true,isHorizontallyCentered:false,isRight:false,isTop:true,isVerticallyCentered:false,isBottom:false},2:{isLeft:false,isHorizontallyCentered:true,isRight:false,isTop:true,isVerticallyCentered:false,isBottom:false},3:{isLeft:false,isHorizontallyCentered:false,isRight:true,isTop:true,isVerticallyCentered:false,isBottom:false},4:{isLeft:false,isHorizontallyCentered:false,isRight:true,isTop:false,isVerticallyCentered:true,isBottom:false},5:{isLeft:false,isHorizontallyCentered:false,isRight:true,isTop:false,isVerticallyCentered:false,isBottom:true},6:{isLeft:false,isHorizontallyCentered:true,isRight:false,isTop:false,isVerticallyCentered:false,isBottom:true},7:{isLeft:true,isHorizontallyCentered:false,isRight:false,isTop:false,isVerticallyCentered:false,isBottom:true},8:{isLeft:true,isHorizontallyCentered:false,isRight:false,isTop:false,isVerticallyCentered:true,isBottom:false}}});}(OpenSeadragon));(function($){var THIS={};var nextHash=1;$.Viewer=function(options){var args=arguments,_this=this,i;if(!$.isPlainObject(options)){options={id:args[0],xmlPath:args.length>1?args[1]:undefined,prefixUrl:args.length>2?args[2]:undefined,controls:args.length>3?args[3]:undefined,overlays:args.length>4?args[4]:undefined};}
if(options.config){$.extend(true,options,options.config);delete options.config;}
$.extend(true,this,{id:options.id,hash:options.hash||nextHash++,element:null,container:null,canvas:null,overlays:[],overlaysContainer:null,previousBody:[],customControls:[],source:null,drawer:null,world:null,viewport:null,navigator:null,collectionViewport:null,collectionDrawer:null,navImages:null,buttons:null,profiler:null},$.DEFAULT_SETTINGS,options);if(typeof(this.hash)==="undefined"){throw new Error("A hash must be defined, either by specifying options.id or options.hash.");}
if(typeof(THIS[this.hash])!=="undefined"){$.console.warn("Hash "+this.hash+" has already been used.");}
THIS[this.hash]={"fsBoundsDelta":new $.Point(1,1),"prevContainerSize":null,"animating":false,"forceRedraw":false,"mouseInside":false,"group":null,"zooming":false,"zoomFactor":null,"lastZoomTime":null,"fullPage":false,"onfullscreenchange":null};this._sequenceIndex=0;this._firstOpen=true;this._updateRequestId=null;this._loadQueue=[];this.currentOverlays=[];this._lastScrollTime=$.now();$.EventSource.call(this);this.addHandler('open-failed',function(event){var msg=$.getString("Errors.OpenFailed",event.eventSource,event.message);_this._showMessage(msg);});$.ControlDock.call(this,options);if(this.xmlPath){this.tileSources=[this.xmlPath];}
this.element=this.element||document.getElementById(this.id);this.canvas=$.makeNeutralElement("div");this.canvas.className="openseadragon-canvas";(function(style){style.width="100%";style.height="100%";style.overflow="hidden";style.position="absolute";style.top="0px";style.left="0px";}(this.canvas.style));$.setElementTouchActionNone(this.canvas);if(options.tabIndex!==""){this.canvas.tabIndex=(options.tabIndex===undefined?0:options.tabIndex);}
this.container.className="openseadragon-container";(function(style){style.width="100%";style.height="100%";style.position="relative";style.overflow="hidden";style.left="0px";style.top="0px";style.textAlign="left";}(this.container.style));this.container.insertBefore(this.canvas,this.container.firstChild);this.element.appendChild(this.container);this.bodyWidth=document.body.style.width;this.bodyHeight=document.body.style.height;this.bodyOverflow=document.body.style.overflow;this.docOverflow=document.documentElement.style.overflow;this.innerTracker=new $.MouseTracker({element:this.canvas,startDisabled:this.mouseNavEnabled?false:true,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,dblClickTimeThreshold:this.dblClickTimeThreshold,dblClickDistThreshold:this.dblClickDistThreshold,keyDownHandler:$.delegate(this,onCanvasKeyDown),keyHandler:$.delegate(this,onCanvasKeyPress),clickHandler:$.delegate(this,onCanvasClick),dblClickHandler:$.delegate(this,onCanvasDblClick),dragHandler:$.delegate(this,onCanvasDrag),dragEndHandler:$.delegate(this,onCanvasDragEnd),enterHandler:$.delegate(this,onCanvasEnter),exitHandler:$.delegate(this,onCanvasExit),pressHandler:$.delegate(this,onCanvasPress),releaseHandler:$.delegate(this,onCanvasRelease),nonPrimaryPressHandler:$.delegate(this,onCanvasNonPrimaryPress),nonPrimaryReleaseHandler:$.delegate(this,onCanvasNonPrimaryRelease),scrollHandler:$.delegate(this,onCanvasScroll),pinchHandler:$.delegate(this,onCanvasPinch)});this.outerTracker=new $.MouseTracker({element:this.container,startDisabled:this.mouseNavEnabled?false:true,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,dblClickTimeThreshold:this.dblClickTimeThreshold,dblClickDistThreshold:this.dblClickDistThreshold,enterHandler:$.delegate(this,onContainerEnter),exitHandler:$.delegate(this,onContainerExit)});if(this.toolbar){this.toolbar=new $.ControlDock({element:this.toolbar});}
this.bindStandardControls();THIS[this.hash].prevContainerSize=_getSafeElemSize(this.container);this.world=new $.World({viewer:this});this.world.addHandler('add-item',function(event){_this.source=_this.world.getItemAt(0).source;THIS[_this.hash].forceRedraw=true;if(!_this._updateRequestId){_this._updateRequestId=scheduleUpdate(_this,updateMulti);}});this.world.addHandler('remove-item',function(event){if(_this.world.getItemCount()){_this.source=_this.world.getItemAt(0).source;}else{_this.source=null;}
THIS[_this.hash].forceRedraw=true;});this.world.addHandler('metrics-change',function(event){if(_this.viewport){_this.viewport._setContentBounds(_this.world.getHomeBounds(),_this.world.getContentFactor());}});this.world.addHandler('item-index-change',function(event){_this.source=_this.world.getItemAt(0).source;});this.viewport=new $.Viewport({containerSize:THIS[this.hash].prevContainerSize,springStiffness:this.springStiffness,animationTime:this.animationTime,minZoomImageRatio:this.minZoomImageRatio,maxZoomPixelRatio:this.maxZoomPixelRatio,visibilityRatio:this.visibilityRatio,wrapHorizontal:this.wrapHorizontal,wrapVertical:this.wrapVertical,defaultZoomLevel:this.defaultZoomLevel,minZoomLevel:this.minZoomLevel,maxZoomLevel:this.maxZoomLevel,viewer:this,degrees:this.degrees,navigatorRotate:this.navigatorRotate,homeFillsViewer:this.homeFillsViewer,margins:this.viewportMargins});this.viewport._setContentBounds(this.world.getHomeBounds(),this.world.getContentFactor());this.imageLoader=new $.ImageLoader({jobLimit:this.imageLoaderLimit});this.tileCache=new $.TileCache({maxImageCacheCount:this.maxImageCacheCount});this.drawer=new $.Drawer({viewer:this,viewport:this.viewport,element:this.canvas,debugGridColor:this.debugGridColor});this.overlaysContainer=$.makeNeutralElement("div");this.canvas.appendChild(this.overlaysContainer);if(!this.drawer.canRotate()){if(this.rotateLeft){i=this.buttons.buttons.indexOf(this.rotateLeft);this.buttons.buttons.splice(i,1);this.buttons.element.removeChild(this.rotateLeft.element);}
if(this.rotateRight){i=this.buttons.buttons.indexOf(this.rotateRight);this.buttons.buttons.splice(i,1);this.buttons.element.removeChild(this.rotateRight.element);}}
if(this.showNavigator){this.navigator=new $.Navigator({id:this.navigatorId,position:this.navigatorPosition,sizeRatio:this.navigatorSizeRatio,maintainSizeRatio:this.navigatorMaintainSizeRatio,top:this.navigatorTop,left:this.navigatorLeft,width:this.navigatorWidth,height:this.navigatorHeight,autoResize:this.navigatorAutoResize,autoFade:this.navigatorAutoFade,prefixUrl:this.prefixUrl,viewer:this,navigatorRotate:this.navigatorRotate,crossOriginPolicy:this.crossOriginPolicy});}
if(this.sequenceMode){this.bindSequenceControls();}
if(this.tileSources){this.open(this.tileSources);}
for(i=0;i<this.customControls.length;i++){this.addControl(this.customControls[i].id,{anchor:this.customControls[i].anchor});}
$.requestAnimationFrame(function(){beginControlsAutoHide(_this);});};$.extend($.Viewer.prototype,$.EventSource.prototype,$.ControlDock.prototype,{isOpen:function(){return!!this.world.getItemCount();},openDzi:function(dzi){$.console.error("[Viewer.openDzi] this function is deprecated; use Viewer.open() instead.");return this.open(dzi);},openTileSource:function(tileSource){$.console.error("[Viewer.openTileSource] this function is deprecated; use Viewer.open() instead.");return this.open(tileSource);},open:function(tileSources){var _this=this;this.close();if(!tileSources){return;}
if(this.sequenceMode&&$.isArray(tileSources)){if(this.referenceStrip){this.referenceStrip.destroy();this.referenceStrip=null;}
this.tileSources=tileSources;this._sequenceIndex=Math.max(0,Math.min(this.tileSources.length-1,this.initialPage));if(this.tileSources.length){this.open(this.tileSources[this._sequenceIndex]);if(this.showReferenceStrip){this.referenceStrip=new $.ReferenceStrip({id:this.referenceStripElement,position:this.referenceStripPosition,sizeRatio:this.referenceStripSizeRatio,scroll:this.referenceStripScroll,height:this.referenceStripHeight,width:this.referenceStripWidth,tileSources:this.tileSources,prefixUrl:this.prefixUrl,viewer:this});}}
this._updateSequenceButtons(this._sequenceIndex);return;}
if(!$.isArray(tileSources)){tileSources=[tileSources];}
if(!tileSources.length){return;}
this._opening=true;var expected=tileSources.length;var successes=0;var failures=0;var failEvent;var checkCompletion=function(){if(successes+failures===expected){if(successes){if(_this._firstOpen||!_this.preserveViewport){_this.viewport.goHome(true);_this.viewport.update();}
_this._firstOpen=false;var source=tileSources[0];if(source.tileSource){source=source.tileSource;}
if(_this.overlays&&!_this.preserveOverlays){for(var i=0;i<_this.overlays.length;i++){_this.currentOverlays[i]=getOverlayObject(_this,_this.overlays[i]);}}
_this._drawOverlays();_this._opening=false;_this.raiseEvent('open',{source:source});}else{_this._opening=false;_this.raiseEvent('open-failed',failEvent);}}};var doOne=function(options){if(!$.isPlainObject(options)||!options.tileSource){options={tileSource:options};}
if(options.index!==undefined){$.console.error('[Viewer.open] setting indexes here is not supported; use addTiledImage instead');delete options.index;}
if(options.collectionImmediately===undefined){options.collectionImmediately=true;}
var originalSuccess=options.success;options.success=function(event){successes++;if(options.tileSource.overlays){for(var i=0;i<options.tileSource.overlays.length;i++){_this.addOverlay(options.tileSource.overlays[i]);}}
if(originalSuccess){originalSuccess(event);}
checkCompletion();};var originalError=options.error;options.error=function(event){failures++;if(!failEvent){failEvent=event;}
if(originalError){originalError(event);}
checkCompletion();};_this.addTiledImage(options);};for(var i=0;i<tileSources.length;i++){doOne(tileSources[i]);}
return this;},close:function(){if(!THIS[this.hash]){return this;}
this._opening=false;if(this.navigator){this.navigator.close();}
if(!this.preserveOverlays){this.clearOverlays();this.overlaysContainer.innerHTML="";}
THIS[this.hash].animating=false;this.world.removeAll();this.imageLoader.clear();this.raiseEvent('close');return this;},destroy:function(){if(!THIS[this.hash]){return;}
this.close();this.clearOverlays();this.overlaysContainer.innerHTML="";if(this.referenceStrip){this.referenceStrip.destroy();this.referenceStrip=null;}
if(this._updateRequestId!==null){$.cancelAnimationFrame(this._updateRequestId);this._updateRequestId=null;}
if(this.drawer){this.drawer.destroy();}
this.removeAllHandlers();if(this.element){while(this.element.firstChild){this.element.removeChild(this.element.firstChild);}}
if(this.innerTracker){this.innerTracker.destroy();}
if(this.outerTracker){this.outerTracker.destroy();}
THIS[this.hash]=null;delete THIS[this.hash];this.canvas=null;this.container=null;this.element=null;},isMouseNavEnabled:function(){return this.innerTracker.isTracking();},setMouseNavEnabled:function(enabled){this.innerTracker.setTracking(enabled);this.outerTracker.setTracking(enabled);this.raiseEvent('mouse-enabled',{enabled:enabled});return this;},areControlsEnabled:function(){var enabled=this.controls.length,i;for(i=0;i<this.controls.length;i++){enabled=enabled&&this.controls[i].isVisibile();}
return enabled;},setControlsEnabled:function(enabled){if(enabled){abortControlsAutoHide(this);}else{beginControlsAutoHide(this);}
this.raiseEvent('controls-enabled',{enabled:enabled});return this;},isFullPage:function(){return THIS[this.hash].fullPage;},setFullPage:function(fullPage){var body=document.body,bodyStyle=body.style,docStyle=document.documentElement.style,_this=this,hash,nodes,i;if(fullPage==this.isFullPage()){return this;}
var fullPageEventArgs={fullPage:fullPage,preventDefaultAction:false};this.raiseEvent('pre-full-page',fullPageEventArgs);if(fullPageEventArgs.preventDefaultAction){return this;}
if(fullPage){this.elementSize=$.getElementSize(this.element);this.pageScroll=$.getPageScroll();this.elementMargin=this.element.style.margin;this.element.style.margin="0";this.elementPadding=this.element.style.padding;this.element.style.padding="0";this.bodyMargin=bodyStyle.margin;this.docMargin=docStyle.margin;bodyStyle.margin="0";docStyle.margin="0";this.bodyPadding=bodyStyle.padding;this.docPadding=docStyle.padding;bodyStyle.padding="0";docStyle.padding="0";this.bodyWidth=bodyStyle.width;this.docWidth=docStyle.width;bodyStyle.width="100%";docStyle.width="100%";this.bodyHeight=bodyStyle.height;this.docHeight=docStyle.height;bodyStyle.height="100%";docStyle.height="100%";this.previousBody=[];THIS[this.hash].prevElementParent=this.element.parentNode;THIS[this.hash].prevNextSibling=this.element.nextSibling;THIS[this.hash].prevElementWidth=this.element.style.width;THIS[this.hash].prevElementHeight=this.element.style.height;nodes=body.childNodes.length;for(i=0;i<nodes;i++){this.previousBody.push(body.childNodes[0]);body.removeChild(body.childNodes[0]);}
if(this.toolbar&&this.toolbar.element){this.toolbar.parentNode=this.toolbar.element.parentNode;this.toolbar.nextSibling=this.toolbar.element.nextSibling;body.appendChild(this.toolbar.element);$.addClass(this.toolbar.element,'fullpage');}
$.addClass(this.element,'fullpage');body.appendChild(this.element);this.element.style.height=$.getWindowSize().y+'px';this.element.style.width=$.getWindowSize().x+'px';if(this.toolbar&&this.toolbar.element){this.element.style.height=($.getElementSize(this.element).y-$.getElementSize(this.toolbar.element).y)+'px';}
THIS[this.hash].fullPage=true;$.delegate(this,onContainerEnter)({});}else{this.element.style.margin=this.elementMargin;this.element.style.padding=this.elementPadding;bodyStyle.margin=this.bodyMargin;docStyle.margin=this.docMargin;bodyStyle.padding=this.bodyPadding;docStyle.padding=this.docPadding;bodyStyle.width=this.bodyWidth;docStyle.width=this.docWidth;bodyStyle.height=this.bodyHeight;docStyle.height=this.docHeight;body.removeChild(this.element);nodes=this.previousBody.length;for(i=0;i<nodes;i++){body.appendChild(this.previousBody.shift());}
$.removeClass(this.element,'fullpage');THIS[this.hash].prevElementParent.insertBefore(this.element,THIS[this.hash].prevNextSibling);if(this.toolbar&&this.toolbar.element){body.removeChild(this.toolbar.element);$.removeClass(this.toolbar.element,'fullpage');this.toolbar.parentNode.insertBefore(this.toolbar.element,this.toolbar.nextSibling);delete this.toolbar.parentNode;delete this.toolbar.nextSibling;}
this.element.style.width=THIS[this.hash].prevElementWidth;this.element.style.height=THIS[this.hash].prevElementHeight;var restoreScrollCounter=0;var restoreScroll=function(){$.setPageScroll(_this.pageScroll);var pageScroll=$.getPageScroll();restoreScrollCounter++;if(restoreScrollCounter<10&&pageScroll.x!==_this.pageScroll.x||pageScroll.y!==_this.pageScroll.y){$.requestAnimationFrame(restoreScroll);}};$.requestAnimationFrame(restoreScroll);THIS[this.hash].fullPage=false;$.delegate(this,onContainerExit)({});}
if(this.navigator&&this.viewport){this.navigator.update(this.viewport);}
this.raiseEvent('full-page',{fullPage:fullPage});return this;},setFullScreen:function(fullScreen){var _this=this;if(!$.supportsFullScreen){return this.setFullPage(fullScreen);}
if($.isFullScreen()===fullScreen){return this;}
var fullScreeEventArgs={fullScreen:fullScreen,preventDefaultAction:false};this.raiseEvent('pre-full-screen',fullScreeEventArgs);if(fullScreeEventArgs.preventDefaultAction){return this;}
if(fullScreen){this.setFullPage(true);if(!this.isFullPage()){return this;}
this.fullPageStyleWidth=this.element.style.width;this.fullPageStyleHeight=this.element.style.height;this.element.style.width='100%';this.element.style.height='100%';var onFullScreenChange=function(){var isFullScreen=$.isFullScreen();if(!isFullScreen){$.removeEvent(document,$.fullScreenEventName,onFullScreenChange);$.removeEvent(document,$.fullScreenErrorEventName,onFullScreenChange);_this.setFullPage(false);if(_this.isFullPage()){_this.element.style.width=_this.fullPageStyleWidth;_this.element.style.height=_this.fullPageStyleHeight;}}
if(_this.navigator&&_this.viewport){_this.navigator.update(_this.viewport);}
_this.raiseEvent('full-screen',{fullScreen:isFullScreen});};$.addEvent(document,$.fullScreenEventName,onFullScreenChange);$.addEvent(document,$.fullScreenErrorEventName,onFullScreenChange);$.requestFullScreen(document.body);}else{$.exitFullScreen();}
return this;},isVisible:function(){return this.container.style.visibility!="hidden";},setVisible:function(visible){this.container.style.visibility=visible?"":"hidden";this.raiseEvent('visible',{visible:visible});return this;},addTiledImage:function(options){$.console.assert(options,"[Viewer.addTiledImage] options is required");$.console.assert(options.tileSource,"[Viewer.addTiledImage] options.tileSource is required");$.console.assert(!options.replace||(options.index>-1&&options.index<this.world.getItemCount()),"[Viewer.addTiledImage] if options.replace is used, options.index must be a valid index in Viewer.world");var _this=this;if(options.replace){options.replaceItem=_this.world.getItemAt(options.index);}
this._hideMessage();if(options.placeholderFillStyle===undefined){options.placeholderFillStyle=this.placeholderFillStyle;}
if(options.opacity===undefined){options.opacity=this.opacity;}
if(options.compositeOperation===undefined){options.compositeOperation=this.compositeOperation;}
var myQueueItem={options:options};function raiseAddItemFailed(event){for(var i=0;i<_this._loadQueue.length;i++){if(_this._loadQueue[i]===myQueueItem){_this._loadQueue.splice(i,1);break;}}
if(_this._loadQueue.length===0){refreshWorld(myQueueItem);}
_this.raiseEvent('add-item-failed',event);if(options.error){options.error(event);}}
function refreshWorld(theItem){if(_this.collectionMode){_this.world.arrange({immediately:theItem.options.collectionImmediately,rows:_this.collectionRows,columns:_this.collectionColumns,layout:_this.collectionLayout,tileSize:_this.collectionTileSize,tileMargin:_this.collectionTileMargin});_this.world.setAutoRefigureSizes(true);}}
if($.isArray(options.tileSource)){setTimeout(function(){raiseAddItemFailed({message:"[Viewer.addTiledImage] Sequences can not be added; add them one at a time instead.",source:options.tileSource,options:options});});return;}
this._loadQueue.push(myQueueItem);getTileSourceImplementation(this,options.tileSource,function(tileSource){myQueueItem.tileSource=tileSource;var queueItem,tiledImage,optionsClone;while(_this._loadQueue.length){queueItem=_this._loadQueue[0];if(!queueItem.tileSource){break;}
_this._loadQueue.splice(0,1);if(queueItem.options.replace){var newIndex=_this.world.getIndexOfItem(queueItem.options.replaceItem);if(newIndex!=-1){queueItem.options.index=newIndex;}
_this.world.removeItem(queueItem.options.replaceItem);}
tiledImage=new $.TiledImage({viewer:_this,source:queueItem.tileSource,viewport:_this.viewport,drawer:_this.drawer,tileCache:_this.tileCache,imageLoader:_this.imageLoader,x:queueItem.options.x,y:queueItem.options.y,width:queueItem.options.width,height:queueItem.options.height,fitBounds:queueItem.options.fitBounds,fitBoundsPlacement:queueItem.options.fitBoundsPlacement,clip:queueItem.options.clip,placeholderFillStyle:queueItem.options.placeholderFillStyle,opacity:queueItem.options.opacity,compositeOperation:queueItem.options.compositeOperation,springStiffness:_this.springStiffness,animationTime:_this.animationTime,minZoomImageRatio:_this.minZoomImageRatio,wrapHorizontal:_this.wrapHorizontal,wrapVertical:_this.wrapVertical,immediateRender:_this.immediateRender,blendTime:_this.blendTime,alwaysBlend:_this.alwaysBlend,minPixelRatio:_this.minPixelRatio,smoothTileEdgesMinZoom:_this.smoothTileEdgesMinZoom,iOSDevice:_this.iOSDevice,crossOriginPolicy:_this.crossOriginPolicy,debugMode:_this.debugMode});if(_this.collectionMode){_this.world.setAutoRefigureSizes(false);}
_this.world.addItem(tiledImage,{index:queueItem.options.index});if(_this._loadQueue.length===0){refreshWorld(queueItem);}
if(_this.world.getItemCount()===1&&!_this.preserveViewport){_this.viewport.goHome(true);}
if(_this.navigator){optionsClone=$.extend({},queueItem.options,{replace:false,originalTiledImage:tiledImage,tileSource:queueItem.tileSource});_this.navigator.addTiledImage(optionsClone);}
if(queueItem.options.success){queueItem.options.success({item:tiledImage});}}},function(event){event.options=options;raiseAddItemFailed(event);});},addSimpleImage:function(options){$.console.assert(options,"[Viewer.addSimpleImage] options is required");$.console.assert(options.url,"[Viewer.addSimpleImage] options.url is required");var opts=$.extend({},options,{tileSource:{type:'image',url:options.url}});delete opts.url;this.addTiledImage(opts);},addLayer:function(options){var _this=this;$.console.error("[Viewer.addLayer] this function is deprecated; use Viewer.addTiledImage() instead.");var optionsClone=$.extend({},options,{success:function(event){_this.raiseEvent("add-layer",{options:options,drawer:event.item});},error:function(event){_this.raiseEvent("add-layer-failed",event);}});this.addTiledImage(optionsClone);return this;},getLayerAtLevel:function(level){$.console.error("[Viewer.getLayerAtLevel] this function is deprecated; use World.getItemAt() instead.");return this.world.getItemAt(level);},getLevelOfLayer:function(drawer){$.console.error("[Viewer.getLevelOfLayer] this function is deprecated; use World.getIndexOfItem() instead.");return this.world.getIndexOfItem(drawer);},getLayersCount:function(){$.console.error("[Viewer.getLayersCount] this function is deprecated; use World.getItemCount() instead.");return this.world.getItemCount();},setLayerLevel:function(drawer,level){$.console.error("[Viewer.setLayerLevel] this function is deprecated; use World.setItemIndex() instead.");return this.world.setItemIndex(drawer,level);},removeLayer:function(drawer){$.console.error("[Viewer.removeLayer] this function is deprecated; use World.removeItem() instead.");return this.world.removeItem(drawer);},forceRedraw:function(){THIS[this.hash].forceRedraw=true;return this;},bindSequenceControls:function(){var onFocusHandler=$.delegate(this,onFocus),onBlurHandler=$.delegate(this,onBlur),onNextHandler=$.delegate(this,onNext),onPreviousHandler=$.delegate(this,onPrevious),navImages=this.navImages,useGroup=true;if(this.showSequenceControl){if(this.previousButton||this.nextButton){useGroup=false;}
this.previousButton=new $.Button({element:this.previousButton?$.getElement(this.previousButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.PreviousPage"),srcRest:resolveUrl(this.prefixUrl,navImages.previous.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.previous.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.previous.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.previous.DOWN),onRelease:onPreviousHandler,onFocus:onFocusHandler,onBlur:onBlurHandler});this.nextButton=new $.Button({element:this.nextButton?$.getElement(this.nextButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.NextPage"),srcRest:resolveUrl(this.prefixUrl,navImages.next.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.next.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.next.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.next.DOWN),onRelease:onNextHandler,onFocus:onFocusHandler,onBlur:onBlurHandler});if(!this.navPrevNextWrap){this.previousButton.disable();}
if(!this.tileSources||!this.tileSources.length){this.nextButton.disable();}
if(useGroup){this.paging=new $.ButtonGroup({buttons:[this.previousButton,this.nextButton],clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold});this.pagingControl=this.paging.element;if(this.toolbar){this.toolbar.addControl(this.pagingControl,{anchor:$.ControlAnchor.BOTTOM_RIGHT});}else{this.addControl(this.pagingControl,{anchor:this.sequenceControlAnchor||$.ControlAnchor.TOP_LEFT});}}}
return this;},bindStandardControls:function(){var beginZoomingInHandler=$.delegate(this,beginZoomingIn),endZoomingHandler=$.delegate(this,endZooming),doSingleZoomInHandler=$.delegate(this,doSingleZoomIn),beginZoomingOutHandler=$.delegate(this,beginZoomingOut),doSingleZoomOutHandler=$.delegate(this,doSingleZoomOut),onHomeHandler=$.delegate(this,onHome),onFullScreenHandler=$.delegate(this,onFullScreen),onRotateLeftHandler=$.delegate(this,onRotateLeft),onRotateRightHandler=$.delegate(this,onRotateRight),onFocusHandler=$.delegate(this,onFocus),onBlurHandler=$.delegate(this,onBlur),navImages=this.navImages,buttons=[],useGroup=true;if(this.showNavigationControl){if(this.zoomInButton||this.zoomOutButton||this.homeButton||this.fullPageButton||this.rotateLeftButton||this.rotateRightButton){useGroup=false;}
if(this.showZoomControl){buttons.push(this.zoomInButton=new $.Button({element:this.zoomInButton?$.getElement(this.zoomInButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.ZoomIn"),srcRest:resolveUrl(this.prefixUrl,navImages.zoomIn.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.zoomIn.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.zoomIn.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.zoomIn.DOWN),onPress:beginZoomingInHandler,onRelease:endZoomingHandler,onClick:doSingleZoomInHandler,onEnter:beginZoomingInHandler,onExit:endZoomingHandler,onFocus:onFocusHandler,onBlur:onBlurHandler}));buttons.push(this.zoomOutButton=new $.Button({element:this.zoomOutButton?$.getElement(this.zoomOutButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.ZoomOut"),srcRest:resolveUrl(this.prefixUrl,navImages.zoomOut.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.zoomOut.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.zoomOut.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.zoomOut.DOWN),onPress:beginZoomingOutHandler,onRelease:endZoomingHandler,onClick:doSingleZoomOutHandler,onEnter:beginZoomingOutHandler,onExit:endZoomingHandler,onFocus:onFocusHandler,onBlur:onBlurHandler}));}
if(this.showHomeControl){buttons.push(this.homeButton=new $.Button({element:this.homeButton?$.getElement(this.homeButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.Home"),srcRest:resolveUrl(this.prefixUrl,navImages.home.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.home.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.home.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.home.DOWN),onRelease:onHomeHandler,onFocus:onFocusHandler,onBlur:onBlurHandler}));}
if(this.showFullPageControl){buttons.push(this.fullPageButton=new $.Button({element:this.fullPageButton?$.getElement(this.fullPageButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.FullPage"),srcRest:resolveUrl(this.prefixUrl,navImages.fullpage.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.fullpage.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.fullpage.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.fullpage.DOWN),onRelease:onFullScreenHandler,onFocus:onFocusHandler,onBlur:onBlurHandler}));}
if(this.showRotationControl){buttons.push(this.rotateLeftButton=new $.Button({element:this.rotateLeftButton?$.getElement(this.rotateLeftButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.RotateLeft"),srcRest:resolveUrl(this.prefixUrl,navImages.rotateleft.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.rotateleft.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.rotateleft.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.rotateleft.DOWN),onRelease:onRotateLeftHandler,onFocus:onFocusHandler,onBlur:onBlurHandler}));buttons.push(this.rotateRightButton=new $.Button({element:this.rotateRightButton?$.getElement(this.rotateRightButton):null,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,tooltip:$.getString("Tooltips.RotateRight"),srcRest:resolveUrl(this.prefixUrl,navImages.rotateright.REST),srcGroup:resolveUrl(this.prefixUrl,navImages.rotateright.GROUP),srcHover:resolveUrl(this.prefixUrl,navImages.rotateright.HOVER),srcDown:resolveUrl(this.prefixUrl,navImages.rotateright.DOWN),onRelease:onRotateRightHandler,onFocus:onFocusHandler,onBlur:onBlurHandler}));}
if(useGroup){this.buttons=new $.ButtonGroup({buttons:buttons,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold});this.navControl=this.buttons.element;this.addHandler('open',$.delegate(this,lightUp));if(this.toolbar){this.toolbar.addControl(this.navControl,{anchor:$.ControlAnchor.TOP_LEFT});}else{this.addControl(this.navControl,{anchor:this.navigationControlAnchor||$.ControlAnchor.TOP_LEFT});}}}
return this;},currentPage:function(){return this._sequenceIndex;},goToPage:function(page){if(this.tileSources&&page>=0&&page<this.tileSources.length){this.raiseEvent('page',{page:page});this._sequenceIndex=page;this._updateSequenceButtons(page);this.open(this.tileSources[page]);if(this.referenceStrip){this.referenceStrip.setFocus(page);}}
return this;},addOverlay:function(element,location,placement,onDraw){var options;if($.isPlainObject(element)){options=element;}else{options={element:element,location:location,placement:placement,onDraw:onDraw};}
element=$.getElement(options.element);if(getOverlayIndex(this.currentOverlays,element)>=0){return this;}
var overlay=getOverlayObject(this,options);this.currentOverlays.push(overlay);overlay.drawHTML(this.overlaysContainer,this.viewport);this.raiseEvent('add-overlay',{element:element,location:options.location,placement:options.placement});return this;},updateOverlay:function(element,location,placement){var i;element=$.getElement(element);i=getOverlayIndex(this.currentOverlays,element);if(i>=0){this.currentOverlays[i].update(location,placement);THIS[this.hash].forceRedraw=true;this.raiseEvent('update-overlay',{element:element,location:location,placement:placement});}
return this;},removeOverlay:function(element){var i;element=$.getElement(element);i=getOverlayIndex(this.currentOverlays,element);if(i>=0){this.currentOverlays[i].destroy();this.currentOverlays.splice(i,1);THIS[this.hash].forceRedraw=true;this.raiseEvent('remove-overlay',{element:element});}
return this;},clearOverlays:function(){while(this.currentOverlays.length>0){this.currentOverlays.pop().destroy();}
THIS[this.hash].forceRedraw=true;this.raiseEvent('clear-overlay',{});return this;},getOverlayById:function(element){var i;element=$.getElement(element);i=getOverlayIndex(this.currentOverlays,element);if(i>=0){return this.currentOverlays[i];}else{return null;}},_updateSequenceButtons:function(page){if(this.nextButton){if(!this.tileSources||this.tileSources.length-1===page){if(!this.navPrevNextWrap){this.nextButton.disable();}}else{this.nextButton.enable();}}
if(this.previousButton){if(page>0){this.previousButton.enable();}else{if(!this.navPrevNextWrap){this.previousButton.disable();}}}},_showMessage:function(message){this._hideMessage();var div=$.makeNeutralElement("div");div.appendChild(document.createTextNode(message));this.messageDiv=$.makeCenteredNode(div);$.addClass(this.messageDiv,"openseadragon-message");this.container.appendChild(this.messageDiv);},_hideMessage:function(){var div=this.messageDiv;if(div){div.parentNode.removeChild(div);delete this.messageDiv;}},gestureSettingsByDeviceType:function(type){switch(type){case 'mouse':return this.gestureSettingsMouse;case 'touch':return this.gestureSettingsTouch;case 'pen':return this.gestureSettingsPen;default:return this.gestureSettingsUnknown;}},_drawOverlays:function(){var i,length=this.currentOverlays.length;for(i=0;i<length;i++){this.currentOverlays[i].drawHTML(this.overlaysContainer,this.viewport);}},_cancelPendingImages:function(){this._loadQueue=[];}});function _getSafeElemSize(oElement){oElement=$.getElement(oElement);return new $.Point((oElement.clientWidth===0?1:oElement.clientWidth),(oElement.clientHeight===0?1:oElement.clientHeight));}
function getTileSourceImplementation(viewer,tileSource,successCallback,failCallback){var _this=viewer;if($.type(tileSource)=='string'){if(tileSource.match(/\s*<.*/)){tileSource=$.parseXml(tileSource);}else if(tileSource.match(/\s*[\{\[].*/)){tileSource=$.parseJSON(tileSource);}}
function waitUntilReady(tileSource,originalTileSource){if(tileSource.ready){successCallback(tileSource);}else{tileSource.addHandler('ready',function(){successCallback(tileSource);});tileSource.addHandler('open-failed',function(event){failCallback({message:event.message,source:originalTileSource});});}}
setTimeout(function(){if($.type(tileSource)=='string'){tileSource=new $.TileSource({url:tileSource,crossOriginPolicy:viewer.crossOriginPolicy,ajaxWithCredentials:viewer.ajaxWithCredentials,useCanvas:viewer.useCanvas,success:function(event){successCallback(event.tileSource);}});tileSource.addHandler('open-failed',function(event){failCallback(event);});}else if($.isPlainObject(tileSource)||tileSource.nodeType){if(!tileSource.crossOriginPolicy&&viewer.crossOriginPolicy){tileSource.crossOriginPolicy=viewer.crossOriginPolicy;}
if(tileSource.ajaxWithCredentials===undefined){tileSource.ajaxWithCredentials=viewer.ajaxWithCredentials;}
if(tileSource.useCanvas===undefined){tileSource.useCanvas=viewer.useCanvas;}
if($.isFunction(tileSource.getTileUrl)){var customTileSource=new $.TileSource(tileSource);customTileSource.getTileUrl=tileSource.getTileUrl;successCallback(customTileSource);}else{var $TileSource=$.TileSource.determineType(_this,tileSource);if(!$TileSource){failCallback({message:"Unable to load TileSource",source:tileSource});return;}
var options=$TileSource.prototype.configure.apply(_this,[tileSource]);waitUntilReady(new $TileSource(options),tileSource);}}else{waitUntilReady(tileSource,tileSource);}});}
function getOverlayObject(viewer,overlay){if(overlay instanceof $.Overlay){return overlay;}
var element=null;if(overlay.element){element=$.getElement(overlay.element);}else{var id=overlay.id?overlay.id:"openseadragon-overlay-"+Math.floor(Math.random()*10000000);element=$.getElement(overlay.id);if(!element){element=document.createElement("a");element.href="#/overlay/"+id;}
element.id=id;$.addClass(element,overlay.className?overlay.className:"openseadragon-overlay");}
var location=overlay.location;var width=overlay.width;var height=overlay.height;if(!location){var x=overlay.x;var y=overlay.y;if(overlay.px!==undefined){var rect=viewer.viewport.imageToViewportRectangle(new $.Rect(overlay.px,overlay.py,width||0,height||0));x=rect.x;y=rect.y;width=width!==undefined?rect.width:undefined;height=height!==undefined?rect.height:undefined;}
location=new $.Point(x,y);}
var placement=overlay.placement;if(placement&&$.type(placement)==="string"){placement=$.Placement[overlay.placement.toUpperCase()];}
return new $.Overlay({element:element,location:location,placement:placement,onDraw:overlay.onDraw,checkResize:overlay.checkResize,width:width,height:height,rotationMode:overlay.rotationMode});}
function getOverlayIndex(overlays,element){var i;for(i=overlays.length-1;i>=0;i--){if(overlays[i].element===element){return i;}}
return-1;}
function scheduleUpdate(viewer,updateFunc){return $.requestAnimationFrame(function(){updateFunc(viewer);});}
function scheduleControlsFade(viewer){$.requestAnimationFrame(function(){updateControlsFade(viewer);});}
function beginControlsAutoHide(viewer){if(!viewer.autoHideControls){return;}
viewer.controlsShouldFade=true;viewer.controlsFadeBeginTime=$.now()+
viewer.controlsFadeDelay;window.setTimeout(function(){scheduleControlsFade(viewer);},viewer.controlsFadeDelay);}
function updateControlsFade(viewer){var currentTime,deltaTime,opacity,i;if(viewer.controlsShouldFade){currentTime=$.now();deltaTime=currentTime-viewer.controlsFadeBeginTime;opacity=1.0-deltaTime/viewer.controlsFadeLength;opacity=Math.min(1.0,opacity);opacity=Math.max(0.0,opacity);for(i=viewer.controls.length-1;i>=0;i--){if(viewer.controls[i].autoFade){viewer.controls[i].setOpacity(opacity);}}
if(opacity>0){scheduleControlsFade(viewer);}}}
function abortControlsAutoHide(viewer){var i;viewer.controlsShouldFade=false;for(i=viewer.controls.length-1;i>=0;i--){viewer.controls[i].setOpacity(1.0);}}
function onFocus(){abortControlsAutoHide(this);}
function onBlur(){beginControlsAutoHide(this);}
function onCanvasKeyDown(event){if(!event.preventDefaultAction&&!event.ctrl&&!event.alt&&!event.meta){switch(event.keyCode){case 38:if(event.shift){this.viewport.zoomBy(1.1);}else{this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0,-40)));}
this.viewport.applyConstraints();return false;case 40:if(event.shift){this.viewport.zoomBy(0.9);}else{this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0,40)));}
this.viewport.applyConstraints();return false;case 37:this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40,0)));this.viewport.applyConstraints();return false;case 39:this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40,0)));this.viewport.applyConstraints();return false;default:return true;}}else{return true;}}
function onCanvasKeyPress(event){if(!event.preventDefaultAction&&!event.ctrl&&!event.alt&&!event.meta){switch(event.keyCode){case 43:case 61:this.viewport.zoomBy(1.1);this.viewport.applyConstraints();return false;case 45:this.viewport.zoomBy(0.9);this.viewport.applyConstraints();return false;case 48:this.viewport.goHome();this.viewport.applyConstraints();return false;case 119:case 87:if(event.shift){this.viewport.zoomBy(1.1);}else{this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0,-40)));}
this.viewport.applyConstraints();return false;case 115:case 83:if(event.shift){this.viewport.zoomBy(0.9);}else{this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(0,40)));}
this.viewport.applyConstraints();return false;case 97:this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(-40,0)));this.viewport.applyConstraints();return false;case 100:this.viewport.panBy(this.viewport.deltaPointsFromPixels(new $.Point(40,0)));this.viewport.applyConstraints();return false;default:return true;}}else{return true;}}
function onCanvasClick(event){var gestureSettings;var haveKeyboardFocus=document.activeElement==this.canvas;if(!haveKeyboardFocus){this.canvas.focus();}
if(!event.preventDefaultAction&&this.viewport&&event.quick){gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(gestureSettings.clickToZoom){this.viewport.zoomBy(event.shift?1.0/this.zoomPerClick:this.zoomPerClick,this.viewport.pointFromPixel(event.position,true));this.viewport.applyConstraints();}}
this.raiseEvent('canvas-click',{tracker:event.eventSource,position:event.position,quick:event.quick,shift:event.shift,originalEvent:event.originalEvent});}
function onCanvasDblClick(event){var gestureSettings;if(!event.preventDefaultAction&&this.viewport){gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(gestureSettings.dblClickToZoom){this.viewport.zoomBy(event.shift?1.0/this.zoomPerClick:this.zoomPerClick,this.viewport.pointFromPixel(event.position,true));this.viewport.applyConstraints();}}
this.raiseEvent('canvas-double-click',{tracker:event.eventSource,position:event.position,shift:event.shift,originalEvent:event.originalEvent});}
function onCanvasDrag(event){var gestureSettings;if(!event.preventDefaultAction&&this.viewport){gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(!this.panHorizontal){event.delta.x=0;}
if(!this.panVertical){event.delta.y=0;}
this.viewport.panBy(this.viewport.deltaPointsFromPixels(event.delta.negate()),gestureSettings.flickEnabled);if(this.constrainDuringPan){this.viewport.applyConstraints();}}
this.raiseEvent('canvas-drag',{tracker:event.eventSource,position:event.position,delta:event.delta,speed:event.speed,direction:event.direction,shift:event.shift,originalEvent:event.originalEvent});}
function onCanvasDragEnd(event){if(!event.preventDefaultAction&&this.viewport){var gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(gestureSettings.flickEnabled&&event.speed>=gestureSettings.flickMinSpeed){var amplitudeX=0;if(this.panHorizontal){amplitudeX=gestureSettings.flickMomentum*event.speed*Math.cos(event.direction);}
var amplitudeY=0;if(this.panVertical){amplitudeY=gestureSettings.flickMomentum*event.speed*Math.sin(event.direction);}
var center=this.viewport.pixelFromPoint(this.viewport.getCenter(true));var target=this.viewport.pointFromPixel(new $.Point(center.x-amplitudeX,center.y-amplitudeY));this.viewport.panTo(target,false);}
this.viewport.applyConstraints();}
this.raiseEvent('canvas-drag-end',{tracker:event.eventSource,position:event.position,speed:event.speed,direction:event.direction,shift:event.shift,originalEvent:event.originalEvent});}
function onCanvasEnter(event){this.raiseEvent('canvas-enter',{tracker:event.eventSource,pointerType:event.pointerType,position:event.position,buttons:event.buttons,pointers:event.pointers,insideElementPressed:event.insideElementPressed,buttonDownAny:event.buttonDownAny,originalEvent:event.originalEvent});}
function onCanvasExit(event){this.raiseEvent('canvas-exit',{tracker:event.eventSource,pointerType:event.pointerType,position:event.position,buttons:event.buttons,pointers:event.pointers,insideElementPressed:event.insideElementPressed,buttonDownAny:event.buttonDownAny,originalEvent:event.originalEvent});}
function onCanvasPress(event){this.raiseEvent('canvas-press',{tracker:event.eventSource,pointerType:event.pointerType,position:event.position,insideElementPressed:event.insideElementPressed,insideElementReleased:event.insideElementReleased,originalEvent:event.originalEvent});}
function onCanvasRelease(event){this.raiseEvent('canvas-release',{tracker:event.eventSource,pointerType:event.pointerType,position:event.position,insideElementPressed:event.insideElementPressed,insideElementReleased:event.insideElementReleased,originalEvent:event.originalEvent});}
function onCanvasNonPrimaryPress(event){this.raiseEvent('canvas-nonprimary-press',{tracker:event.eventSource,position:event.position,pointerType:event.pointerType,button:event.button,buttons:event.buttons,originalEvent:event.originalEvent});}
function onCanvasNonPrimaryRelease(event){this.raiseEvent('canvas-nonprimary-release',{tracker:event.eventSource,position:event.position,pointerType:event.pointerType,button:event.button,buttons:event.buttons,originalEvent:event.originalEvent});}
function onCanvasPinch(event){var gestureSettings,centerPt,lastCenterPt,panByPt;if(!event.preventDefaultAction&&this.viewport){gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(gestureSettings.pinchToZoom){centerPt=this.viewport.pointFromPixel(event.center,true);lastCenterPt=this.viewport.pointFromPixel(event.lastCenter,true);panByPt=lastCenterPt.minus(centerPt);if(!this.panHorizontal){panByPt.x=0;}
if(!this.panVertical){panByPt.y=0;}
this.viewport.zoomBy(event.distance/event.lastDistance,centerPt,true);this.viewport.panBy(panByPt,true);this.viewport.applyConstraints();}
if(gestureSettings.pinchRotate){var angle1=Math.atan2(event.gesturePoints[0].currentPos.y-event.gesturePoints[1].currentPos.y,event.gesturePoints[0].currentPos.x-event.gesturePoints[1].currentPos.x);var angle2=Math.atan2(event.gesturePoints[0].lastPos.y-event.gesturePoints[1].lastPos.y,event.gesturePoints[0].lastPos.x-event.gesturePoints[1].lastPos.x);this.viewport.setRotation(this.viewport.getRotation()+((angle1-angle2)*(180/Math.PI)));}}
this.raiseEvent('canvas-pinch',{tracker:event.eventSource,gesturePoints:event.gesturePoints,lastCenter:event.lastCenter,center:event.center,lastDistance:event.lastDistance,distance:event.distance,shift:event.shift,originalEvent:event.originalEvent});return false;}
function onCanvasScroll(event){var gestureSettings,factor,thisScrollTime,deltaScrollTime;thisScrollTime=$.now();deltaScrollTime=thisScrollTime-this._lastScrollTime;if(deltaScrollTime>this.minScrollDeltaTime){this._lastScrollTime=thisScrollTime;if(!event.preventDefaultAction&&this.viewport){gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(gestureSettings.scrollToZoom){factor=Math.pow(this.zoomPerScroll,event.scroll);this.viewport.zoomBy(factor,this.viewport.pointFromPixel(event.position,true));this.viewport.applyConstraints();}}
this.raiseEvent('canvas-scroll',{tracker:event.eventSource,position:event.position,scroll:event.scroll,shift:event.shift,originalEvent:event.originalEvent});if(gestureSettings&&gestureSettings.scrollToZoom){return false;}}
else{gestureSettings=this.gestureSettingsByDeviceType(event.pointerType);if(gestureSettings&&gestureSettings.scrollToZoom){return false;}}}
function onContainerEnter(event){THIS[this.hash].mouseInside=true;abortControlsAutoHide(this);this.raiseEvent('container-enter',{tracker:event.eventSource,position:event.position,buttons:event.buttons,pointers:event.pointers,insideElementPressed:event.insideElementPressed,buttonDownAny:event.buttonDownAny,originalEvent:event.originalEvent});}
function onContainerExit(event){if(event.pointers<1){THIS[this.hash].mouseInside=false;if(!THIS[this.hash].animating){beginControlsAutoHide(this);}}
this.raiseEvent('container-exit',{tracker:event.eventSource,position:event.position,buttons:event.buttons,pointers:event.pointers,insideElementPressed:event.insideElementPressed,buttonDownAny:event.buttonDownAny,originalEvent:event.originalEvent});}
function updateMulti(viewer){updateOnce(viewer);if(viewer.isOpen()){viewer._updateRequestId=scheduleUpdate(viewer,updateMulti);}else{viewer._updateRequestId=false;}}
function updateOnce(viewer){if(viewer._opening){return;}
if(viewer.autoResize){var containerSize=_getSafeElemSize(viewer.container);var prevContainerSize=THIS[viewer.hash].prevContainerSize;if(!containerSize.equals(prevContainerSize)){var viewport=viewer.viewport;if(viewer.preserveImageSizeOnResize){var resizeRatio=prevContainerSize.x/containerSize.x;var zoom=viewport.getZoom()*resizeRatio;var center=viewport.getCenter();viewport.resize(containerSize,false);viewport.zoomTo(zoom,null,true);viewport.panTo(center,true);}else{var oldBounds=viewport.getBounds();viewport.resize(containerSize,true);viewport.fitBoundsWithConstraints(oldBounds,true);}
THIS[viewer.hash].prevContainerSize=containerSize;THIS[viewer.hash].forceRedraw=true;}}
var viewportChange=viewer.viewport.update();var animated=viewer.world.update()||viewportChange;if(viewportChange){viewer.raiseEvent('viewport-change');}
if(viewer.referenceStrip){animated=viewer.referenceStrip.update(viewer.viewport)||animated;}
if(!THIS[viewer.hash].animating&&animated){viewer.raiseEvent("animation-start");abortControlsAutoHide(viewer);}
if(animated||THIS[viewer.hash].forceRedraw||viewer.world.needsDraw()){drawWorld(viewer);viewer._drawOverlays();if(viewer.navigator){viewer.navigator.update(viewer.viewport);}
THIS[viewer.hash].forceRedraw=false;if(animated){viewer.raiseEvent("animation");}}
if(THIS[viewer.hash].animating&&!animated){viewer.raiseEvent("animation-finish");if(!THIS[viewer.hash].mouseInside){beginControlsAutoHide(viewer);}}
THIS[viewer.hash].animating=animated;}
function drawWorld(viewer){viewer.imageLoader.clear();viewer.drawer.clear();viewer.world.draw();viewer.raiseEvent('update-viewport',{});}
function resolveUrl(prefix,url){return prefix?prefix+url:url;}
function beginZoomingIn(){THIS[this.hash].lastZoomTime=$.now();THIS[this.hash].zoomFactor=this.zoomPerSecond;THIS[this.hash].zooming=true;scheduleZoom(this);}
function beginZoomingOut(){THIS[this.hash].lastZoomTime=$.now();THIS[this.hash].zoomFactor=1.0/this.zoomPerSecond;THIS[this.hash].zooming=true;scheduleZoom(this);}
function endZooming(){THIS[this.hash].zooming=false;}
function scheduleZoom(viewer){$.requestAnimationFrame($.delegate(viewer,doZoom));}
function doZoom(){var currentTime,deltaTime,adjustedFactor;if(THIS[this.hash].zooming&&this.viewport){currentTime=$.now();deltaTime=currentTime-THIS[this.hash].lastZoomTime;adjustedFactor=Math.pow(THIS[this.hash].zoomFactor,deltaTime/1000);this.viewport.zoomBy(adjustedFactor);this.viewport.applyConstraints();THIS[this.hash].lastZoomTime=currentTime;scheduleZoom(this);}}
function doSingleZoomIn(){if(this.viewport){THIS[this.hash].zooming=false;this.viewport.zoomBy(this.zoomPerClick/1.0);this.viewport.applyConstraints();}}
function doSingleZoomOut(){if(this.viewport){THIS[this.hash].zooming=false;this.viewport.zoomBy(1.0/this.zoomPerClick);this.viewport.applyConstraints();}}
function lightUp(){this.buttons.emulateEnter();this.buttons.emulateExit();}
function onHome(){if(this.viewport){this.viewport.goHome();}}
function onFullScreen(){if(this.isFullPage()&&!$.isFullScreen()){this.setFullPage(false);}else{this.setFullScreen(!this.isFullPage());}
if(this.buttons){this.buttons.emulateExit();}
this.fullPageButton.element.focus();if(this.viewport){this.viewport.applyConstraints();}}
function onRotateLeft(){if(this.viewport){var currRotation=this.viewport.getRotation();if(currRotation===0){currRotation=270;}
else{currRotation-=90;}
this.viewport.setRotation(currRotation);}}
function onRotateRight(){if(this.viewport){var currRotation=this.viewport.getRotation();if(currRotation===270){currRotation=0;}
else{currRotation+=90;}
this.viewport.setRotation(currRotation);}}
function onPrevious(){var previous=this._sequenceIndex-1;if(this.navPrevNextWrap&&previous<0){previous+=this.tileSources.length;}
this.goToPage(previous);}
function onNext(){var next=this._sequenceIndex+1;if(this.navPrevNextWrap&&next>=this.tileSources.length){next=0;}
this.goToPage(next);}}(OpenSeadragon));(function($){$.Navigator=function(options){var viewer=options.viewer,_this=this,viewerSize,navigatorSize;if(!options.id){options.id='navigator-'+$.now();this.element=$.makeNeutralElement("div");options.controlOptions={anchor:$.ControlAnchor.TOP_RIGHT,attachToViewer:true,autoFade:options.autoFade};if(options.position){if('BOTTOM_RIGHT'==options.position){options.controlOptions.anchor=$.ControlAnchor.BOTTOM_RIGHT;}else if('BOTTOM_LEFT'==options.position){options.controlOptions.anchor=$.ControlAnchor.BOTTOM_LEFT;}else if('TOP_RIGHT'==options.position){options.controlOptions.anchor=$.ControlAnchor.TOP_RIGHT;}else if('TOP_LEFT'==options.position){options.controlOptions.anchor=$.ControlAnchor.TOP_LEFT;}else if('ABSOLUTE'==options.position){options.controlOptions.anchor=$.ControlAnchor.ABSOLUTE;options.controlOptions.top=options.top;options.controlOptions.left=options.left;options.controlOptions.height=options.height;options.controlOptions.width=options.width;}}}else{this.element=document.getElementById(options.id);options.controlOptions={anchor:$.ControlAnchor.NONE,attachToViewer:false,autoFade:false};}
this.element.id=options.id;this.element.className+=' navigator';options=$.extend(true,{sizeRatio:$.DEFAULT_SETTINGS.navigatorSizeRatio},options,{element:this.element,tabIndex:-1,showNavigator:false,mouseNavEnabled:false,showNavigationControl:false,showSequenceControl:false,immediateRender:true,blendTime:0,animationTime:0,autoResize:options.autoResize,minZoomImageRatio:1.0});options.minPixelRatio=this.minPixelRatio=viewer.minPixelRatio;$.setElementTouchActionNone(this.element);this.borderWidth=2;this.fudge=new $.Point(1,1);this.totalBorderWidths=new $.Point(this.borderWidth*2,this.borderWidth*2).minus(this.fudge);if(options.controlOptions.anchor!=$.ControlAnchor.NONE){(function(style,borderWidth){style.margin='0px';style.border=borderWidth+'px solid #555';style.padding='0px';style.background='#000';style.opacity=0.8;style.overflow='hidden';}(this.element.style,this.borderWidth));}
this.displayRegion=$.makeNeutralElement("div");this.displayRegion.id=this.element.id+'-displayregion';this.displayRegion.className='displayregion';(function(style,borderWidth){style.position='relative';style.top='0px';style.left='0px';style.fontSize='0px';style.overflow='hidden';style.border=borderWidth+'px solid #900';style.margin='0px';style.padding='0px';style.background='transparent';style['float']='left';style.cssFloat='left';style.styleFloat='left';style.zIndex=999999999;style.cursor='default';}(this.displayRegion.style,this.borderWidth));this.displayRegionContainer=$.makeNeutralElement("div");this.displayRegionContainer.id=this.element.id+'-displayregioncontainer';this.displayRegionContainer.className="displayregioncontainer";this.displayRegionContainer.style.width="100%";this.displayRegionContainer.style.height="100%";viewer.addControl(this.element,options.controlOptions);this._resizeWithViewer=options.controlOptions.anchor!=$.ControlAnchor.ABSOLUTE&&options.controlOptions.anchor!=$.ControlAnchor.NONE;if(this._resizeWithViewer){if(options.width&&options.height){this.element.style.height=typeof(options.height)=="number"?(options.height+'px'):options.height;this.element.style.width=typeof(options.width)=="number"?(options.width+'px'):options.width;}else{viewerSize=$.getElementSize(viewer.element);this.element.style.height=Math.round(viewerSize.y*options.sizeRatio)+'px';this.element.style.width=Math.round(viewerSize.x*options.sizeRatio)+'px';this.oldViewerSize=viewerSize;}
navigatorSize=$.getElementSize(this.element);this.elementArea=navigatorSize.x*navigatorSize.y;}
this.oldContainerSize=new $.Point(0,0);$.Viewer.apply(this,[options]);this.displayRegionContainer.appendChild(this.displayRegion);this.element.getElementsByTagName('div')[0].appendChild(this.displayRegionContainer);function rotate(degrees){_setTransformRotate(_this.displayRegionContainer,degrees);_setTransformRotate(_this.displayRegion,-degrees);_this.viewport.setRotation(degrees);}
if(options.navigatorRotate){var degrees=options.viewer.viewport?options.viewer.viewport.getRotation():options.viewer.degrees||0;rotate(degrees);options.viewer.addHandler("rotate",function(args){rotate(args.degrees);});}
this.innerTracker.destroy();this.innerTracker=new $.MouseTracker({element:this.element,dragHandler:$.delegate(this,onCanvasDrag),clickHandler:$.delegate(this,onCanvasClick),releaseHandler:$.delegate(this,onCanvasRelease),scrollHandler:$.delegate(this,onCanvasScroll)});this.addHandler("reset-size",function(){if(_this.viewport){_this.viewport.goHome(true);}});viewer.world.addHandler("item-index-change",function(event){var item=_this.world.getItemAt(event.previousIndex);_this.world.setItemIndex(item,event.newIndex);});viewer.world.addHandler("remove-item",function(event){var theirItem=event.item;var myItem=_this._getMatchingItem(theirItem);if(myItem){_this.world.removeItem(myItem);}});this.update(viewer.viewport);};$.extend($.Navigator.prototype,$.EventSource.prototype,$.Viewer.prototype,{updateSize:function(){if(this.viewport){var containerSize=new $.Point((this.container.clientWidth===0?1:this.container.clientWidth),(this.container.clientHeight===0?1:this.container.clientHeight));if(!containerSize.equals(this.oldContainerSize)){this.viewport.resize(containerSize,true);this.viewport.goHome(true);this.oldContainerSize=containerSize;this.drawer.clear();this.world.draw();}}},update:function(viewport){var viewerSize,newWidth,newHeight,bounds,topleft,bottomright;viewerSize=$.getElementSize(this.viewer.element);if(this._resizeWithViewer&&viewerSize.x&&viewerSize.y&&!viewerSize.equals(this.oldViewerSize)){this.oldViewerSize=viewerSize;if(this.maintainSizeRatio||!this.elementArea){newWidth=viewerSize.x*this.sizeRatio;newHeight=viewerSize.y*this.sizeRatio;}else{newWidth=Math.sqrt(this.elementArea*(viewerSize.x/viewerSize.y));newHeight=this.elementArea/newWidth;}
this.element.style.width=Math.round(newWidth)+'px';this.element.style.height=Math.round(newHeight)+'px';if(!this.elementArea){this.elementArea=newWidth*newHeight;}
this.updateSize();}
if(viewport&&this.viewport){bounds=viewport.getBoundsNoRotate(true);topleft=this.viewport.pixelFromPointNoRotate(bounds.getTopLeft(),false);bottomright=this.viewport.pixelFromPointNoRotate(bounds.getBottomRight(),false).minus(this.totalBorderWidths);var style=this.displayRegion.style;style.display=this.world.getItemCount()?'block':'none';style.top=Math.round(topleft.y)+'px';style.left=Math.round(topleft.x)+'px';var width=Math.abs(topleft.x-bottomright.x);var height=Math.abs(topleft.y-bottomright.y);style.width=Math.round(Math.max(width,0))+'px';style.height=Math.round(Math.max(height,0))+'px';}},addTiledImage:function(options){var _this=this;var original=options.originalTiledImage;delete options.original;var optionsClone=$.extend({},options,{success:function(event){var myItem=event.item;myItem._originalForNavigator=original;_this._matchBounds(myItem,original,true);original.addHandler('bounds-change',function(){_this._matchBounds(myItem,original);});}});return $.Viewer.prototype.addTiledImage.apply(this,[optionsClone]);},_getMatchingItem:function(theirItem){var count=this.world.getItemCount();var item;for(var i=0;i<count;i++){item=this.world.getItemAt(i);if(item._originalForNavigator===theirItem){return item;}}
return null;},_matchBounds:function(myItem,theirItem,immediately){var bounds=theirItem.getBounds();myItem.setPosition(bounds.getTopLeft(),immediately);myItem.setWidth(bounds.width,immediately);}});function onCanvasClick(event){if(event.quick&&this.viewer.viewport){this.viewer.viewport.panTo(this.viewport.pointFromPixel(event.position));this.viewer.viewport.applyConstraints();}}
function onCanvasDrag(event){if(this.viewer.viewport){if(!this.panHorizontal){event.delta.x=0;}
if(!this.panVertical){event.delta.y=0;}
this.viewer.viewport.panBy(this.viewport.deltaPointsFromPixels(event.delta));}}
function onCanvasRelease(event){if(event.insideElementPressed&&this.viewer.viewport){this.viewer.viewport.applyConstraints();}}
function onCanvasScroll(event){this.viewer.raiseEvent('navigator-scroll',{tracker:event.eventSource,position:event.position,scroll:event.scroll,shift:event.shift,originalEvent:event.originalEvent});return false;}
function _setTransformRotate(element,degrees){element.style.webkitTransform="rotate("+degrees+"deg)";element.style.mozTransform="rotate("+degrees+"deg)";element.style.msTransform="rotate("+degrees+"deg)";element.style.oTransform="rotate("+degrees+"deg)";element.style.transform="rotate("+degrees+"deg)";}}(OpenSeadragon));(function($){var I18N={Errors:{Dzc:"Sorry, we don't support Deep Zoom Collections!",Dzi:"Hmm, this doesn't appear to be a valid Deep Zoom Image.",Xml:"Hmm, this doesn't appear to be a valid Deep Zoom Image.",ImageFormat:"Sorry, we don't support {0}-based Deep Zoom Images.",Security:"It looks like a security restriction stopped us from "+
"loading this Deep Zoom Image.",Status:"This space unintentionally left blank ({0} {1}).",OpenFailed:"Unable to open {0}: {1}"},Tooltips:{FullPage:"Toggle full page",Home:"Go home",ZoomIn:"Zoom in",ZoomOut:"Zoom out",NextPage:"Next page",PreviousPage:"Previous page",RotateLeft:"Rotate left",RotateRight:"Rotate right"}};$.extend($,{getString:function(prop){var props=prop.split('.'),string=null,args=arguments,container=I18N,i;for(i=0;i<props.length-1;i++){container=container[props[i]]||{};}
string=container[props[i]];if(typeof(string)!="string"){$.console.debug("Untranslated source string:",prop);string="";}
return string.replace(/\{\d+\}/g,function(capture){var i=parseInt(capture.match(/\d+/),10)+1;return i<args.length?args[i]:"";});},setString:function(prop,value){var props=prop.split('.'),container=I18N,i;for(i=0;i<props.length-1;i++){if(!container[props[i]]){container[props[i]]={};}
container=container[props[i]];}
container[props[i]]=value;}});}(OpenSeadragon));(function($){$.Point=function(x,y){this.x=typeof(x)=="number"?x:0;this.y=typeof(y)=="number"?y:0;};$.Point.prototype={clone:function(){return new $.Point(this.x,this.y);},plus:function(point){return new $.Point(this.x+point.x,this.y+point.y);},minus:function(point){return new $.Point(this.x-point.x,this.y-point.y);},times:function(factor){return new $.Point(this.x*factor,this.y*factor);},divide:function(factor){return new $.Point(this.x/factor,this.y/factor);},negate:function(){return new $.Point(-this.x,-this.y);},distanceTo:function(point){return Math.sqrt(Math.pow(this.x-point.x,2)+
Math.pow(this.y-point.y,2));},apply:function(func){return new $.Point(func(this.x),func(this.y));},equals:function(point){return(point instanceof $.Point)&&(this.x===point.x)&&(this.y===point.y);},rotate:function(degrees,pivot){pivot=pivot||new $.Point(0,0);var cos;var sin;if(degrees%90===0){var d=degrees%360;if(d<0){d+=360;}
switch(d){case 0:cos=1;sin=0;break;case 90:cos=0;sin=1;break;case 180:cos=-1;sin=0;break;case 270:cos=0;sin=-1;break;}}else{var angle=degrees*Math.PI/180.0;cos=Math.cos(angle);sin=Math.sin(angle);}
var x=cos*(this.x-pivot.x)-sin*(this.y-pivot.y)+pivot.x;var y=sin*(this.x-pivot.x)+cos*(this.y-pivot.y)+pivot.y;return new $.Point(x,y);},toString:function(){return "("+(Math.round(this.x*100)/100)+","+(Math.round(this.y*100)/100)+")";}};}(OpenSeadragon));(function($){$.TileSource=function(width,height,tileSize,tileOverlap,minLevel,maxLevel){var _this=this;var args=arguments,options,i;if($.isPlainObject(width)){options=width;}else{options={width:args[0],height:args[1],tileSize:args[2],tileOverlap:args[3],minLevel:args[4],maxLevel:args[5]};}
$.EventSource.call(this);$.extend(true,this,options);if(!this.success){for(i=0;i<arguments.length;i++){if($.isFunction(arguments[i])){this.success=arguments[i];break;}}}
if(this.success){this.addHandler('ready',function(event){_this.success(event);});}
if('string'==$.type(arguments[0])){this.url=arguments[0];}
if(this.url){this.aspectRatio=1;this.dimensions=new $.Point(10,10);this._tileWidth=0;this._tileHeight=0;this.tileOverlap=0;this.minLevel=0;this.maxLevel=0;this.ready=false;this.getImageInfo(this.url);}else{this.ready=true;this.aspectRatio=(options.width&&options.height)?(options.width/options.height):1;this.dimensions=new $.Point(options.width,options.height);if(this.tileSize){this._tileWidth=this._tileHeight=this.tileSize;delete this.tileSize;}else{if(this.tileWidth){this._tileWidth=this.tileWidth;delete this.tileWidth;}else{this._tileWidth=0;}
if(this.tileHeight){this._tileHeight=this.tileHeight;delete this.tileHeight;}else{this._tileHeight=0;}}
this.tileOverlap=options.tileOverlap?options.tileOverlap:0;this.minLevel=options.minLevel?options.minLevel:0;this.maxLevel=(undefined!==options.maxLevel&&null!==options.maxLevel)?options.maxLevel:((options.width&&options.height)?Math.ceil(Math.log(Math.max(options.width,options.height))/Math.log(2)):0);if(this.success&&$.isFunction(this.success)){this.success(this);}}};$.TileSource.prototype={getTileSize:function(level){$.console.error("[TileSource.getTileSize] is deprecated."+
"Use TileSource.getTileWidth() and TileSource.getTileHeight() instead");return this._tileWidth;},getTileWidth:function(level){if(!this._tileWidth){return this.getTileSize(level);}
return this._tileWidth;},getTileHeight:function(level){if(!this._tileHeight){return this.getTileSize(level);}
return this._tileHeight;},getLevelScale:function(level){var levelScaleCache={},i;for(i=0;i<=this.maxLevel;i++){levelScaleCache[i]=1/Math.pow(2,this.maxLevel-i);}
this.getLevelScale=function(_level){return levelScaleCache[_level];};return this.getLevelScale(level);},getNumTiles:function(level){var scale=this.getLevelScale(level),x=Math.ceil(scale*this.dimensions.x/this.getTileWidth(level)),y=Math.ceil(scale*this.dimensions.y/this.getTileHeight(level));return new $.Point(x,y);},getPixelRatio:function(level){var imageSizeScaled=this.dimensions.times(this.getLevelScale(level)),rx=1.0/imageSizeScaled.x,ry=1.0/imageSizeScaled.y;return new $.Point(rx,ry);},getClosestLevel:function(rect){var i,tilesPerSide,tiles;for(i=this.minLevel;i<this.maxLevel;i++){tiles=this.getNumTiles(i);tilesPerSide=new $.Point(Math.floor(rect.x/this.getTileWidth(i)),Math.floor(rect.y/this.getTileHeight(i)));if(tiles.x+1>=tilesPerSide.x&&tiles.y+1>=tilesPerSide.y){break;}}
return Math.max(0,i-1);},getTileAtPoint:function(level,point){var pixel=point.times(this.dimensions.x).times(this.getLevelScale(level)),tx=Math.floor(pixel.x/this.getTileWidth(level)),ty=Math.floor(pixel.y/this.getTileHeight(level));return new $.Point(tx,ty);},getTileBounds:function(level,x,y){var dimensionsScaled=this.dimensions.times(this.getLevelScale(level)),tileWidth=this.getTileWidth(level),tileHeight=this.getTileHeight(level),px=(x===0)?0:tileWidth*x-this.tileOverlap,py=(y===0)?0:tileHeight*y-this.tileOverlap,sx=tileWidth+(x===0?1:2)*this.tileOverlap,sy=tileHeight+(y===0?1:2)*this.tileOverlap,scale=1.0/dimensionsScaled.x;sx=Math.min(sx,dimensionsScaled.x-px);sy=Math.min(sy,dimensionsScaled.y-py);return new $.Rect(px*scale,py*scale,sx*scale,sy*scale);},getImageInfo:function(url){var _this=this,callbackName,callback,readySource,options,urlParts,filename,lastDot;if(url){urlParts=url.split('/');filename=urlParts[urlParts.length-1];lastDot=filename.lastIndexOf('.');if(lastDot>-1){urlParts[urlParts.length-1]=filename.slice(0,lastDot);}}
callback=function(data){if(typeof(data)==="string"){data=$.parseXml(data);}
var $TileSource=$.TileSource.determineType(_this,data,url);if(!$TileSource){_this.raiseEvent('open-failed',{message:"Unable to load TileSource",source:url});return;}
options=$TileSource.prototype.configure.apply(_this,[data,url]);if(options.ajaxWithCredentials===undefined){options.ajaxWithCredentials=_this.ajaxWithCredentials;}
readySource=new $TileSource(options);_this.ready=true;_this.raiseEvent('ready',{tileSource:readySource});};if(url.match(/\.js$/)){callbackName=url.split('/').pop().replace('.js','');$.jsonp({url:url,async:false,callbackName:callbackName,callback:callback});}else{$.makeAjaxRequest({url:url,withCredentials:this.ajaxWithCredentials,success:function(xhr){var data=processResponse(xhr);callback(data);},error:function(xhr,exc){var msg;try{msg="HTTP "+xhr.status+" attempting to load TileSource";}catch(e){var formattedExc;if(typeof(exc)=="undefined"||!exc.toString){formattedExc="Unknown error";}else{formattedExc=exc.toString();}
msg=formattedExc+" attempting to load TileSource";}
_this.raiseEvent('open-failed',{message:msg,source:url});}});}},supports:function(data,url){return false;},configure:function(data,url){throw new Error("Method not implemented.");},getTileUrl:function(level,x,y){throw new Error("Method not implemented.");},tileExists:function(level,x,y){var numTiles=this.getNumTiles(level);return level>=this.minLevel&&level<=this.maxLevel&&x>=0&&y>=0&&x<numTiles.x&&y<numTiles.y;}};$.extend(true,$.TileSource.prototype,$.EventSource.prototype);function processResponse(xhr){var responseText=xhr.responseText,status=xhr.status,statusText,data;if(!xhr){throw new Error($.getString("Errors.Security"));}else if(xhr.status!==200&&xhr.status!==0){status=xhr.status;statusText=(status==404)?"Not Found":xhr.statusText;throw new Error($.getString("Errors.Status",status,statusText));}
if(responseText.match(/\s*<.*/)){try{data=(xhr.responseXML&&xhr.responseXML.documentElement)?xhr.responseXML:$.parseXml(responseText);}catch(e){data=xhr.responseText;}}else if(responseText.match(/\s*[\{\[].*/)){data=$.parseJSON(responseText);}else{data=responseText;}
return data;}
$.TileSource.determineType=function(tileSource,data,url){var property;for(property in OpenSeadragon){if(property.match(/.+TileSource$/)&&$.isFunction(OpenSeadragon[property])&&$.isFunction(OpenSeadragon[property].prototype.supports)&&OpenSeadragon[property].prototype.supports.call(tileSource,data,url)){return OpenSeadragon[property];}}
$.console.error("No TileSource was able to open %s %s",url,data);};}(OpenSeadragon));(function($){$.DziTileSource=function(width,height,tileSize,tileOverlap,tilesUrl,fileFormat,displayRects,minLevel,maxLevel){var i,rect,level,options;if($.isPlainObject(width)){options=width;}else{options={width:arguments[0],height:arguments[1],tileSize:arguments[2],tileOverlap:arguments[3],tilesUrl:arguments[4],fileFormat:arguments[5],displayRects:arguments[6],minLevel:arguments[7],maxLevel:arguments[8]};}
this._levelRects={};this.tilesUrl=options.tilesUrl;this.fileFormat=options.fileFormat;this.displayRects=options.displayRects;if(this.displayRects){for(i=this.displayRects.length-1;i>=0;i--){rect=this.displayRects[i];for(level=rect.minLevel;level<=rect.maxLevel;level++){if(!this._levelRects[level]){this._levelRects[level]=[];}
this._levelRects[level].push(rect);}}}
$.TileSource.apply(this,[options]);};$.extend($.DziTileSource.prototype,$.TileSource.prototype,{supports:function(data,url){var ns;if(data.Image){ns=data.Image.xmlns;}else if(data.documentElement){if("Image"==data.documentElement.localName||"Image"==data.documentElement.tagName){ns=data.documentElement.namespaceURI;}}
return("http://schemas.microsoft.com/deepzoom/2008"==ns||"http://schemas.microsoft.com/deepzoom/2009"==ns);},configure:function(data,url){var options;if(!$.isPlainObject(data)){options=configureFromXML(this,data);}else{options=configureFromObject(this,data);}
if(url&&!options.tilesUrl){options.tilesUrl=url.replace(/([^\/]+?)(\.(dzi|xml|js))?\/?(\?.*)?$/,'$1_files/');if(url.search(/\.(dzi|xml|js)\?/)!=-1){options.queryParams=url.match(/\?.*/);}else{options.queryParams='';}}
return options;},getTileUrl:function(level,x,y){return[this.tilesUrl,level,'/',x,'_',y,'.',this.fileFormat,this.queryParams].join('');},tileExists:function(level,x,y){var rects=this._levelRects[level],rect,scale,xMin,yMin,xMax,yMax,i;if(!rects||!rects.length){return true;}
for(i=rects.length-1;i>=0;i--){rect=rects[i];if(level<rect.minLevel||level>rect.maxLevel){continue;}
scale=this.getLevelScale(level);xMin=rect.x*scale;yMin=rect.y*scale;xMax=xMin+rect.width*scale;yMax=yMin+rect.height*scale;xMin=Math.floor(xMin/this.tileSize);yMin=Math.floor(yMin/this.tileSize);xMax=Math.ceil(xMax/this.tileSize);yMax=Math.ceil(yMax/this.tileSize);if(xMin<=x&&x<xMax&&yMin<=y&&y<yMax){return true;}}
return false;}});function configureFromXML(tileSource,xmlDoc){if(!xmlDoc||!xmlDoc.documentElement){throw new Error($.getString("Errors.Xml"));}
var root=xmlDoc.documentElement,rootName=root.localName||root.tagName,ns=xmlDoc.documentElement.namespaceURI,configuration=null,displayRects=[],dispRectNodes,dispRectNode,rectNode,sizeNode,i;if(rootName=="Image"){try{sizeNode=root.getElementsByTagName("Size")[0];if(sizeNode===undefined){sizeNode=root.getElementsByTagNameNS(ns,"Size")[0];}
configuration={Image:{xmlns:"http://schemas.microsoft.com/deepzoom/2008",Url:root.getAttribute("Url"),Format:root.getAttribute("Format"),DisplayRect:null,Overlap:parseInt(root.getAttribute("Overlap"),10),TileSize:parseInt(root.getAttribute("TileSize"),10),Size:{Height:parseInt(sizeNode.getAttribute("Height"),10),Width:parseInt(sizeNode.getAttribute("Width"),10)}}};if(!$.imageFormatSupported(configuration.Image.Format)){throw new Error($.getString("Errors.ImageFormat",configuration.Image.Format.toUpperCase()));}
dispRectNodes=root.getElementsByTagName("DisplayRect");if(dispRectNodes===undefined){dispRectNodes=root.getElementsByTagNameNS(ns,"DisplayRect")[0];}
for(i=0;i<dispRectNodes.length;i++){dispRectNode=dispRectNodes[i];rectNode=dispRectNode.getElementsByTagName("Rect")[0];if(rectNode===undefined){rectNode=dispRectNode.getElementsByTagNameNS(ns,"Rect")[0];}
displayRects.push({Rect:{X:parseInt(rectNode.getAttribute("X"),10),Y:parseInt(rectNode.getAttribute("Y"),10),Width:parseInt(rectNode.getAttribute("Width"),10),Height:parseInt(rectNode.getAttribute("Height"),10),MinLevel:parseInt(dispRectNode.getAttribute("MinLevel"),10),MaxLevel:parseInt(dispRectNode.getAttribute("MaxLevel"),10)}});}
if(displayRects.length){configuration.Image.DisplayRect=displayRects;}
return configureFromObject(tileSource,configuration);}catch(e){throw(e instanceof Error)?e:new Error($.getString("Errors.Dzi"));}}else if(rootName=="Collection"){throw new Error($.getString("Errors.Dzc"));}else if(rootName=="Error"){var messageNode=root.getElementsByTagName("Message")[0];var message=messageNode.firstChild.nodeValue;throw new Error(message);}
throw new Error($.getString("Errors.Dzi"));}
function configureFromObject(tileSource,configuration){var imageData=configuration.Image,tilesUrl=imageData.Url,fileFormat=imageData.Format,sizeData=imageData.Size,dispRectData=imageData.DisplayRect||[],width=parseInt(sizeData.Width,10),height=parseInt(sizeData.Height,10),tileSize=parseInt(imageData.TileSize,10),tileOverlap=parseInt(imageData.Overlap,10),displayRects=[],rectData,i;for(i=0;i<dispRectData.length;i++){rectData=dispRectData[i].Rect;displayRects.push(new $.DisplayRect(parseInt(rectData.X,10),parseInt(rectData.Y,10),parseInt(rectData.Width,10),parseInt(rectData.Height,10),parseInt(rectData.MinLevel,10),parseInt(rectData.MaxLevel,10)));}
return $.extend(true,{width:width,height:height,tileSize:tileSize,tileOverlap:tileOverlap,minLevel:null,maxLevel:null,tilesUrl:tilesUrl,fileFormat:fileFormat,displayRects:displayRects},configuration);}}(OpenSeadragon));(function($){$.IIIFTileSource=function(options){$.extend(true,this,options);if(!(this.height&&this.width&&this['@id'])){throw new Error('IIIF required parameters not provided.');}
options.tileSizePerScaleFactor={};if(this.tile_width&&this.tile_height){options.tileWidth=this.tile_width;options.tileHeight=this.tile_height;}else if(this.tile_width){options.tileSize=this.tile_width;}else if(this.tile_height){options.tileSize=this.tile_height;}else if(this.tiles){if(this.tiles.length==1){options.tileWidth=this.tiles[0].width;options.tileHeight=this.tiles[0].height||this.tiles[0].width;this.scale_factors=this.tiles[0].scaleFactors;}else{this.scale_factors=[];for(var t=0;t<this.tiles.length;t++){for(var sf=0;sf<this.tiles[t].scaleFactors.length;sf++){var scaleFactor=this.tiles[t].scaleFactors[sf];this.scale_factors.push(scaleFactor);options.tileSizePerScaleFactor[scaleFactor]={width:this.tiles[t].width,height:this.tiles[t].height||this.tiles[t].width};}}}}else if(canBeTiled(options.profile)){var shortDim=Math.min(this.height,this.width),tileOptions=[256,512,1024],smallerTiles=[];for(var c=0;c<tileOptions.length;c++){if(tileOptions[c]<=shortDim){smallerTiles.push(tileOptions[c]);}}
if(smallerTiles.length>0){options.tileSize=Math.max.apply(null,smallerTiles);}else{options.tileSize=shortDim;}}else if(this.sizes&&this.sizes.length>0){this.emulateLegacyImagePyramid=true;options.levels=constructLevels(this);$.extend(true,options,{width:options.levels[options.levels.length-1].width,height:options.levels[options.levels.length-1].height,tileSize:Math.max(options.height,options.width),tileOverlap:0,minLevel:0,maxLevel:options.levels.length-1});this.levels=options.levels;}else{$.console.error("Nothing in the info.json to construct image pyramids from");}
if(!options.maxLevel&&!this.emulateLegacyImagePyramid){if(!this.scale_factors){options.maxLevel=Number(Math.ceil(Math.log(Math.max(this.width,this.height),2)));}else{options.maxLevel=Math.floor(Math.pow(Math.max.apply(null,this.scale_factors),0.5));}}
$.TileSource.apply(this,[options]);};$.extend($.IIIFTileSource.prototype,$.TileSource.prototype,{supports:function(data,url){if(data.protocol&&data.protocol=='http://iiif.io/api/image'){return true;}else if(data['@context']&&(data['@context']=="http://library.stanford.edu/iiif/image-api/1.1/context.json"||data['@context']=="http://iiif.io/api/image/1/context.json")){return true;}else if(data.profile&&data.profile.indexOf("http://library.stanford.edu/iiif/image-api/compliance.html")===0){return true;}else if(data.identifier&&data.width&&data.height){return true;}else if(data.documentElement&&"info"==data.documentElement.tagName&&"http://library.stanford.edu/iiif/image-api/ns/"==data.documentElement.namespaceURI){return true;}else{return false;}},configure:function(data,url){if(!$.isPlainObject(data)){var options=configureFromXml10(data);options['@context']="http://iiif.io/api/image/1.0/context.json";options['@id']=url.replace('/info.xml','');return options;}else if(!data['@context']){data['@context']='http://iiif.io/api/image/1.0/context.json';data['@id']=url.replace('/info.json','');return data;}else{return data;}},getTileWidth:function(level){if(this.emulateLegacyImagePyramid){return $.TileSource.prototype.getTileWidth.call(this,level);}
var scaleFactor=Math.pow(2,this.maxLevel-level);if(this.tileSizePerScaleFactor&&this.tileSizePerScaleFactor[scaleFactor]){return this.tileSizePerScaleFactor[scaleFactor].width;}
return this._tileWidth;},getTileHeight:function(level){if(this.emulateLegacyImagePyramid){return $.TileSource.prototype.getTileHeight.call(this,level);}
var scaleFactor=Math.pow(2,this.maxLevel-level);if(this.tileSizePerScaleFactor&&this.tileSizePerScaleFactor[scaleFactor]){return this.tileSizePerScaleFactor[scaleFactor].height;}
return this._tileHeight;},getLevelScale:function(level){if(this.emulateLegacyImagePyramid){var levelScale=NaN;if(this.levels.length>0&&level>=this.minLevel&&level<=this.maxLevel){levelScale=this.levels[level].width/this.levels[this.maxLevel].width;}
return levelScale;}
return $.TileSource.prototype.getLevelScale.call(this,level);},getNumTiles:function(level){if(this.emulateLegacyImagePyramid){var scale=this.getLevelScale(level);if(scale){return new $.Point(1,1);}else{return new $.Point(0,0);}}
return $.TileSource.prototype.getNumTiles.call(this,level);},getTileAtPoint:function(level,point){if(this.emulateLegacyImagePyramid){return new $.Point(0,0);}
return $.TileSource.prototype.getTileAtPoint.call(this,level,point);},getTileUrl:function(level,x,y){if(this.emulateLegacyImagePyramid){var url=null;if(this.levels.length>0&&level>=this.minLevel&&level<=this.maxLevel){url=this.levels[level].url;}
return url;}
var IIIF_ROTATION='0',scale=Math.pow(0.5,this.maxLevel-level),levelWidth=Math.ceil(this.width*scale),levelHeight=Math.ceil(this.height*scale),tileWidth,tileHeight,iiifTileSizeWidth,iiifTileSizeHeight,iiifRegion,iiifTileX,iiifTileY,iiifTileW,iiifTileH,iiifSize,iiifQuality,uri;tileWidth=this.getTileWidth(level);tileHeight=this.getTileHeight(level);iiifTileSizeWidth=Math.ceil(tileWidth/scale);iiifTileSizeHeight=Math.ceil(tileHeight/scale);if(this['@context'].indexOf('/1.0/context.json')>-1||this['@context'].indexOf('/1.1/context.json')>-1||this['@context'].indexOf('/1/context.json')>-1){iiifQuality="native.jpg";}else{iiifQuality="default.jpg";}
if(levelWidth<tileWidth&&levelHeight<tileHeight){iiifSize=levelWidth+",";iiifRegion='full';}else{iiifTileX=x*iiifTileSizeWidth;iiifTileY=y*iiifTileSizeHeight;iiifTileW=Math.min(iiifTileSizeWidth,this.width-iiifTileX);iiifTileH=Math.min(iiifTileSizeHeight,this.height-iiifTileY);iiifSize=Math.ceil(iiifTileW*scale)+",";iiifRegion=[iiifTileX,iiifTileY,iiifTileW,iiifTileH].join(',');}
uri=[this['@id'],iiifRegion,iiifSize,IIIF_ROTATION,iiifQuality].join('/');return uri;}});function canBeTiled(profile){var level0Profiles=["http://library.stanford.edu/iiif/image-api/compliance.html#level0","http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0","http://iiif.io/api/image/2/level0.json"];var isLevel0=(level0Profiles.indexOf(profile[0])!=-1);return!isLevel0||(profile.indexOf("sizeByW")!=-1);}
function constructLevels(options){var levels=[];for(var i=0;i<options.sizes.length;i++){levels.push({url:options['@id']+'/full/'+options.sizes[i].width+',/0/default.jpg',width:options.sizes[i].width,height:options.sizes[i].height});}
return levels.sort(function(a,b){return a.width-b.width;});}
function configureFromXml10(xmlDoc){if(!xmlDoc||!xmlDoc.documentElement){throw new Error($.getString("Errors.Xml"));}
var root=xmlDoc.documentElement,rootName=root.tagName,configuration=null;if(rootName=="info"){try{configuration={};parseXML10(root,configuration);return configuration;}catch(e){throw(e instanceof Error)?e:new Error($.getString("Errors.IIIF"));}}
throw new Error($.getString("Errors.IIIF"));}
function parseXML10(node,configuration,property){var i,value;if(node.nodeType==3&&property){value=node.nodeValue.trim();if(value.match(/^\d*$/)){value=Number(value);}
if(!configuration[property]){configuration[property]=value;}else{if(!$.isArray(configuration[property])){configuration[property]=[configuration[property]];}
configuration[property].push(value);}}else if(node.nodeType==1){for(i=0;i<node.childNodes.length;i++){parseXML10(node.childNodes[i],configuration,node.nodeName);}}}}(OpenSeadragon));(function($){$.OsmTileSource=function(width,height,tileSize,tileOverlap,tilesUrl){var options;if($.isPlainObject(width)){options=width;}else{options={width:arguments[0],height:arguments[1],tileSize:arguments[2],tileOverlap:arguments[3],tilesUrl:arguments[4]};}
if(!options.width||!options.height){options.width=65572864;options.height=65572864;}
if(!options.tileSize){options.tileSize=256;options.tileOverlap=0;}
if(!options.tilesUrl){options.tilesUrl="http://tile.openstreetmap.org/";}
options.minLevel=8;$.TileSource.apply(this,[options]);};$.extend($.OsmTileSource.prototype,$.TileSource.prototype,{supports:function(data,url){return(data.type&&"openstreetmaps"==data.type);},configure:function(data,url){return data;},getTileUrl:function(level,x,y){return this.tilesUrl+(level-8)+"/"+x+"/"+y+".png";}});}(OpenSeadragon));(function($){$.TmsTileSource=function(width,height,tileSize,tileOverlap,tilesUrl){var options;if($.isPlainObject(width)){options=width;}else{options={width:arguments[0],height:arguments[1],tileSize:arguments[2],tileOverlap:arguments[3],tilesUrl:arguments[4]};}
var bufferedWidth=Math.ceil(options.width/256)*256,bufferedHeight=Math.ceil(options.height/256)*256,max;if(bufferedWidth>bufferedHeight){max=bufferedWidth/256;}else{max=bufferedHeight/256;}
options.maxLevel=Math.ceil(Math.log(max)/Math.log(2))-1;options.tileSize=256;options.width=bufferedWidth;options.height=bufferedHeight;$.TileSource.apply(this,[options]);};$.extend($.TmsTileSource.prototype,$.TileSource.prototype,{supports:function(data,url){return(data.type&&"tiledmapservice"==data.type);},configure:function(data,url){return data;},getTileUrl:function(level,x,y){var yTiles=this.getNumTiles(level).y-1;return this.tilesUrl+level+"/"+x+"/"+(yTiles-y)+".png";}});}(OpenSeadragon));(function($){$.LegacyTileSource=function(levels){var options,width,height;if($.isArray(levels)){options={type:'legacy-image-pyramid',levels:levels};}
options.levels=filterFiles(options.levels);if(options.levels.length>0){width=options.levels[options.levels.length-1].width;height=options.levels[options.levels.length-1].height;}
else{width=0;height=0;$.console.error("No supported image formats found");}
$.extend(true,options,{width:width,height:height,tileSize:Math.max(height,width),tileOverlap:0,minLevel:0,maxLevel:options.levels.length>0?options.levels.length-1:0});$.TileSource.apply(this,[options]);this.levels=options.levels;};$.extend($.LegacyTileSource.prototype,$.TileSource.prototype,{supports:function(data,url){return(data.type&&"legacy-image-pyramid"==data.type)||(data.documentElement&&"legacy-image-pyramid"==data.documentElement.getAttribute('type'));},configure:function(configuration,dataUrl){var options;if(!$.isPlainObject(configuration)){options=configureFromXML(this,configuration);}else{options=configureFromObject(this,configuration);}
return options;},getLevelScale:function(level){var levelScale=NaN;if(this.levels.length>0&&level>=this.minLevel&&level<=this.maxLevel){levelScale=this.levels[level].width/this.levels[this.maxLevel].width;}
return levelScale;},getNumTiles:function(level){var scale=this.getLevelScale(level);if(scale){return new $.Point(1,1);}else{return new $.Point(0,0);}},getTileAtPoint:function(level,point){return new $.Point(0,0);},getTileUrl:function(level,x,y){var url=null;if(this.levels.length>0&&level>=this.minLevel&&level<=this.maxLevel){url=this.levels[level].url;}
return url;}});function filterFiles(files){var filtered=[],file,i;for(i=0;i<files.length;i++){file=files[i];if(file.height&&file.width&&file.url&&(file.url.toLowerCase().match(/^.*\.(png|jpg|jpeg|gif)(?:\?.*)?$/)||(file.mimetype&&file.mimetype.toLowerCase().match(/^.*\/(png|jpg|jpeg|gif)$/)))){filtered.push({url:file.url,width:Number(file.width),height:Number(file.height)});}
else{$.console.error('Unsupported image format: %s',file.url?file.url:'<no URL>');}}
return filtered.sort(function(a,b){return a.height-b.height;});}
function configureFromXML(tileSource,xmlDoc){if(!xmlDoc||!xmlDoc.documentElement){throw new Error($.getString("Errors.Xml"));}
var root=xmlDoc.documentElement,rootName=root.tagName,conf=null,levels=[],level,i;if(rootName=="image"){try{conf={type:root.getAttribute("type"),levels:[]};levels=root.getElementsByTagName("level");for(i=0;i<levels.length;i++){level=levels[i];conf.levels.push({url:level.getAttribute("url"),width:parseInt(level.getAttribute("width"),10),height:parseInt(level.getAttribute("height"),10)});}
return configureFromObject(tileSource,conf);}catch(e){throw(e instanceof Error)?e:new Error('Unknown error parsing Legacy Image Pyramid XML.');}}else if(rootName=="collection"){throw new Error('Legacy Image Pyramid Collections not yet supported.');}else if(rootName=="error"){throw new Error('Error: '+xmlDoc);}
throw new Error('Unknown element '+rootName);}
function configureFromObject(tileSource,configuration){return configuration.levels;}}(OpenSeadragon));(function($){$.ImageTileSource=function(options){options=$.extend({buildPyramid:true,crossOriginPolicy:false,ajaxWithCredentials:false,useCanvas:true},options);$.TileSource.apply(this,[options]);};$.extend($.ImageTileSource.prototype,$.TileSource.prototype,{supports:function(data,url){return data.type&&data.type==="image";},configure:function(options,dataUrl){return options;},getImageInfo:function(url){var image=this._image=new Image();var _this=this;if(this.crossOriginPolicy){image.crossOrigin=this.crossOriginPolicy;}
if(this.ajaxWithCredentials){image.useCredentials=this.ajaxWithCredentials;}
$.addEvent(image,'load',function(){_this.width=image.naturalWidth;_this.height=image.naturalHeight;_this.aspectRatio=_this.width/_this.height;_this.dimensions=new $.Point(_this.width,_this.height);_this._tileWidth=_this.width;_this._tileHeight=_this.height;_this.tileOverlap=0;_this.minLevel=0;_this.levels=_this._buildLevels();_this.maxLevel=_this.levels.length-1;_this.ready=true;_this.raiseEvent('ready',{tileSource:_this});});$.addEvent(image,'error',function(){_this.raiseEvent('open-failed',{message:"Error loading image at "+url,source:url});});image.src=url;},getLevelScale:function(level){var levelScale=NaN;if(level>=this.minLevel&&level<=this.maxLevel){levelScale=this.levels[level].width/this.levels[this.maxLevel].width;}
return levelScale;},getNumTiles:function(level){var scale=this.getLevelScale(level);if(scale){return new $.Point(1,1);}else{return new $.Point(0,0);}},getTileAtPoint:function(level,point){return new $.Point(0,0);},getTileUrl:function(level,x,y){var url=null;if(level>=this.minLevel&&level<=this.maxLevel){url=this.levels[level].url;}
return url;},getContext2D:function(level,x,y){var context=null;if(level>=this.minLevel&&level<=this.maxLevel){context=this.levels[level].context2D;}
return context;},_buildLevels:function(){var levels=[{url:this._image.src,width:this._image.naturalWidth,height:this._image.naturalHeight}];if(!this.buildPyramid||!$.supportsCanvas||!this.useCanvas){delete this._image;return levels;}
var currentWidth=this._image.naturalWidth;var currentHeight=this._image.naturalHeight;var bigCanvas=document.createElement("canvas");var bigContext=bigCanvas.getContext("2d");bigCanvas.width=currentWidth;bigCanvas.height=currentHeight;bigContext.drawImage(this._image,0,0,currentWidth,currentHeight);levels[0].context2D=bigContext;delete this._image;if($.isCanvasTainted(bigCanvas)){return levels;}
while(currentWidth>=2&&currentHeight>=2){currentWidth=Math.floor(currentWidth/2);currentHeight=Math.floor(currentHeight/2);var smallCanvas=document.createElement("canvas");var smallContext=smallCanvas.getContext("2d");smallCanvas.width=currentWidth;smallCanvas.height=currentHeight;smallContext.drawImage(bigCanvas,0,0,currentWidth,currentHeight);levels.splice(0,0,{context2D:smallContext,width:currentWidth,height:currentHeight});bigCanvas=smallCanvas;bigContext=smallContext;}
return levels;}});}(OpenSeadragon));(function($){$.TileSourceCollection=function(tileSize,tileSources,rows,layout){$.console.error('TileSourceCollection is deprecated; use World instead');};}(OpenSeadragon));(function($){$.ButtonState={REST:0,GROUP:1,HOVER:2,DOWN:3};$.Button=function(options){var _this=this;$.EventSource.call(this);$.extend(true,this,{tooltip:null,srcRest:null,srcGroup:null,srcHover:null,srcDown:null,clickTimeThreshold:$.DEFAULT_SETTINGS.clickTimeThreshold,clickDistThreshold:$.DEFAULT_SETTINGS.clickDistThreshold,fadeDelay:0,fadeLength:2000,onPress:null,onRelease:null,onClick:null,onEnter:null,onExit:null,onFocus:null,onBlur:null},options);this.element=options.element||$.makeNeutralElement("div");if(!options.element){this.imgRest=$.makeTransparentImage(this.srcRest);this.imgGroup=$.makeTransparentImage(this.srcGroup);this.imgHover=$.makeTransparentImage(this.srcHover);this.imgDown=$.makeTransparentImage(this.srcDown);this.imgRest.alt=this.imgGroup.alt=this.imgHover.alt=this.imgDown.alt=this.tooltip;this.element.style.position="relative";$.setElementTouchActionNone(this.element);this.imgGroup.style.position=this.imgHover.style.position=this.imgDown.style.position="absolute";this.imgGroup.style.top=this.imgHover.style.top=this.imgDown.style.top="0px";this.imgGroup.style.left=this.imgHover.style.left=this.imgDown.style.left="0px";this.imgHover.style.visibility=this.imgDown.style.visibility="hidden";if($.Browser.vendor==$.BROWSERS.FIREFOX&&$.Browser.version<3){this.imgGroup.style.top=this.imgHover.style.top=this.imgDown.style.top="";}
this.element.appendChild(this.imgRest);this.element.appendChild(this.imgGroup);this.element.appendChild(this.imgHover);this.element.appendChild(this.imgDown);}
this.addHandler("press",this.onPress);this.addHandler("release",this.onRelease);this.addHandler("click",this.onClick);this.addHandler("enter",this.onEnter);this.addHandler("exit",this.onExit);this.addHandler("focus",this.onFocus);this.addHandler("blur",this.onBlur);this.currentState=$.ButtonState.GROUP;this.fadeBeginTime=null;this.shouldFade=false;this.element.style.display="inline-block";this.element.style.position="relative";this.element.title=this.tooltip;this.tracker=new $.MouseTracker({element:this.element,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,enterHandler:function(event){if(event.insideElementPressed){inTo(_this,$.ButtonState.DOWN);_this.raiseEvent("enter",{originalEvent:event.originalEvent});}else if(!event.buttonDownAny){inTo(_this,$.ButtonState.HOVER);}},focusHandler:function(event){this.enterHandler(event);_this.raiseEvent("focus",{originalEvent:event.originalEvent});},exitHandler:function(event){outTo(_this,$.ButtonState.GROUP);if(event.insideElementPressed){_this.raiseEvent("exit",{originalEvent:event.originalEvent});}},blurHandler:function(event){this.exitHandler(event);_this.raiseEvent("blur",{originalEvent:event.originalEvent});},pressHandler:function(event){inTo(_this,$.ButtonState.DOWN);_this.raiseEvent("press",{originalEvent:event.originalEvent});},releaseHandler:function(event){if(event.insideElementPressed&&event.insideElementReleased){outTo(_this,$.ButtonState.HOVER);_this.raiseEvent("release",{originalEvent:event.originalEvent});}else if(event.insideElementPressed){outTo(_this,$.ButtonState.GROUP);}else{inTo(_this,$.ButtonState.HOVER);}},clickHandler:function(event){if(event.quick){_this.raiseEvent("click",{originalEvent:event.originalEvent});}},keyHandler:function(event){if(13===event.keyCode){_this.raiseEvent("click",{originalEvent:event.originalEvent});_this.raiseEvent("release",{originalEvent:event.originalEvent});return false;}
return true;}});outTo(this,$.ButtonState.REST);};$.extend($.Button.prototype,$.EventSource.prototype,{notifyGroupEnter:function(){inTo(this,$.ButtonState.GROUP);},notifyGroupExit:function(){outTo(this,$.ButtonState.REST);},disable:function(){this.notifyGroupExit();this.element.disabled=true;$.setElementOpacity(this.element,0.2,true);},enable:function(){this.element.disabled=false;$.setElementOpacity(this.element,1.0,true);this.notifyGroupEnter();}});function scheduleFade(button){$.requestAnimationFrame(function(){updateFade(button);});}
function updateFade(button){var currentTime,deltaTime,opacity;if(button.shouldFade){currentTime=$.now();deltaTime=currentTime-button.fadeBeginTime;opacity=1.0-deltaTime/button.fadeLength;opacity=Math.min(1.0,opacity);opacity=Math.max(0.0,opacity);if(button.imgGroup){$.setElementOpacity(button.imgGroup,opacity,true);}
if(opacity>0){scheduleFade(button);}}}
function beginFading(button){button.shouldFade=true;button.fadeBeginTime=$.now()+button.fadeDelay;window.setTimeout(function(){scheduleFade(button);},button.fadeDelay);}
function stopFading(button){button.shouldFade=false;if(button.imgGroup){$.setElementOpacity(button.imgGroup,1.0,true);}}
function inTo(button,newState){if(button.element.disabled){return;}
if(newState>=$.ButtonState.GROUP&&button.currentState==$.ButtonState.REST){stopFading(button);button.currentState=$.ButtonState.GROUP;}
if(newState>=$.ButtonState.HOVER&&button.currentState==$.ButtonState.GROUP){if(button.imgHover){button.imgHover.style.visibility="";}
button.currentState=$.ButtonState.HOVER;}
if(newState>=$.ButtonState.DOWN&&button.currentState==$.ButtonState.HOVER){if(button.imgDown){button.imgDown.style.visibility="";}
button.currentState=$.ButtonState.DOWN;}}
function outTo(button,newState){if(button.element.disabled){return;}
if(newState<=$.ButtonState.HOVER&&button.currentState==$.ButtonState.DOWN){if(button.imgDown){button.imgDown.style.visibility="hidden";}
button.currentState=$.ButtonState.HOVER;}
if(newState<=$.ButtonState.GROUP&&button.currentState==$.ButtonState.HOVER){if(button.imgHover){button.imgHover.style.visibility="hidden";}
button.currentState=$.ButtonState.GROUP;}
if(newState<=$.ButtonState.REST&&button.currentState==$.ButtonState.GROUP){beginFading(button);button.currentState=$.ButtonState.REST;}}}(OpenSeadragon));(function($){$.ButtonGroup=function(options){$.extend(true,this,{buttons:[],clickTimeThreshold:$.DEFAULT_SETTINGS.clickTimeThreshold,clickDistThreshold:$.DEFAULT_SETTINGS.clickDistThreshold,labelText:""},options);var buttons=this.buttons.concat([]),_this=this,i;this.element=options.element||$.makeNeutralElement("div");if(!options.group){this.label=$.makeNeutralElement("label");this.element.style.display="inline-block";this.element.appendChild(this.label);for(i=0;i<buttons.length;i++){this.element.appendChild(buttons[i].element);}}
$.setElementTouchActionNone(this.element);this.tracker=new $.MouseTracker({element:this.element,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,enterHandler:function(event){var i;for(i=0;i<_this.buttons.length;i++){_this.buttons[i].notifyGroupEnter();}},exitHandler:function(event){var i;if(!event.insideElementPressed){for(i=0;i<_this.buttons.length;i++){_this.buttons[i].notifyGroupExit();}}},});};$.ButtonGroup.prototype={emulateEnter:function(){this.tracker.enterHandler({eventSource:this.tracker});},emulateExit:function(){this.tracker.exitHandler({eventSource:this.tracker});}};}(OpenSeadragon));(function($){$.Rect=function(x,y,width,height,degrees){this.x=typeof(x)==="number"?x:0;this.y=typeof(y)==="number"?y:0;this.width=typeof(width)==="number"?width:0;this.height=typeof(height)==="number"?height:0;this.degrees=typeof(degrees)==="number"?degrees:0;this.degrees=this.degrees%360;if(this.degrees<0){this.degrees+=360;}
var newTopLeft,newWidth;if(this.degrees>=270){newTopLeft=this.getTopRight();this.x=newTopLeft.x;this.y=newTopLeft.y;newWidth=this.height;this.height=this.width;this.width=newWidth;this.degrees-=270;}else if(this.degrees>=180){newTopLeft=this.getBottomRight();this.x=newTopLeft.x;this.y=newTopLeft.y;this.degrees-=180;}else if(this.degrees>=90){newTopLeft=this.getBottomLeft();this.x=newTopLeft.x;this.y=newTopLeft.y;newWidth=this.height;this.height=this.width;this.width=newWidth;this.degrees-=90;}};$.Rect.fromSummits=function(topLeft,topRight,bottomLeft){var width=topLeft.distanceTo(topRight);var height=topLeft.distanceTo(bottomLeft);var diff=topRight.minus(topLeft);var radians=Math.atan(diff.y/diff.x);if(diff.x<0){radians+=Math.PI;}else if(diff.y<0){radians+=2*Math.PI;}
return new $.Rect(topLeft.x,topLeft.y,width,height,radians/Math.PI*180);};$.Rect.prototype={clone:function(){return new $.Rect(this.x,this.y,this.width,this.height,this.degrees);},getAspectRatio:function(){return this.width/this.height;},getTopLeft:function(){return new $.Point(this.x,this.y);},getBottomRight:function(){return new $.Point(this.x+this.width,this.y+this.height).rotate(this.degrees,this.getTopLeft());},getTopRight:function(){return new $.Point(this.x+this.width,this.y).rotate(this.degrees,this.getTopLeft());},getBottomLeft:function(){return new $.Point(this.x,this.y+this.height).rotate(this.degrees,this.getTopLeft());},getCenter:function(){return new $.Point(this.x+this.width/2.0,this.y+this.height/2.0).rotate(this.degrees,this.getTopLeft());},getSize:function(){return new $.Point(this.width,this.height);},equals:function(other){return(other instanceof $.Rect)&&this.x===other.x&&this.y===other.y&&this.width===other.width&&this.height===other.height&&this.degrees===other.degrees;},times:function(factor){return new $.Rect(this.x*factor,this.y*factor,this.width*factor,this.height*factor,this.degrees);},translate:function(delta){return new $.Rect(this.x+delta.x,this.y+delta.y,this.width,this.height,this.degrees);},union:function(rect){var thisBoundingBox=this.getBoundingBox();var otherBoundingBox=rect.getBoundingBox();var left=Math.min(thisBoundingBox.x,otherBoundingBox.x);var top=Math.min(thisBoundingBox.y,otherBoundingBox.y);var right=Math.max(thisBoundingBox.x+thisBoundingBox.width,otherBoundingBox.x+otherBoundingBox.width);var bottom=Math.max(thisBoundingBox.y+thisBoundingBox.height,otherBoundingBox.y+otherBoundingBox.height);return new $.Rect(left,top,right-left,bottom-top);},intersection:function(rect){var EPSILON=0.0000000001;var intersectionPoints=[];var thisTopLeft=this.getTopLeft();if(rect.containsPoint(thisTopLeft,EPSILON)){intersectionPoints.push(thisTopLeft);}
var thisTopRight=this.getTopRight();if(rect.containsPoint(thisTopRight,EPSILON)){intersectionPoints.push(thisTopRight);}
var thisBottomLeft=this.getBottomLeft();if(rect.containsPoint(thisBottomLeft,EPSILON)){intersectionPoints.push(thisBottomLeft);}
var thisBottomRight=this.getBottomRight();if(rect.containsPoint(thisBottomRight,EPSILON)){intersectionPoints.push(thisBottomRight);}
var rectTopLeft=rect.getTopLeft();if(this.containsPoint(rectTopLeft,EPSILON)){intersectionPoints.push(rectTopLeft);}
var rectTopRight=rect.getTopRight();if(this.containsPoint(rectTopRight,EPSILON)){intersectionPoints.push(rectTopRight);}
var rectBottomLeft=rect.getBottomLeft();if(this.containsPoint(rectBottomLeft,EPSILON)){intersectionPoints.push(rectBottomLeft);}
var rectBottomRight=rect.getBottomRight();if(this.containsPoint(rectBottomRight,EPSILON)){intersectionPoints.push(rectBottomRight);}
var thisSegments=this._getSegments();var rectSegments=rect._getSegments();for(var i=0;i<thisSegments.length;i++){var thisSegment=thisSegments[i];for(var j=0;j<rectSegments.length;j++){var rectSegment=rectSegments[j];var intersect=getIntersection(thisSegment[0],thisSegment[1],rectSegment[0],rectSegment[1]);if(intersect){intersectionPoints.push(intersect);}}}
function getIntersection(a,b,c,d){var abVector=b.minus(a);var cdVector=d.minus(c);var denom=-cdVector.x*abVector.y+abVector.x*cdVector.y;if(denom===0){return null;}
var s=(abVector.x*(a.y-c.y)-abVector.y*(a.x-c.x))/denom;var t=(cdVector.x*(a.y-c.y)-cdVector.y*(a.x-c.x))/denom;if(-EPSILON<=s&&s<=1-EPSILON&&-EPSILON<=t&&t<=1-EPSILON){return new $.Point(a.x+t*abVector.x,a.y+t*abVector.y);}
return null;}
if(intersectionPoints.length===0){return null;}
var minX=intersectionPoints[0].x;var maxX=intersectionPoints[0].x;var minY=intersectionPoints[0].y;var maxY=intersectionPoints[0].y;for(var k=1;k<intersectionPoints.length;k++){var point=intersectionPoints[k];if(point.x<minX){minX=point.x;}
if(point.x>maxX){maxX=point.x;}
if(point.y<minY){minY=point.y;}
if(point.y>maxY){maxY=point.y;}}
return new $.Rect(minX,minY,maxX-minX,maxY-minY);},_getSegments:function(){var topLeft=this.getTopLeft();var topRight=this.getTopRight();var bottomLeft=this.getBottomLeft();var bottomRight=this.getBottomRight();return[[topLeft,topRight],[topRight,bottomRight],[bottomRight,bottomLeft],[bottomLeft,topLeft]];},rotate:function(degrees,pivot){degrees=degrees%360;if(degrees===0){return this.clone();}
if(degrees<0){degrees+=360;}
pivot=pivot||this.getCenter();var newTopLeft=this.getTopLeft().rotate(degrees,pivot);var newTopRight=this.getTopRight().rotate(degrees,pivot);var diff=newTopRight.minus(newTopLeft);var radians=Math.atan(diff.y/diff.x);if(diff.x<0){radians+=Math.PI;}else if(diff.y<0){radians+=2*Math.PI;}
return new $.Rect(newTopLeft.x,newTopLeft.y,this.width,this.height,radians/Math.PI*180);},getBoundingBox:function(){if(this.degrees===0){return this.clone();}
var topLeft=this.getTopLeft();var topRight=this.getTopRight();var bottomLeft=this.getBottomLeft();var bottomRight=this.getBottomRight();var minX=Math.min(topLeft.x,topRight.x,bottomLeft.x,bottomRight.x);var maxX=Math.max(topLeft.x,topRight.x,bottomLeft.x,bottomRight.x);var minY=Math.min(topLeft.y,topRight.y,bottomLeft.y,bottomRight.y);var maxY=Math.max(topLeft.y,topRight.y,bottomLeft.y,bottomRight.y);return new $.Rect(minX,minY,maxX-minX,maxY-minY);},getIntegerBoundingBox:function(){var boundingBox=this.getBoundingBox();var x=Math.floor(boundingBox.x);var y=Math.floor(boundingBox.y);var width=Math.ceil(boundingBox.width+boundingBox.x-x);var height=Math.ceil(boundingBox.height+boundingBox.y-y);return new $.Rect(x,y,width,height);},containsPoint:function(point,epsilon){epsilon=epsilon||0;var topLeft=this.getTopLeft();var topRight=this.getTopRight();var bottomLeft=this.getBottomLeft();var topDiff=topRight.minus(topLeft);var leftDiff=bottomLeft.minus(topLeft);return((point.x-topLeft.x)*topDiff.x+
(point.y-topLeft.y)*topDiff.y>=-epsilon)&&((point.x-topRight.x)*topDiff.x+
(point.y-topRight.y)*topDiff.y<=epsilon)&&((point.x-topLeft.x)*leftDiff.x+
(point.y-topLeft.y)*leftDiff.y>=-epsilon)&&((point.x-bottomLeft.x)*leftDiff.x+
(point.y-bottomLeft.y)*leftDiff.y<=epsilon);},toString:function(){return "["+
(Math.round(this.x*100)/100)+", "+
(Math.round(this.y*100)/100)+", "+
(Math.round(this.width*100)/100)+"x"+
(Math.round(this.height*100)/100)+", "+
(Math.round(this.degrees*100)/100)+"deg"+
"]";}};}(OpenSeadragon));(function($){var THIS={};$.ReferenceStrip=function(options){var _this=this,viewer=options.viewer,viewerSize=$.getElementSize(viewer.element),element,style,i;if(!options.id){options.id='referencestrip-'+$.now();this.element=$.makeNeutralElement("div");this.element.id=options.id;this.element.className='referencestrip';}
options=$.extend(true,{sizeRatio:$.DEFAULT_SETTINGS.referenceStripSizeRatio,position:$.DEFAULT_SETTINGS.referenceStripPosition,scroll:$.DEFAULT_SETTINGS.referenceStripScroll,clickTimeThreshold:$.DEFAULT_SETTINGS.clickTimeThreshold},options,{element:this.element,showNavigator:false,mouseNavEnabled:false,showNavigationControl:false,showSequenceControl:false});$.extend(this,options);THIS[this.id]={"animating":false};this.minPixelRatio=this.viewer.minPixelRatio;style=this.element.style;style.marginTop='0px';style.marginRight='0px';style.marginBottom='0px';style.marginLeft='0px';style.left='0px';style.bottom='0px';style.border='0px';style.background='#000';style.position='relative';$.setElementTouchActionNone(this.element);$.setElementOpacity(this.element,0.8);this.viewer=viewer;this.innerTracker=new $.MouseTracker({element:this.element,dragHandler:$.delegate(this,onStripDrag),scrollHandler:$.delegate(this,onStripScroll),enterHandler:$.delegate(this,onStripEnter),exitHandler:$.delegate(this,onStripExit),keyDownHandler:$.delegate(this,onKeyDown),keyHandler:$.delegate(this,onKeyPress)});if(options.width&&options.height){this.element.style.width=options.width+'px';this.element.style.height=options.height+'px';viewer.addControl(this.element,{anchor:$.ControlAnchor.BOTTOM_LEFT});}else{if("horizontal"==options.scroll){this.element.style.width=(viewerSize.x*options.sizeRatio*viewer.tileSources.length)+(12*viewer.tileSources.length)+'px';this.element.style.height=(viewerSize.y*options.sizeRatio)+'px';viewer.addControl(this.element,{anchor:$.ControlAnchor.BOTTOM_LEFT});}else{this.element.style.height=(viewerSize.y*options.sizeRatio*viewer.tileSources.length)+(12*viewer.tileSources.length)+'px';this.element.style.width=(viewerSize.x*options.sizeRatio)+'px';viewer.addControl(this.element,{anchor:$.ControlAnchor.TOP_LEFT});}}
this.panelWidth=(viewerSize.x*this.sizeRatio)+8;this.panelHeight=(viewerSize.y*this.sizeRatio)+8;this.panels=[];for(i=0;i<viewer.tileSources.length;i++){element=$.makeNeutralElement('div');element.id=this.element.id+"-"+i;element.style.width=_this.panelWidth+'px';element.style.height=_this.panelHeight+'px';element.style.display='inline';element.style.float='left';element.style.cssFloat='left';element.style.styleFloat='left';element.style.padding='2px';$.setElementTouchActionNone(element);element.innerTracker=new $.MouseTracker({element:element,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,pressHandler:function(event){event.eventSource.dragging=$.now();},releaseHandler:function(event){var tracker=event.eventSource,id=tracker.element.id,page=Number(id.split('-')[2]),now=$.now();if(event.insideElementPressed&&event.insideElementReleased&&tracker.dragging&&(now-tracker.dragging)<tracker.clickTimeThreshold){tracker.dragging=null;viewer.goToPage(page);}}});this.element.appendChild(element);element.activePanel=false;this.panels.push(element);}
loadPanels(this,this.scroll=='vertical'?viewerSize.y:viewerSize.x,0);this.setFocus(0);};$.extend($.ReferenceStrip.prototype,$.EventSource.prototype,$.Viewer.prototype,{setFocus:function(page){var element=$.getElement(this.element.id+'-'+page),viewerSize=$.getElementSize(this.viewer.canvas),scrollWidth=Number(this.element.style.width.replace('px','')),scrollHeight=Number(this.element.style.height.replace('px','')),offsetLeft=-Number(this.element.style.marginLeft.replace('px','')),offsetTop=-Number(this.element.style.marginTop.replace('px','')),offset;if(this.currentSelected!==element){if(this.currentSelected){this.currentSelected.style.background='#000';}
this.currentSelected=element;this.currentSelected.style.background='#999';if('horizontal'==this.scroll){offset=(Number(page))*(this.panelWidth+3);if(offset>offsetLeft+viewerSize.x-this.panelWidth){offset=Math.min(offset,(scrollWidth-viewerSize.x));this.element.style.marginLeft=-offset+'px';loadPanels(this,viewerSize.x,-offset);}else if(offset<offsetLeft){offset=Math.max(0,offset-viewerSize.x/2);this.element.style.marginLeft=-offset+'px';loadPanels(this,viewerSize.x,-offset);}}else{offset=(Number(page))*(this.panelHeight+3);if(offset>offsetTop+viewerSize.y-this.panelHeight){offset=Math.min(offset,(scrollHeight-viewerSize.y));this.element.style.marginTop=-offset+'px';loadPanels(this,viewerSize.y,-offset);}else if(offset<offsetTop){offset=Math.max(0,offset-viewerSize.y/2);this.element.style.marginTop=-offset+'px';loadPanels(this,viewerSize.y,-offset);}}
this.currentPage=page;onStripEnter.call(this,{eventSource:this.innerTracker});}},update:function(){if(THIS[this.id].animating){$.console.log('image reference strip update');return true;}
return false;},destroy:function(){if(this.element){this.element.parentNode.removeChild(this.element);}}});function onStripDrag(event){var offsetLeft=Number(this.element.style.marginLeft.replace('px','')),offsetTop=Number(this.element.style.marginTop.replace('px','')),scrollWidth=Number(this.element.style.width.replace('px','')),scrollHeight=Number(this.element.style.height.replace('px','')),viewerSize=$.getElementSize(this.viewer.canvas);this.dragging=true;if(this.element){if('horizontal'==this.scroll){if(-event.delta.x>0){if(offsetLeft>-(scrollWidth-viewerSize.x)){this.element.style.marginLeft=(offsetLeft+(event.delta.x*2))+'px';loadPanels(this,viewerSize.x,offsetLeft+(event.delta.x*2));}}else if(-event.delta.x<0){if(offsetLeft<0){this.element.style.marginLeft=(offsetLeft+(event.delta.x*2))+'px';loadPanels(this,viewerSize.x,offsetLeft+(event.delta.x*2));}}}else{if(-event.delta.y>0){if(offsetTop>-(scrollHeight-viewerSize.y)){this.element.style.marginTop=(offsetTop+(event.delta.y*2))+'px';loadPanels(this,viewerSize.y,offsetTop+(event.delta.y*2));}}else if(-event.delta.y<0){if(offsetTop<0){this.element.style.marginTop=(offsetTop+(event.delta.y*2))+'px';loadPanels(this,viewerSize.y,offsetTop+(event.delta.y*2));}}}}
return false;}
function onStripScroll(event){var offsetLeft=Number(this.element.style.marginLeft.replace('px','')),offsetTop=Number(this.element.style.marginTop.replace('px','')),scrollWidth=Number(this.element.style.width.replace('px','')),scrollHeight=Number(this.element.style.height.replace('px','')),viewerSize=$.getElementSize(this.viewer.canvas);if(this.element){if('horizontal'==this.scroll){if(event.scroll>0){if(offsetLeft>-(scrollWidth-viewerSize.x)){this.element.style.marginLeft=(offsetLeft-(event.scroll*60))+'px';loadPanels(this,viewerSize.x,offsetLeft-(event.scroll*60));}}else if(event.scroll<0){if(offsetLeft<0){this.element.style.marginLeft=(offsetLeft-(event.scroll*60))+'px';loadPanels(this,viewerSize.x,offsetLeft-(event.scroll*60));}}}else{if(event.scroll<0){if(offsetTop>viewerSize.y-scrollHeight){this.element.style.marginTop=(offsetTop+(event.scroll*60))+'px';loadPanels(this,viewerSize.y,offsetTop+(event.scroll*60));}}else if(event.scroll>0){if(offsetTop<0){this.element.style.marginTop=(offsetTop+(event.scroll*60))+'px';loadPanels(this,viewerSize.y,offsetTop+(event.scroll*60));}}}}
return false;}
function loadPanels(strip,viewerSize,scroll){var panelSize,activePanelsStart,activePanelsEnd,miniViewer,style,i,element;if('horizontal'==strip.scroll){panelSize=strip.panelWidth;}else{panelSize=strip.panelHeight;}
activePanelsStart=Math.ceil(viewerSize/panelSize)+5;activePanelsEnd=Math.ceil((Math.abs(scroll)+viewerSize)/panelSize)+1;activePanelsStart=activePanelsEnd-activePanelsStart;activePanelsStart=activePanelsStart<0?0:activePanelsStart;for(i=activePanelsStart;i<activePanelsEnd&&i<strip.panels.length;i++){element=strip.panels[i];if(!element.activePanel){miniViewer=new $.Viewer({id:element.id,tileSources:[strip.viewer.tileSources[i]],element:element,navigatorSizeRatio:strip.sizeRatio,showNavigator:false,mouseNavEnabled:false,showNavigationControl:false,showSequenceControl:false,immediateRender:true,blendTime:0,animationTime:0});miniViewer.displayRegion=$.makeNeutralElement("div");miniViewer.displayRegion.id=element.id+'-displayregion';miniViewer.displayRegion.className='displayregion';style=miniViewer.displayRegion.style;style.position='relative';style.top='0px';style.left='0px';style.fontSize='0px';style.overflow='hidden';style.float='left';style.cssFloat='left';style.styleFloat='left';style.zIndex=999999999;style.cursor='default';style.width=(strip.panelWidth-4)+'px';style.height=(strip.panelHeight-4)+'px';miniViewer.displayRegion.innerTracker=new $.MouseTracker({element:miniViewer.displayRegion,startDisabled:true});element.getElementsByTagName('div')[0].appendChild(miniViewer.displayRegion);element.activePanel=true;}}}
function onStripEnter(event){var element=event.eventSource.element;if('horizontal'==this.scroll){element.style.marginBottom="0px";}else{element.style.marginLeft="0px";}
return false;}
function onStripExit(event){var element=event.eventSource.element;if('horizontal'==this.scroll){element.style.marginBottom="-"+($.getElementSize(element).y/2)+"px";}else{element.style.marginLeft="-"+($.getElementSize(element).x/2)+"px";}
return false;}
function onKeyDown(event){if(!event.preventDefaultAction&&!event.ctrl&&!event.alt&&!event.meta){switch(event.keyCode){case 38:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:1,shift:null});return false;case 40:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:-1,shift:null});return false;case 37:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:-1,shift:null});return false;case 39:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:1,shift:null});return false;default:return true;}}else{return true;}}
function onKeyPress(event){if(!event.preventDefaultAction&&!event.ctrl&&!event.alt&&!event.meta){switch(event.keyCode){case 61:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:1,shift:null});return false;case 45:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:-1,shift:null});return false;case 48:case 119:case 87:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:1,shift:null});return false;case 115:case 83:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:-1,shift:null});return false;case 97:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:-1,shift:null});return false;case 100:onStripScroll.call(this,{eventSource:this.tracker,position:null,scroll:1,shift:null});return false;default:return true;}}else{return true;}}}(OpenSeadragon));(function($){$.DisplayRect=function(x,y,width,height,minLevel,maxLevel){$.Rect.apply(this,[x,y,width,height]);this.minLevel=minLevel;this.maxLevel=maxLevel;};$.extend($.DisplayRect.prototype,$.Rect.prototype);}(OpenSeadragon));(function($){$.Spring=function(options){var args=arguments;if(typeof(options)!='object'){options={initial:args.length&&typeof(args[0])=="number"?args[0]:undefined,springStiffness:args.length>1?args[1].springStiffness:5.0,animationTime:args.length>1?args[1].animationTime:1.5};}
$.console.assert(typeof options.springStiffness==="number"&&options.springStiffness!==0,"[OpenSeadragon.Spring] options.springStiffness must be a non-zero number");$.console.assert(typeof options.animationTime==="number"&&options.animationTime>=0,"[OpenSeadragon.Spring] options.animationTime must be a number greater than or equal to 0");if(options.exponential){this._exponential=true;delete options.exponential;}
$.extend(true,this,options);this.current={value:typeof(this.initial)=="number"?this.initial:(this._exponential?0:1),time:$.now()};$.console.assert(!this._exponential||this.current.value!==0,"[OpenSeadragon.Spring] value must be non-zero for exponential springs");this.start={value:this.current.value,time:this.current.time};this.target={value:this.current.value,time:this.current.time};if(this._exponential){this.start._logValue=Math.log(this.start.value);this.target._logValue=Math.log(this.target.value);this.current._logValue=Math.log(this.current.value);}};$.Spring.prototype={resetTo:function(target){$.console.assert(!this._exponential||target!==0,"[OpenSeadragon.Spring.resetTo] target must be non-zero for exponential springs");this.start.value=this.target.value=this.current.value=target;this.start.time=this.target.time=this.current.time=$.now();if(this._exponential){this.start._logValue=Math.log(this.start.value);this.target._logValue=Math.log(this.target.value);this.current._logValue=Math.log(this.current.value);}},springTo:function(target){$.console.assert(!this._exponential||target!==0,"[OpenSeadragon.Spring.springTo] target must be non-zero for exponential springs");this.start.value=this.current.value;this.start.time=this.current.time;this.target.value=target;this.target.time=this.start.time+1000*this.animationTime;if(this._exponential){this.start._logValue=Math.log(this.start.value);this.target._logValue=Math.log(this.target.value);}},shiftBy:function(delta){this.start.value+=delta;this.target.value+=delta;if(this._exponential){$.console.assert(this.target.value!==0&&this.start.value!==0,"[OpenSeadragon.Spring.shiftBy] spring value must be non-zero for exponential springs");this.start._logValue=Math.log(this.start.value);this.target._logValue=Math.log(this.target.value);}},setExponential:function(value){this._exponential=value;if(this._exponential){$.console.assert(this.current.value!==0&&this.target.value!==0&&this.start.value!==0,"[OpenSeadragon.Spring.setExponential] spring value must be non-zero for exponential springs");this.start._logValue=Math.log(this.start.value);this.target._logValue=Math.log(this.target.value);this.current._logValue=Math.log(this.current.value);}},update:function(){this.current.time=$.now();var startValue,targetValue;if(this._exponential){startValue=this.start._logValue;targetValue=this.target._logValue;}else{startValue=this.start.value;targetValue=this.target.value;}
var currentValue=(this.current.time>=this.target.time)?targetValue:startValue+
(targetValue-startValue)*transform(this.springStiffness,(this.current.time-this.start.time)/(this.target.time-this.start.time));if(this._exponential){this.current.value=Math.exp(currentValue);}else{this.current.value=currentValue;}},isAtTargetValue:function(){return this.current.value===this.target.value;}};function transform(stiffness,x){return(1.0-Math.exp(stiffness*-x))/(1.0-Math.exp(-stiffness));}}(OpenSeadragon));(function($){function ImageJob(options){$.extend(true,this,{timeout:$.DEFAULT_SETTINGS.timeout,jobId:null},options);this.image=null;}
ImageJob.prototype={errorMsg:null,start:function(){var _this=this;this.image=new Image();if(this.crossOriginPolicy!==false){this.image.crossOrigin=this.crossOriginPolicy;}
this.image.onload=function(){_this.finish(true);};this.image.onabort=this.image.onerror=function(){_this.errorMsg="Image load aborted";_this.finish(false);};this.jobId=window.setTimeout(function(){_this.errorMsg="Image load exceeded timeout";_this.finish(false);},this.timeout);this.image.src=this.src;},finish:function(successful){this.image.onload=this.image.onerror=this.image.onabort=null;if(!successful){this.image=null;}
if(this.jobId){window.clearTimeout(this.jobId);}
this.callback(this);}};$.ImageLoader=function(options){$.extend(true,this,{jobLimit:$.DEFAULT_SETTINGS.imageLoaderLimit,jobQueue:[],jobsInProgress:0},options);};$.ImageLoader.prototype={addJob:function(options){var _this=this,complete=function(job){completeJob(_this,job,options.callback);},jobOptions={src:options.src,crossOriginPolicy:options.crossOriginPolicy,callback:complete,abort:options.abort},newJob=new ImageJob(jobOptions);if(!this.jobLimit||this.jobsInProgress<this.jobLimit){newJob.start();this.jobsInProgress++;}
else{this.jobQueue.push(newJob);}},clear:function(){for(var i=0;i<this.jobQueue.length;i++){var job=this.jobQueue[i];if(typeof job.abort==="function"){job.abort();}}
this.jobQueue=[];}};function completeJob(loader,job,callback){var nextJob;loader.jobsInProgress--;if((!loader.jobLimit||loader.jobsInProgress<loader.jobLimit)&&loader.jobQueue.length>0){nextJob=loader.jobQueue.shift();nextJob.start();loader.jobsInProgress++;}
callback(job.image,job.errorMsg);}}(OpenSeadragon));(function($){$.Tile=function(level,x,y,bounds,exists,url,context2D){this.level=level;this.x=x;this.y=y;this.bounds=bounds;this.exists=exists;this.url=url;this.context2D=context2D;this.loaded=false;this.loading=false;this.element=null;this.imgElement=null;this.image=null;this.style=null;this.position=null;this.size=null;this.blendStart=null;this.opacity=null;this.distance=null;this.visibility=null;this.beingDrawn=false;this.lastTouchTime=0;};$.Tile.prototype={toString:function(){return this.level+"/"+this.x+"_"+this.y;},_hasTransparencyChannel:function(){return!!this.context2D||this.url.match('.png');},drawHTML:function(container){if(!this.cacheImageRecord){$.console.warn('[Tile.drawHTML] attempting to draw tile %s when it\'s not cached',this.toString());return;}
if(!this.loaded){$.console.warn("Attempting to draw tile %s when it's not yet loaded.",this.toString());return;}
if(!this.element){this.element=$.makeNeutralElement("div");this.imgElement=this.cacheImageRecord.getImage().cloneNode();this.imgElement.style.msInterpolationMode="nearest-neighbor";this.imgElement.style.width="100%";this.imgElement.style.height="100%";this.style=this.element.style;this.style.position="absolute";}
if(this.element.parentNode!=container){container.appendChild(this.element);}
if(this.imgElement.parentNode!=this.element){this.element.appendChild(this.imgElement);}
this.style.top=this.position.y+"px";this.style.left=this.position.x+"px";this.style.height=this.size.y+"px";this.style.width=this.size.x+"px";$.setElementOpacity(this.element,this.opacity);},drawCanvas:function(context,drawingHandler,scale,translate){var position=this.position.times($.pixelDensityRatio),size=this.size.times($.pixelDensityRatio),rendered;if(!this.context2D&&!this.cacheImageRecord){$.console.warn('[Tile.drawCanvas] attempting to draw tile %s when it\'s not cached',this.toString());return;}
rendered=this.context2D||this.cacheImageRecord.getRenderedContext();if(!this.loaded||!rendered){$.console.warn("Attempting to draw tile %s when it's not yet loaded.",this.toString());return;}
context.save();context.globalAlpha=this.opacity;if(typeof scale==='number'&&scale!==1){position=position.times(scale);size=size.times(scale);}
if(translate instanceof $.Point){position=position.plus(translate);}
if(context.globalAlpha===1&&this._hasTransparencyChannel()){context.clearRect(position.x+1,position.y+1,size.x-2,size.y-2);}
drawingHandler({context:context,tile:this,rendered:rendered});context.drawImage(rendered.canvas,0,0,rendered.canvas.width,rendered.canvas.height,position.x,position.y,size.x,size.y);context.restore();},getScaleForEdgeSmoothing:function(){var context;if(this.cacheImageRecord){context=this.cacheImageRecord.getRenderedContext();}else if(this.context2D){context=this.context2D;}else{$.console.warn('[Tile.drawCanvas] attempting to get tile scale %s when tile\'s not cached',this.toString());return 1;}
return context.canvas.width/(this.size.x*$.pixelDensityRatio);},getTranslationForEdgeSmoothing:function(scale,canvasSize,sketchCanvasSize){var x=Math.max(1,Math.ceil((sketchCanvasSize.x-canvasSize.x)/2));var y=Math.max(1,Math.ceil((sketchCanvasSize.y-canvasSize.y)/2));return new $.Point(x,y).minus(this.position.times($.pixelDensityRatio).times(scale||1).apply(function(x){return x%1;}));},unload:function(){if(this.imgElement&&this.imgElement.parentNode){this.imgElement.parentNode.removeChild(this.imgElement);}
if(this.element&&this.element.parentNode){this.element.parentNode.removeChild(this.element);}
this.element=null;this.imgElement=null;this.loaded=false;this.loading=false;}};}(OpenSeadragon));(function($){$.OverlayPlacement=$.Placement;$.OverlayRotationMode=$.freezeObject({NO_ROTATION:1,EXACT:2,BOUNDING_BOX:3});$.Overlay=function(element,location,placement){var options;if($.isPlainObject(element)){options=element;}else{options={element:element,location:location,placement:placement};}
this.element=options.element;this.style=options.element.style;this._init(options);};$.Overlay.prototype={_init:function(options){this.location=options.location;this.placement=options.placement===undefined?$.Placement.TOP_LEFT:options.placement;this.onDraw=options.onDraw;this.checkResize=options.checkResize===undefined?true:options.checkResize;this.width=options.width===undefined?null:options.width;this.height=options.height===undefined?null:options.height;this.rotationMode=options.rotationMode||$.OverlayRotationMode.EXACT;if(this.location instanceof $.Rect){this.width=this.location.width;this.height=this.location.height;this.location=this.location.getTopLeft();this.placement=$.Placement.TOP_LEFT;}
this.scales=this.width!==null&&this.height!==null;this.bounds=new $.Rect(this.location.x,this.location.y,this.width,this.height);this.position=this.location;},adjust:function(position,size){var properties=$.Placement.properties[this.placement];if(!properties){return;}
if(properties.isHorizontallyCentered){position.x-=size.x/2;}else if(properties.isRight){position.x-=size.x;}
if(properties.isVerticallyCentered){position.y-=size.y/2;}else if(properties.isBottom){position.y-=size.y;}},destroy:function(){var element=this.element;var style=this.style;if(element.parentNode){element.parentNode.removeChild(element);if(element.prevElementParent){style.display='none';document.body.appendChild(element);}}
this.onDraw=null;style.top="";style.left="";style.position="";if(this.width!==null){style.width="";}
if(this.height!==null){style.height="";}
var transformOriginProp=$.getCssPropertyWithVendorPrefix('transformOrigin');var transformProp=$.getCssPropertyWithVendorPrefix('transform');if(transformOriginProp&&transformProp){style[transformOriginProp]="";style[transformProp]="";}},drawHTML:function(container,viewport){var element=this.element;if(element.parentNode!==container){element.prevElementParent=element.parentNode;element.prevNextSibling=element.nextSibling;container.appendChild(element);this.size=$.getElementSize(element);}
var positionAndSize=this._getOverlayPositionAndSize(viewport);var position=positionAndSize.position;var size=this.size=positionAndSize.size;var rotate=positionAndSize.rotate;if(this.onDraw){this.onDraw(position,size,this.element);}else{var style=this.style;style.left=position.x+"px";style.top=position.y+"px";if(this.width!==null){style.width=size.x+"px";}
if(this.height!==null){style.height=size.y+"px";}
var transformOriginProp=$.getCssPropertyWithVendorPrefix('transformOrigin');var transformProp=$.getCssPropertyWithVendorPrefix('transform');if(transformOriginProp&&transformProp){if(rotate){style[transformOriginProp]=this._getTransformOrigin();style[transformProp]="rotate("+rotate+"deg)";}else{style[transformOriginProp]="";style[transformProp]="";}}
style.position="absolute";if(style.display!=='none'){style.display='block';}}},_getOverlayPositionAndSize:function(viewport){var position=viewport.pixelFromPoint(this.location,true);var size=this._getSizeInPixels(viewport);this.adjust(position,size);var rotate=0;if(viewport.degrees&&this.rotationMode!==$.OverlayRotationMode.NO_ROTATION){if(this.rotationMode===$.OverlayRotationMode.BOUNDING_BOX&&this.width!==null&&this.height!==null){var rect=new $.Rect(position.x,position.y,size.x,size.y);var boundingBox=this._getBoundingBox(rect,viewport.degrees);position=boundingBox.getTopLeft();size=boundingBox.getSize();}else{rotate=viewport.degrees;}}
return{position:position,size:size,rotate:rotate};},_getSizeInPixels:function(viewport){var width=this.size.x;var height=this.size.y;if(this.width!==null||this.height!==null){var scaledSize=viewport.deltaPixelsFromPointsNoRotate(new $.Point(this.width||0,this.height||0),true);if(this.width!==null){width=scaledSize.x;}
if(this.height!==null){height=scaledSize.y;}}
if(this.checkResize&&(this.width===null||this.height===null)){var eltSize=this.size=$.getElementSize(this.element);if(this.width===null){width=eltSize.x;}
if(this.height===null){height=eltSize.y;}}
return new $.Point(width,height);},_getBoundingBox:function(rect,degrees){var refPoint=this._getPlacementPoint(rect);return rect.rotate(degrees,refPoint).getBoundingBox();},_getPlacementPoint:function(rect){var result=new $.Point(rect.x,rect.y);var properties=$.Placement.properties[this.placement];if(properties){if(properties.isHorizontallyCentered){result.x+=rect.width/2;}else if(properties.isRight){result.x+=rect.width;}
if(properties.isVerticallyCentered){result.y+=rect.height/2;}else if(properties.isBottom){result.y+=rect.height;}}
return result;},_getTransformOrigin:function(){var result="";var properties=$.Placement.properties[this.placement];if(!properties){return result;}
if(properties.isLeft){result="left";}else if(properties.isRight){result="right";}
if(properties.isTop){result+=" top";}else if(properties.isBottom){result+=" bottom";}
return result;},update:function(location,placement){var options=$.isPlainObject(location)?location:{location:location,placement:placement};this._init({location:options.location||this.location,placement:options.placement!==undefined?options.placement:this.placement,onDraw:options.onDraw||this.onDraw,checkResize:options.checkResize||this.checkResize,width:options.width!==undefined?options.width:this.width,height:options.height!==undefined?options.height:this.height,rotationMode:options.rotationMode||this.rotationMode});},getBounds:function(viewport){$.console.assert(viewport,'A viewport must now be passed to Overlay.getBounds.');var width=this.width;var height=this.height;if(width===null||height===null){var size=viewport.deltaPointsFromPixelsNoRotate(this.size,true);if(width===null){width=size.x;}
if(height===null){height=size.y;}}
var location=this.location.clone();this.adjust(location,new $.Point(width,height));return this._adjustBoundsForRotation(viewport,new $.Rect(location.x,location.y,width,height));},_adjustBoundsForRotation:function(viewport,bounds){if(!viewport||viewport.degrees===0||this.rotationMode===$.OverlayRotationMode.EXACT){return bounds;}
if(this.rotationMode===$.OverlayRotationMode.BOUNDING_BOX){if(this.width===null||this.height===null){return bounds;}
var positionAndSize=this._getOverlayPositionAndSize(viewport);return viewport.viewerElementToViewportRectangle(new $.Rect(positionAndSize.position.x,positionAndSize.position.y,positionAndSize.size.x,positionAndSize.size.y));}
return bounds.rotate(-viewport.degrees,this._getPlacementPoint(bounds));}};}(OpenSeadragon));(function($){$.Drawer=function(options){$.console.assert(options.viewer,"[Drawer] options.viewer is required");var args=arguments;if(!$.isPlainObject(options)){options={source:args[0],viewport:args[1],element:args[2]};}
$.console.assert(options.viewport,"[Drawer] options.viewport is required");$.console.assert(options.element,"[Drawer] options.element is required");if(options.source){$.console.error("[Drawer] options.source is no longer accepted; use TiledImage instead");}
this.viewer=options.viewer;this.viewport=options.viewport;this.debugGridColor=options.debugGridColor||$.DEFAULT_SETTINGS.debugGridColor;if(options.opacity){$.console.error("[Drawer] options.opacity is no longer accepted; set the opacity on the TiledImage instead");}
this.useCanvas=$.supportsCanvas&&(this.viewer?this.viewer.useCanvas:true);this.container=$.getElement(options.element);this.canvas=$.makeNeutralElement(this.useCanvas?"canvas":"div");this.context=this.useCanvas?this.canvas.getContext("2d"):null;this.sketchCanvas=null;this.sketchContext=null;this.element=this.container;this.container.dir='ltr';if(this.useCanvas){var viewportSize=this._calculateCanvasSize();this.canvas.width=viewportSize.x;this.canvas.height=viewportSize.y;}
this.canvas.style.width="100%";this.canvas.style.height="100%";this.canvas.style.position="absolute";$.setElementOpacity(this.canvas,this.opacity,true);this.container.style.textAlign="left";this.container.appendChild(this.canvas);};$.Drawer.prototype={addOverlay:function(element,location,placement,onDraw){$.console.error("drawer.addOverlay is deprecated. Use viewer.addOverlay instead.");this.viewer.addOverlay(element,location,placement,onDraw);return this;},updateOverlay:function(element,location,placement){$.console.error("drawer.updateOverlay is deprecated. Use viewer.updateOverlay instead.");this.viewer.updateOverlay(element,location,placement);return this;},removeOverlay:function(element){$.console.error("drawer.removeOverlay is deprecated. Use viewer.removeOverlay instead.");this.viewer.removeOverlay(element);return this;},clearOverlays:function(){$.console.error("drawer.clearOverlays is deprecated. Use viewer.clearOverlays instead.");this.viewer.clearOverlays();return this;},setOpacity:function(opacity){$.console.error("drawer.setOpacity is deprecated. Use tiledImage.setOpacity instead.");var world=this.viewer.world;for(var i=0;i<world.getItemCount();i++){world.getItemAt(i).setOpacity(opacity);}
return this;},getOpacity:function(){$.console.error("drawer.getOpacity is deprecated. Use tiledImage.getOpacity instead.");var world=this.viewer.world;var maxOpacity=0;for(var i=0;i<world.getItemCount();i++){var opacity=world.getItemAt(i).getOpacity();if(opacity>maxOpacity){maxOpacity=opacity;}}
return maxOpacity;},needsUpdate:function(){$.console.error("[Drawer.needsUpdate] this function is deprecated. Use World.needsDraw instead.");return this.viewer.world.needsDraw();},numTilesLoaded:function(){$.console.error("[Drawer.numTilesLoaded] this function is deprecated. Use TileCache.numTilesLoaded instead.");return this.viewer.tileCache.numTilesLoaded();},reset:function(){$.console.error("[Drawer.reset] this function is deprecated. Use World.resetItems instead.");this.viewer.world.resetItems();return this;},update:function(){$.console.error("[Drawer.update] this function is deprecated. Use Drawer.clear and World.draw instead.");this.clear();this.viewer.world.draw();return this;},canRotate:function(){return this.useCanvas;},destroy:function(){this.canvas.width=1;this.canvas.height=1;this.sketchCanvas=null;this.sketchContext=null;},clear:function(){this.canvas.innerHTML="";if(this.useCanvas){var viewportSize=this._calculateCanvasSize();if(this.canvas.width!=viewportSize.x||this.canvas.height!=viewportSize.y){this.canvas.width=viewportSize.x;this.canvas.height=viewportSize.y;if(this.sketchCanvas!==null){var sketchCanvasSize=this._calculateSketchCanvasSize();this.sketchCanvas.width=sketchCanvasSize.x;this.sketchCanvas.height=sketchCanvasSize.y;}}
this._clear();}},_clear:function(useSketch,bounds){if(!this.useCanvas){return;}
var context=this._getContext(useSketch);if(bounds){context.clearRect(bounds.x,bounds.y,bounds.width,bounds.height);}else{var canvas=context.canvas;context.clearRect(0,0,canvas.width,canvas.height);}},viewportToDrawerRectangle:function(rectangle){var topLeft=this.viewport.pixelFromPointNoRotate(rectangle.getTopLeft(),true);var size=this.viewport.deltaPixelsFromPointsNoRotate(rectangle.getSize(),true);return new $.Rect(topLeft.x*$.pixelDensityRatio,topLeft.y*$.pixelDensityRatio,size.x*$.pixelDensityRatio,size.y*$.pixelDensityRatio);},drawTile:function(tile,drawingHandler,useSketch,scale,translate){$.console.assert(tile,'[Drawer.drawTile] tile is required');$.console.assert(drawingHandler,'[Drawer.drawTile] drawingHandler is required');if(this.useCanvas){var context=this._getContext(useSketch);scale=scale||1;tile.drawCanvas(context,drawingHandler,scale,translate);}else{tile.drawHTML(this.canvas);}},_getContext:function(useSketch){var context=this.context;if(useSketch){if(this.sketchCanvas===null){this.sketchCanvas=document.createElement("canvas");var sketchCanvasSize=this._calculateSketchCanvasSize();this.sketchCanvas.width=sketchCanvasSize.x;this.sketchCanvas.height=sketchCanvasSize.y;this.sketchContext=this.sketchCanvas.getContext("2d");if(this.viewport.getRotation()===0){var self=this;this.viewer.addHandler('rotate',function resizeSketchCanvas(){self.viewer.removeHandler('rotate',resizeSketchCanvas);var sketchCanvasSize=self._calculateSketchCanvasSize();self.sketchCanvas.width=sketchCanvasSize.x;self.sketchCanvas.height=sketchCanvasSize.y;});}}
context=this.sketchContext;}
return context;},saveContext:function(useSketch){if(!this.useCanvas){return;}
this._getContext(useSketch).save();},restoreContext:function(useSketch){if(!this.useCanvas){return;}
this._getContext(useSketch).restore();},setClip:function(rect,useSketch){if(!this.useCanvas){return;}
var context=this._getContext(useSketch);context.beginPath();context.rect(rect.x,rect.y,rect.width,rect.height);context.clip();},drawRectangle:function(rect,fillStyle,useSketch){if(!this.useCanvas){return;}
var context=this._getContext(useSketch);context.save();context.fillStyle=fillStyle;context.fillRect(rect.x,rect.y,rect.width,rect.height);context.restore();},blendSketch:function(opacity,scale,translate,compositeOperation){var options=opacity;if(!$.isPlainObject(options)){options={opacity:opacity,scale:scale,translate:translate,compositeOperation:compositeOperation};}
if(!this.useCanvas||!this.sketchCanvas){return;}
opacity=options.opacity;compositeOperation=options.compositeOperation;var bounds=options.bounds;this.context.save();this.context.globalAlpha=opacity;if(compositeOperation){this.context.globalCompositeOperation=compositeOperation;}
if(bounds){this.context.drawImage(this.sketchCanvas,bounds.x,bounds.y,bounds.width,bounds.height,bounds.x,bounds.y,bounds.width,bounds.height);}else{scale=options.scale||1;translate=options.translate;var position=translate instanceof $.Point?translate:new $.Point(0,0);var widthExt=0;var heightExt=0;if(translate){var widthDiff=this.sketchCanvas.width-this.canvas.width;var heightDiff=this.sketchCanvas.height-this.canvas.height;widthExt=Math.round(widthDiff/2);heightExt=Math.round(heightDiff/2);}
this.context.drawImage(this.sketchCanvas,position.x-widthExt*scale,position.y-heightExt*scale,(this.canvas.width+2*widthExt)*scale,(this.canvas.height+2*heightExt)*scale,-widthExt,-heightExt,this.canvas.width+2*widthExt,this.canvas.height+2*heightExt);}
this.context.restore();},drawDebugInfo:function(tile,count,i){if(!this.useCanvas){return;}
var context=this.context;context.save();context.lineWidth=2*$.pixelDensityRatio;context.font='small-caps bold '+(13*$.pixelDensityRatio)+'px arial';context.strokeStyle=this.debugGridColor;context.fillStyle=this.debugGridColor;if(this.viewport.degrees!==0){this._offsetForRotation(this.viewport.degrees);}
context.strokeRect(tile.position.x*$.pixelDensityRatio,tile.position.y*$.pixelDensityRatio,tile.size.x*$.pixelDensityRatio,tile.size.y*$.pixelDensityRatio);var tileCenterX=(tile.position.x+(tile.size.x/2))*$.pixelDensityRatio;var tileCenterY=(tile.position.y+(tile.size.y/2))*$.pixelDensityRatio;context.translate(tileCenterX,tileCenterY);context.rotate(Math.PI/180*-this.viewport.degrees);context.translate(-tileCenterX,-tileCenterY);if(tile.x===0&&tile.y===0){context.fillText("Zoom: "+this.viewport.getZoom(),tile.position.x*$.pixelDensityRatio,(tile.position.y-30)*$.pixelDensityRatio);context.fillText("Pan: "+this.viewport.getBounds().toString(),tile.position.x*$.pixelDensityRatio,(tile.position.y-20)*$.pixelDensityRatio);}
context.fillText("Level: "+tile.level,(tile.position.x+10)*$.pixelDensityRatio,(tile.position.y+20)*$.pixelDensityRatio);context.fillText("Column: "+tile.x,(tile.position.x+10)*$.pixelDensityRatio,(tile.position.y+30)*$.pixelDensityRatio);context.fillText("Row: "+tile.y,(tile.position.x+10)*$.pixelDensityRatio,(tile.position.y+40)*$.pixelDensityRatio);context.fillText("Order: "+i+" of "+count,(tile.position.x+10)*$.pixelDensityRatio,(tile.position.y+50)*$.pixelDensityRatio);context.fillText("Size: "+tile.size.toString(),(tile.position.x+10)*$.pixelDensityRatio,(tile.position.y+60)*$.pixelDensityRatio);context.fillText("Position: "+tile.position.toString(),(tile.position.x+10)*$.pixelDensityRatio,(tile.position.y+70)*$.pixelDensityRatio);if(this.viewport.degrees!==0){this._restoreRotationChanges();}
context.restore();},debugRect:function(rect){if(this.useCanvas){var context=this.context;context.save();context.lineWidth=2*$.pixelDensityRatio;context.strokeStyle=this.debugGridColor;context.fillStyle=this.debugGridColor;context.strokeRect(rect.x*$.pixelDensityRatio,rect.y*$.pixelDensityRatio,rect.width*$.pixelDensityRatio,rect.height*$.pixelDensityRatio);context.restore();}},getCanvasSize:function(sketch){var canvas=this._getContext(sketch).canvas;return new $.Point(canvas.width,canvas.height);},_offsetForRotation:function(degrees,useSketch){var cx=this.canvas.width/2;var cy=this.canvas.height/2;var context=this._getContext(useSketch);context.save();context.translate(cx,cy);context.rotate(Math.PI/180*degrees);context.translate(-cx,-cy);},_restoreRotationChanges:function(useSketch){var context=this._getContext(useSketch);context.restore();},_calculateCanvasSize:function(){var pixelDensityRatio=$.pixelDensityRatio;var viewportSize=this.viewport.getContainerSize();return{x:viewportSize.x*pixelDensityRatio,y:viewportSize.y*pixelDensityRatio};},_calculateSketchCanvasSize:function(){var canvasSize=this._calculateCanvasSize();if(this.viewport.getRotation()===0){return canvasSize;}
var sketchCanvasSize=Math.ceil(Math.sqrt(canvasSize.x*canvasSize.x+
canvasSize.y*canvasSize.y));return{x:sketchCanvasSize,y:sketchCanvasSize};}};}(OpenSeadragon));(function($){$.Viewport=function(options){var args=arguments;if(args.length&&args[0]instanceof $.Point){options={containerSize:args[0],contentSize:args[1],config:args[2]};}
if(options.config){$.extend(true,options,options.config);delete options.config;}
this._margins=$.extend({left:0,top:0,right:0,bottom:0},options.margins||{});delete options.margins;$.extend(true,this,{containerSize:null,contentSize:null,zoomPoint:null,viewer:null,springStiffness:$.DEFAULT_SETTINGS.springStiffness,animationTime:$.DEFAULT_SETTINGS.animationTime,minZoomImageRatio:$.DEFAULT_SETTINGS.minZoomImageRatio,maxZoomPixelRatio:$.DEFAULT_SETTINGS.maxZoomPixelRatio,visibilityRatio:$.DEFAULT_SETTINGS.visibilityRatio,wrapHorizontal:$.DEFAULT_SETTINGS.wrapHorizontal,wrapVertical:$.DEFAULT_SETTINGS.wrapVertical,defaultZoomLevel:$.DEFAULT_SETTINGS.defaultZoomLevel,minZoomLevel:$.DEFAULT_SETTINGS.minZoomLevel,maxZoomLevel:$.DEFAULT_SETTINGS.maxZoomLevel,degrees:$.DEFAULT_SETTINGS.degrees,homeFillsViewer:$.DEFAULT_SETTINGS.homeFillsViewer},options);this._updateContainerInnerSize();this.centerSpringX=new $.Spring({initial:0,springStiffness:this.springStiffness,animationTime:this.animationTime});this.centerSpringY=new $.Spring({initial:0,springStiffness:this.springStiffness,animationTime:this.animationTime});this.zoomSpring=new $.Spring({exponential:true,initial:1,springStiffness:this.springStiffness,animationTime:this.animationTime});this._oldCenterX=this.centerSpringX.current.value;this._oldCenterY=this.centerSpringY.current.value;this._oldZoom=this.zoomSpring.current.value;this._setContentBounds(new $.Rect(0,0,1,1),1);this.goHome(true);this.update();};$.Viewport.prototype={resetContentSize:function(contentSize){$.console.assert(contentSize,"[Viewport.resetContentSize] contentSize is required");$.console.assert(contentSize instanceof $.Point,"[Viewport.resetContentSize] contentSize must be an OpenSeadragon.Point");$.console.assert(contentSize.x>0,"[Viewport.resetContentSize] contentSize.x must be greater than 0");$.console.assert(contentSize.y>0,"[Viewport.resetContentSize] contentSize.y must be greater than 0");this._setContentBounds(new $.Rect(0,0,1,contentSize.y/contentSize.x),contentSize.x);return this;},setHomeBounds:function(bounds,contentFactor){$.console.error("[Viewport.setHomeBounds] this function is deprecated; The content bounds should not be set manually.");this._setContentBounds(bounds,contentFactor);},_setContentBounds:function(bounds,contentFactor){$.console.assert(bounds,"[Viewport._setContentBounds] bounds is required");$.console.assert(bounds instanceof $.Rect,"[Viewport._setContentBounds] bounds must be an OpenSeadragon.Rect");$.console.assert(bounds.width>0,"[Viewport._setContentBounds] bounds.width must be greater than 0");$.console.assert(bounds.height>0,"[Viewport._setContentBounds] bounds.height must be greater than 0");this._contentBoundsNoRotate=bounds.clone();this._contentSizeNoRotate=this._contentBoundsNoRotate.getSize().times(contentFactor);this._contentBounds=bounds.rotate(this.degrees).getBoundingBox();this._contentSize=this._contentBounds.getSize().times(contentFactor);this._contentAspectRatio=this._contentSize.x/this._contentSize.y;if(this.viewer){this.viewer.raiseEvent('reset-size',{contentSize:this._contentSizeNoRotate.clone(),contentFactor:contentFactor,homeBounds:this._contentBoundsNoRotate.clone(),contentBounds:this._contentBounds.clone()});}},getHomeZoom:function(){if(this.defaultZoomLevel){return this.defaultZoomLevel;}
var aspectFactor=this._contentAspectRatio/this.getAspectRatio();var output;if(this.homeFillsViewer){output=aspectFactor>=1?aspectFactor:1;}else{output=aspectFactor>=1?1:aspectFactor;}
return output/this._contentBounds.width;},getHomeBounds:function(){return this.getHomeBoundsNoRotate().rotate(-this.getRotation());},getHomeBoundsNoRotate:function(){var center=this._contentBounds.getCenter();var width=1.0/this.getHomeZoom();var height=width/this.getAspectRatio();return new $.Rect(center.x-(width/2.0),center.y-(height/2.0),width,height);},goHome:function(immediately){if(this.viewer){this.viewer.raiseEvent('home',{immediately:immediately});}
return this.fitBounds(this.getHomeBounds(),immediately);},getMinZoom:function(){var homeZoom=this.getHomeZoom(),zoom=this.minZoomLevel?this.minZoomLevel:this.minZoomImageRatio*homeZoom;return zoom;},getMaxZoom:function(){var zoom=this.maxZoomLevel;if(!zoom){zoom=this._contentSize.x*this.maxZoomPixelRatio/this._containerInnerSize.x;zoom/=this._contentBounds.width;}
return Math.max(zoom,this.getHomeZoom());},getAspectRatio:function(){return this._containerInnerSize.x/this._containerInnerSize.y;},getContainerSize:function(){return new $.Point(this.containerSize.x,this.containerSize.y);},getMargins:function(){return $.extend({},this._margins);},setMargins:function(margins){$.console.assert($.type(margins)==='object','[Viewport.setMargins] margins must be an object');this._margins=$.extend({left:0,top:0,right:0,bottom:0},margins);this._updateContainerInnerSize();if(this.viewer){this.viewer.forceRedraw();}},getBounds:function(current){return this.getBoundsNoRotate(current).rotate(-this.getRotation());},getBoundsNoRotate:function(current){var center=this.getCenter(current);var width=1.0/this.getZoom(current);var height=width/this.getAspectRatio();return new $.Rect(center.x-(width/2.0),center.y-(height/2.0),width,height);},getBoundsWithMargins:function(current){return this.getBoundsNoRotateWithMargins(current).rotate(-this.getRotation(),this.getCenter(current));},getBoundsNoRotateWithMargins:function(current){var bounds=this.getBoundsNoRotate(current);var factor=this._containerInnerSize.x*this.getZoom(current);bounds.x-=this._margins.left/factor;bounds.y-=this._margins.top/factor;bounds.width+=(this._margins.left+this._margins.right)/factor;bounds.height+=(this._margins.top+this._margins.bottom)/factor;return bounds;},getCenter:function(current){var centerCurrent=new $.Point(this.centerSpringX.current.value,this.centerSpringY.current.value),centerTarget=new $.Point(this.centerSpringX.target.value,this.centerSpringY.target.value),oldZoomPixel,zoom,width,height,bounds,newZoomPixel,deltaZoomPixels,deltaZoomPoints;if(current){return centerCurrent;}else if(!this.zoomPoint){return centerTarget;}
oldZoomPixel=this.pixelFromPoint(this.zoomPoint,true);zoom=this.getZoom();width=1.0/zoom;height=width/this.getAspectRatio();bounds=new $.Rect(centerCurrent.x-width/2.0,centerCurrent.y-height/2.0,width,height);newZoomPixel=this._pixelFromPoint(this.zoomPoint,bounds);deltaZoomPixels=newZoomPixel.minus(oldZoomPixel);deltaZoomPoints=deltaZoomPixels.divide(this._containerInnerSize.x*zoom);return centerTarget.plus(deltaZoomPoints);},getZoom:function(current){if(current){return this.zoomSpring.current.value;}else{return this.zoomSpring.target.value;}},_applyZoomConstraints:function(zoom){return Math.max(Math.min(zoom,this.getMaxZoom()),this.getMinZoom());},_applyBoundaryConstraints:function(bounds,immediately){var newBounds=new $.Rect(bounds.x,bounds.y,bounds.width,bounds.height);if(this.wrapHorizontal){}else{var horizontalThreshold=this.visibilityRatio*newBounds.width;var boundsRight=newBounds.x+newBounds.width;var contentRight=this._contentBoundsNoRotate.x+this._contentBoundsNoRotate.width;var leftDx=this._contentBoundsNoRotate.x-boundsRight+horizontalThreshold;var rightDx=contentRight-newBounds.x-horizontalThreshold;if(horizontalThreshold>this._contentBoundsNoRotate.width){newBounds.x+=(leftDx+rightDx)/2;}else if(rightDx<0){newBounds.x+=rightDx;}else if(leftDx>0){newBounds.x+=leftDx;}}
if(this.wrapVertical){}else{var verticalThreshold=this.visibilityRatio*newBounds.height;var boundsBottom=newBounds.y+newBounds.height;var contentBottom=this._contentBoundsNoRotate.y+this._contentBoundsNoRotate.height;var topDy=this._contentBoundsNoRotate.y-boundsBottom+verticalThreshold;var bottomDy=contentBottom-newBounds.y-verticalThreshold;if(verticalThreshold>this._contentBoundsNoRotate.height){newBounds.y+=(topDy+bottomDy)/2;}else if(bottomDy<0){newBounds.y+=bottomDy;}else if(topDy>0){newBounds.y+=topDy;}}
if(this.viewer){this.viewer.raiseEvent('constrain',{immediately:immediately});}
return newBounds;},applyConstraints:function(immediately){var actualZoom=this.getZoom();var constrainedZoom=this._applyZoomConstraints(actualZoom);if(actualZoom!==constrainedZoom){this.zoomTo(constrainedZoom,this.zoomPoint,immediately);}
var bounds=this.getBoundsNoRotate();var constrainedBounds=this._applyBoundaryConstraints(bounds,immediately);if(bounds.x!==constrainedBounds.x||bounds.y!==constrainedBounds.y||immediately){this.fitBounds(constrainedBounds.rotate(-this.getRotation()),immediately);}
return this;},ensureVisible:function(immediately){return this.applyConstraints(immediately);},_fitBounds:function(bounds,options){options=options||{};var immediately=options.immediately||false;var constraints=options.constraints||false;var aspect=this.getAspectRatio();var center=bounds.getCenter();var newBounds=new $.Rect(bounds.x,bounds.y,bounds.width,bounds.height,bounds.degrees+this.getRotation()).getBoundingBox();if(newBounds.getAspectRatio()>=aspect){newBounds.height=newBounds.width/aspect;}else{newBounds.width=newBounds.height*aspect;}
newBounds.x=center.x-newBounds.width/2;newBounds.y=center.y-newBounds.height/2;var newZoom=1.0/newBounds.width;if(constraints){var newBoundsAspectRatio=newBounds.getAspectRatio();var newConstrainedZoom=this._applyZoomConstraints(newZoom);if(newZoom!==newConstrainedZoom){newZoom=newConstrainedZoom;newBounds.width=1.0/newZoom;newBounds.x=center.x-newBounds.width/2;newBounds.height=newBounds.width/newBoundsAspectRatio;newBounds.y=center.y-newBounds.height/2;}
newBounds=this._applyBoundaryConstraints(newBounds,immediately);center=newBounds.getCenter();}
if(immediately){this.panTo(center,true);return this.zoomTo(newZoom,null,true);}
this.panTo(this.getCenter(true),true);this.zoomTo(this.getZoom(true),null,true);var oldBounds=this.getBounds();var oldZoom=this.getZoom();if(oldZoom===0||Math.abs(newZoom/oldZoom-1)<0.00000001){this.zoomTo(newZoom,true);return this.panTo(center,immediately);}
newBounds=newBounds.rotate(-this.getRotation());var referencePoint=newBounds.getTopLeft().times(newZoom).minus(oldBounds.getTopLeft().times(oldZoom)).divide(newZoom-oldZoom);return this.zoomTo(newZoom,referencePoint,immediately);},fitBounds:function(bounds,immediately){return this._fitBounds(bounds,{immediately:immediately,constraints:false});},fitBoundsWithConstraints:function(bounds,immediately){return this._fitBounds(bounds,{immediately:immediately,constraints:true});},fitVertically:function(immediately){var box=new $.Rect(this._contentBounds.x+(this._contentBounds.width/2),this._contentBounds.y,0,this._contentBounds.height);return this.fitBounds(box,immediately);},fitHorizontally:function(immediately){var box=new $.Rect(this._contentBounds.x,this._contentBounds.y+(this._contentBounds.height/2),this._contentBounds.width,0);return this.fitBounds(box,immediately);},panBy:function(delta,immediately){var center=new $.Point(this.centerSpringX.target.value,this.centerSpringY.target.value);return this.panTo(center.plus(delta),immediately);},panTo:function(center,immediately){if(immediately){this.centerSpringX.resetTo(center.x);this.centerSpringY.resetTo(center.y);}else{this.centerSpringX.springTo(center.x);this.centerSpringY.springTo(center.y);}
if(this.viewer){this.viewer.raiseEvent('pan',{center:center,immediately:immediately});}
return this;},zoomBy:function(factor,refPoint,immediately){return this.zoomTo(this.zoomSpring.target.value*factor,refPoint,immediately);},zoomTo:function(zoom,refPoint,immediately){this.zoomPoint=refPoint instanceof $.Point&&!isNaN(refPoint.x)&&!isNaN(refPoint.y)?refPoint:null;if(immediately){this.zoomSpring.resetTo(zoom);}else{this.zoomSpring.springTo(zoom);}
if(this.viewer){this.viewer.raiseEvent('zoom',{zoom:zoom,refPoint:refPoint,immediately:immediately});}
return this;},setRotation:function(degrees){if(!this.viewer||!this.viewer.drawer.canRotate()){return this;}
degrees=degrees%360;if(degrees<0){degrees+=360;}
this.degrees=degrees;this._setContentBounds(this.viewer.world.getHomeBounds(),this.viewer.world.getContentFactor());this.viewer.forceRedraw();this.viewer.raiseEvent('rotate',{"degrees":degrees});return this;},getRotation:function(){return this.degrees;},resize:function(newContainerSize,maintain){var oldBounds=this.getBoundsNoRotate(),newBounds=oldBounds,widthDeltaFactor;this.containerSize.x=newContainerSize.x;this.containerSize.y=newContainerSize.y;this._updateContainerInnerSize();if(maintain){widthDeltaFactor=newContainerSize.x/this.containerSize.x;newBounds.width=oldBounds.width*widthDeltaFactor;newBounds.height=newBounds.width/this.getAspectRatio();}
if(this.viewer){this.viewer.raiseEvent('resize',{newContainerSize:newContainerSize,maintain:maintain});}
return this.fitBounds(newBounds,true);},_updateContainerInnerSize:function(){this._containerInnerSize=new $.Point(Math.max(1,this.containerSize.x-(this._margins.left+this._margins.right)),Math.max(1,this.containerSize.y-(this._margins.top+this._margins.bottom)));},update:function(){if(this.zoomPoint){var oldZoomPixel=this.pixelFromPoint(this.zoomPoint,true);this.zoomSpring.update();var newZoomPixel=this.pixelFromPoint(this.zoomPoint,true);var deltaZoomPixels=newZoomPixel.minus(oldZoomPixel);var deltaZoomPoints=this.deltaPointsFromPixels(deltaZoomPixels,true);this.centerSpringX.shiftBy(deltaZoomPoints.x);this.centerSpringY.shiftBy(deltaZoomPoints.y);if(this.zoomSpring.isAtTargetValue()){this.zoomPoint=null;}}else{this.zoomSpring.update();}
this.centerSpringX.update();this.centerSpringY.update();var changed=this.centerSpringX.current.value!==this._oldCenterX||this.centerSpringY.current.value!==this._oldCenterY||this.zoomSpring.current.value!==this._oldZoom;this._oldCenterX=this.centerSpringX.current.value;this._oldCenterY=this.centerSpringY.current.value;this._oldZoom=this.zoomSpring.current.value;return changed;},deltaPixelsFromPointsNoRotate:function(deltaPoints,current){return deltaPoints.times(this._containerInnerSize.x*this.getZoom(current));},deltaPixelsFromPoints:function(deltaPoints,current){return this.deltaPixelsFromPointsNoRotate(deltaPoints.rotate(this.getRotation()),current);},deltaPointsFromPixelsNoRotate:function(deltaPixels,current){return deltaPixels.divide(this._containerInnerSize.x*this.getZoom(current));},deltaPointsFromPixels:function(deltaPixels,current){return this.deltaPointsFromPixelsNoRotate(deltaPixels,current).rotate(-this.getRotation());},pixelFromPointNoRotate:function(point,current){return this._pixelFromPointNoRotate(point,this.getBoundsNoRotate(current));},pixelFromPoint:function(point,current){return this._pixelFromPoint(point,this.getBoundsNoRotate(current));},_pixelFromPointNoRotate:function(point,bounds){return point.minus(bounds.getTopLeft()).times(this._containerInnerSize.x/bounds.width).plus(new $.Point(this._margins.left,this._margins.top));},_pixelFromPoint:function(point,bounds){return this._pixelFromPointNoRotate(point.rotate(this.getRotation(),this.getCenter(true)),bounds);},pointFromPixelNoRotate:function(pixel,current){var bounds=this.getBoundsNoRotate(current);return pixel.minus(new $.Point(this._margins.left,this._margins.top)).divide(this._containerInnerSize.x/bounds.width).plus(bounds.getTopLeft());},pointFromPixel:function(pixel,current){return this.pointFromPixelNoRotate(pixel,current).rotate(-this.getRotation(),this.getCenter(true));},_viewportToImageDelta:function(viewerX,viewerY){var scale=this._contentBoundsNoRotate.width;return new $.Point(viewerX*this._contentSizeNoRotate.x/scale,viewerY*this._contentSizeNoRotate.x/scale);},viewportToImageCoordinates:function(viewerX,viewerY){if(viewerX instanceof $.Point){return this.viewportToImageCoordinates(viewerX.x,viewerX.y);}
if(this.viewer){var count=this.viewer.world.getItemCount();if(count>1){$.console.error('[Viewport.viewportToImageCoordinates] is not accurate '+
'with multi-image; use TiledImage.viewportToImageCoordinates instead.');}else if(count===1){var item=this.viewer.world.getItemAt(0);return item.viewportToImageCoordinates(viewerX,viewerY,true);}}
return this._viewportToImageDelta(viewerX-this._contentBoundsNoRotate.x,viewerY-this._contentBoundsNoRotate.y);},_imageToViewportDelta:function(imageX,imageY){var scale=this._contentBoundsNoRotate.width;return new $.Point(imageX/this._contentSizeNoRotate.x*scale,imageY/this._contentSizeNoRotate.x*scale);},imageToViewportCoordinates:function(imageX,imageY){if(imageX instanceof $.Point){return this.imageToViewportCoordinates(imageX.x,imageX.y);}
if(this.viewer){var count=this.viewer.world.getItemCount();if(count>1){$.console.error('[Viewport.imageToViewportCoordinates] is not accurate '+
'with multi-image; use TiledImage.imageToViewportCoordinates instead.');}else if(count===1){var item=this.viewer.world.getItemAt(0);return item.imageToViewportCoordinates(imageX,imageY,true);}}
var point=this._imageToViewportDelta(imageX,imageY);point.x+=this._contentBoundsNoRotate.x;point.y+=this._contentBoundsNoRotate.y;return point;},imageToViewportRectangle:function(imageX,imageY,pixelWidth,pixelHeight){var rect=imageX;if(!(rect instanceof $.Rect)){rect=new $.Rect(imageX,imageY,pixelWidth,pixelHeight);}
if(this.viewer){var count=this.viewer.world.getItemCount();if(count>1){$.console.error('[Viewport.imageToViewportRectangle] is not accurate '+
'with multi-image; use TiledImage.imageToViewportRectangle instead.');}else if(count===1){var item=this.viewer.world.getItemAt(0);return item.imageToViewportRectangle(imageX,imageY,pixelWidth,pixelHeight,true);}}
var coordA=this.imageToViewportCoordinates(rect.x,rect.y);var coordB=this._imageToViewportDelta(rect.width,rect.height);return new $.Rect(coordA.x,coordA.y,coordB.x,coordB.y,rect.degrees);},viewportToImageRectangle:function(viewerX,viewerY,pointWidth,pointHeight){var rect=viewerX;if(!(rect instanceof $.Rect)){rect=new $.Rect(viewerX,viewerY,pointWidth,pointHeight);}
if(this.viewer){var count=this.viewer.world.getItemCount();if(count>1){$.console.error('[Viewport.viewportToImageRectangle] is not accurate '+
'with multi-image; use TiledImage.viewportToImageRectangle instead.');}else if(count===1){var item=this.viewer.world.getItemAt(0);return item.viewportToImageRectangle(viewerX,viewerY,pointWidth,pointHeight,true);}}
var coordA=this.viewportToImageCoordinates(rect.x,rect.y);var coordB=this._viewportToImageDelta(rect.width,rect.height);return new $.Rect(coordA.x,coordA.y,coordB.x,coordB.y,rect.degrees);},viewerElementToImageCoordinates:function(pixel){var point=this.pointFromPixel(pixel,true);return this.viewportToImageCoordinates(point);},imageToViewerElementCoordinates:function(pixel){var point=this.imageToViewportCoordinates(pixel);return this.pixelFromPoint(point,true);},windowToImageCoordinates:function(pixel){$.console.assert(this.viewer,"[Viewport.windowToImageCoordinates] the viewport must have a viewer.");var viewerCoordinates=pixel.minus($.getElementPosition(this.viewer.element));return this.viewerElementToImageCoordinates(viewerCoordinates);},imageToWindowCoordinates:function(pixel){$.console.assert(this.viewer,"[Viewport.imageToWindowCoordinates] the viewport must have a viewer.");var viewerCoordinates=this.imageToViewerElementCoordinates(pixel);return viewerCoordinates.plus($.getElementPosition(this.viewer.element));},viewerElementToViewportCoordinates:function(pixel){return this.pointFromPixel(pixel,true);},viewportToViewerElementCoordinates:function(point){return this.pixelFromPoint(point,true);},viewerElementToViewportRectangle:function(rectangle){return $.Rect.fromSummits(this.pointFromPixel(rectangle.getTopLeft(),true),this.pointFromPixel(rectangle.getTopRight(),true),this.pointFromPixel(rectangle.getBottomLeft(),true));},viewportToViewerElementRectangle:function(rectangle){return $.Rect.fromSummits(this.pixelFromPoint(rectangle.getTopLeft(),true),this.pixelFromPoint(rectangle.getTopRight(),true),this.pixelFromPoint(rectangle.getBottomLeft(),true));},windowToViewportCoordinates:function(pixel){$.console.assert(this.viewer,"[Viewport.windowToViewportCoordinates] the viewport must have a viewer.");var viewerCoordinates=pixel.minus($.getElementPosition(this.viewer.element));return this.viewerElementToViewportCoordinates(viewerCoordinates);},viewportToWindowCoordinates:function(point){$.console.assert(this.viewer,"[Viewport.viewportToWindowCoordinates] the viewport must have a viewer.");var viewerCoordinates=this.viewportToViewerElementCoordinates(point);return viewerCoordinates.plus($.getElementPosition(this.viewer.element));},viewportToImageZoom:function(viewportZoom){if(this.viewer){var count=this.viewer.world.getItemCount();if(count>1){$.console.error('[Viewport.viewportToImageZoom] is not '+
'accurate with multi-image.');}else if(count===1){var item=this.viewer.world.getItemAt(0);return item.viewportToImageZoom(viewportZoom);}}
var imageWidth=this._contentSizeNoRotate.x;var containerWidth=this._containerInnerSize.x;var scale=this._contentBoundsNoRotate.width;var viewportToImageZoomRatio=(containerWidth/imageWidth)*scale;return viewportZoom*viewportToImageZoomRatio;},imageToViewportZoom:function(imageZoom){if(this.viewer){var count=this.viewer.world.getItemCount();if(count>1){$.console.error('[Viewport.imageToViewportZoom] is not accurate '+
'with multi-image.');}else if(count===1){var item=this.viewer.world.getItemAt(0);return item.imageToViewportZoom(imageZoom);}}
var imageWidth=this._contentSizeNoRotate.x;var containerWidth=this._containerInnerSize.x;var scale=this._contentBoundsNoRotate.width;var viewportToImageZoomRatio=(imageWidth/containerWidth)/scale;return imageZoom*viewportToImageZoomRatio;}};}(OpenSeadragon));(function($){$.TiledImage=function(options){var _this=this;$.console.assert(options.tileCache,"[TiledImage] options.tileCache is required");$.console.assert(options.drawer,"[TiledImage] options.drawer is required");$.console.assert(options.viewer,"[TiledImage] options.viewer is required");$.console.assert(options.imageLoader,"[TiledImage] options.imageLoader is required");$.console.assert(options.source,"[TiledImage] options.source is required");$.console.assert(!options.clip||options.clip instanceof $.Rect,"[TiledImage] options.clip must be an OpenSeadragon.Rect if present");$.EventSource.call(this);this._tileCache=options.tileCache;delete options.tileCache;this._drawer=options.drawer;delete options.drawer;this._imageLoader=options.imageLoader;delete options.imageLoader;if(options.clip instanceof $.Rect){this._clip=options.clip.clone();}
delete options.clip;var x=options.x||0;delete options.x;var y=options.y||0;delete options.y;this.normHeight=options.source.dimensions.y/options.source.dimensions.x;this.contentAspectX=options.source.dimensions.x/options.source.dimensions.y;var scale=1;if(options.width){scale=options.width;delete options.width;if(options.height){$.console.error("specifying both width and height to a tiledImage is not supported");delete options.height;}}else if(options.height){scale=options.height/this.normHeight;delete options.height;}
var fitBounds=options.fitBounds;delete options.fitBounds;var fitBoundsPlacement=options.fitBoundsPlacement||OpenSeadragon.Placement.CENTER;delete options.fitBoundsPlacement;$.extend(true,this,{viewer:null,tilesMatrix:{},coverage:{},lastDrawn:[],lastResetTime:0,_midDraw:false,_needsDraw:true,_hasOpaqueTile:false,springStiffness:$.DEFAULT_SETTINGS.springStiffness,animationTime:$.DEFAULT_SETTINGS.animationTime,minZoomImageRatio:$.DEFAULT_SETTINGS.minZoomImageRatio,wrapHorizontal:$.DEFAULT_SETTINGS.wrapHorizontal,wrapVertical:$.DEFAULT_SETTINGS.wrapVertical,immediateRender:$.DEFAULT_SETTINGS.immediateRender,blendTime:$.DEFAULT_SETTINGS.blendTime,alwaysBlend:$.DEFAULT_SETTINGS.alwaysBlend,minPixelRatio:$.DEFAULT_SETTINGS.minPixelRatio,smoothTileEdgesMinZoom:$.DEFAULT_SETTINGS.smoothTileEdgesMinZoom,iOSDevice:$.DEFAULT_SETTINGS.iOSDevice,debugMode:$.DEFAULT_SETTINGS.debugMode,crossOriginPolicy:$.DEFAULT_SETTINGS.crossOriginPolicy,placeholderFillStyle:$.DEFAULT_SETTINGS.placeholderFillStyle,opacity:$.DEFAULT_SETTINGS.opacity,compositeOperation:$.DEFAULT_SETTINGS.compositeOperation},options);this._xSpring=new $.Spring({initial:x,springStiffness:this.springStiffness,animationTime:this.animationTime});this._ySpring=new $.Spring({initial:y,springStiffness:this.springStiffness,animationTime:this.animationTime});this._scaleSpring=new $.Spring({initial:scale,springStiffness:this.springStiffness,animationTime:this.animationTime});this._updateForScale();if(fitBounds){this.fitBounds(fitBounds,fitBoundsPlacement,true);}
this._drawingHandler=function(args){_this.viewer.raiseEvent('tile-drawing',$.extend({tiledImage:_this},args));};};$.extend($.TiledImage.prototype,$.EventSource.prototype,{needsDraw:function(){return this._needsDraw;},reset:function(){this._tileCache.clearTilesFor(this);this.lastResetTime=$.now();this._needsDraw=true;},update:function(){var oldX=this._xSpring.current.value;var oldY=this._ySpring.current.value;var oldScale=this._scaleSpring.current.value;this._xSpring.update();this._ySpring.update();this._scaleSpring.update();if(this._xSpring.current.value!==oldX||this._ySpring.current.value!==oldY||this._scaleSpring.current.value!==oldScale){this._updateForScale();this._needsDraw=true;return true;}
return false;},draw:function(){if(this.opacity!==0){this._midDraw=true;updateViewport(this);this._midDraw=false;}},destroy:function(){this.reset();},getBounds:function(current){if(current){return new $.Rect(this._xSpring.current.value,this._ySpring.current.value,this._worldWidthCurrent,this._worldHeightCurrent);}
return new $.Rect(this._xSpring.target.value,this._ySpring.target.value,this._worldWidthTarget,this._worldHeightTarget);},getWorldBounds:function(){$.console.error('[TiledImage.getWorldBounds] is deprecated; use TiledImage.getBounds instead');return this.getBounds();},getClippedBounds:function(current){var bounds=this.getBounds(current);if(this._clip){var ratio=this._worldWidthCurrent/this.source.dimensions.x;var clip=this._clip.times(ratio);bounds=new $.Rect(bounds.x+clip.x,bounds.y+clip.y,clip.width,clip.height);}
return bounds;},getContentSize:function(){return new $.Point(this.source.dimensions.x,this.source.dimensions.y);},_viewportToImageDelta:function(viewerX,viewerY,current){var scale=(current?this._scaleSpring.current.value:this._scaleSpring.target.value);return new $.Point(viewerX*(this.source.dimensions.x/scale),viewerY*((this.source.dimensions.y*this.contentAspectX)/scale));},viewportToImageCoordinates:function(viewerX,viewerY,current){if(viewerX instanceof $.Point){current=viewerY;viewerY=viewerX.y;viewerX=viewerX.x;}
if(current){return this._viewportToImageDelta(viewerX-this._xSpring.current.value,viewerY-this._ySpring.current.value);}
return this._viewportToImageDelta(viewerX-this._xSpring.target.value,viewerY-this._ySpring.target.value);},_imageToViewportDelta:function(imageX,imageY,current){var scale=(current?this._scaleSpring.current.value:this._scaleSpring.target.value);return new $.Point((imageX/this.source.dimensions.x)*scale,(imageY/this.source.dimensions.y/this.contentAspectX)*scale);},imageToViewportCoordinates:function(imageX,imageY,current){if(imageX instanceof $.Point){current=imageY;imageY=imageX.y;imageX=imageX.x;}
var point=this._imageToViewportDelta(imageX,imageY);if(current){point.x+=this._xSpring.current.value;point.y+=this._ySpring.current.value;}else{point.x+=this._xSpring.target.value;point.y+=this._ySpring.target.value;}
return point;},imageToViewportRectangle:function(imageX,imageY,pixelWidth,pixelHeight,current){var rect=imageX;if(rect instanceof $.Rect){current=imageY;}else{rect=new $.Rect(imageX,imageY,pixelWidth,pixelHeight);}
var coordA=this.imageToViewportCoordinates(rect.getTopLeft(),current);var coordB=this._imageToViewportDelta(rect.width,rect.height,current);return new $.Rect(coordA.x,coordA.y,coordB.x,coordB.y,rect.degrees);},viewportToImageRectangle:function(viewerX,viewerY,pointWidth,pointHeight,current){var rect=viewerX;if(viewerX instanceof $.Rect){current=viewerY;}else{rect=new $.Rect(viewerX,viewerY,pointWidth,pointHeight);}
var coordA=this.viewportToImageCoordinates(rect.getTopLeft(),current);var coordB=this._viewportToImageDelta(rect.width,rect.height,current);return new $.Rect(coordA.x,coordA.y,coordB.x,coordB.y,rect.degrees);},viewerElementToImageCoordinates:function(pixel){var point=this.viewport.pointFromPixel(pixel,true);return this.viewportToImageCoordinates(point);},imageToViewerElementCoordinates:function(pixel){var point=this.imageToViewportCoordinates(pixel);return this.viewport.pixelFromPoint(point,true);},windowToImageCoordinates:function(pixel){var viewerCoordinates=pixel.minus(OpenSeadragon.getElementPosition(this.viewer.element));return this.viewerElementToImageCoordinates(viewerCoordinates);},imageToWindowCoordinates:function(pixel){var viewerCoordinates=this.imageToViewerElementCoordinates(pixel);return viewerCoordinates.plus(OpenSeadragon.getElementPosition(this.viewer.element));},viewportToImageZoom:function(viewportZoom){var ratio=this._scaleSpring.current.value*this.viewport._containerInnerSize.x/this.source.dimensions.x;return ratio*viewportZoom;},imageToViewportZoom:function(imageZoom){var ratio=this._scaleSpring.current.value*this.viewport._containerInnerSize.x/this.source.dimensions.x;return imageZoom/ratio;},setPosition:function(position,immediately){var sameTarget=(this._xSpring.target.value===position.x&&this._ySpring.target.value===position.y);if(immediately){if(sameTarget&&this._xSpring.current.value===position.x&&this._ySpring.current.value===position.y){return;}
this._xSpring.resetTo(position.x);this._ySpring.resetTo(position.y);this._needsDraw=true;}else{if(sameTarget){return;}
this._xSpring.springTo(position.x);this._ySpring.springTo(position.y);this._needsDraw=true;}
if(!sameTarget){this._raiseBoundsChange();}},setWidth:function(width,immediately){this._setScale(width,immediately);},setHeight:function(height,immediately){this._setScale(height/this.normHeight,immediately);},fitBounds:function(bounds,anchor,immediately){anchor=anchor||$.Placement.CENTER;var anchorProperties=$.Placement.properties[anchor];var aspectRatio=this.contentAspectX;var xOffset=0;var yOffset=0;var displayedWidthRatio=1;var displayedHeightRatio=1;if(this._clip){aspectRatio=this._clip.getAspectRatio();displayedWidthRatio=this._clip.width/this.source.dimensions.x;displayedHeightRatio=this._clip.height/this.source.dimensions.y;if(bounds.getAspectRatio()>aspectRatio){xOffset=this._clip.x/this._clip.height*bounds.height;yOffset=this._clip.y/this._clip.height*bounds.height;}else{xOffset=this._clip.x/this._clip.width*bounds.width;yOffset=this._clip.y/this._clip.width*bounds.width;}}
if(bounds.getAspectRatio()>aspectRatio){var height=bounds.height/displayedHeightRatio;var marginLeft=0;if(anchorProperties.isHorizontallyCentered){marginLeft=(bounds.width-bounds.height*aspectRatio)/2;}else if(anchorProperties.isRight){marginLeft=bounds.width-bounds.height*aspectRatio;}
this.setPosition(new $.Point(bounds.x-xOffset+marginLeft,bounds.y-yOffset),immediately);this.setHeight(height,immediately);}else{var width=bounds.width/displayedWidthRatio;var marginTop=0;if(anchorProperties.isVerticallyCentered){marginTop=(bounds.height-bounds.width/aspectRatio)/2;}else if(anchorProperties.isBottom){marginTop=bounds.height-bounds.width/aspectRatio;}
this.setPosition(new $.Point(bounds.x-xOffset,bounds.y-yOffset+marginTop),immediately);this.setWidth(width,immediately);}},getClip:function(){if(this._clip){return this._clip.clone();}
return null;},setClip:function(newClip){$.console.assert(!newClip||newClip instanceof $.Rect,"[TiledImage.setClip] newClip must be an OpenSeadragon.Rect or null");if(newClip instanceof $.Rect){this._clip=newClip.clone();}else{this._clip=null;}
this._needsDraw=true;},getOpacity:function(){return this.opacity;},setOpacity:function(opacity){this.opacity=opacity;this._needsDraw=true;},getCompositeOperation:function(){return this.compositeOperation;},setCompositeOperation:function(compositeOperation){this.compositeOperation=compositeOperation;this._needsDraw=true;},_setScale:function(scale,immediately){var sameTarget=(this._scaleSpring.target.value===scale);if(immediately){if(sameTarget&&this._scaleSpring.current.value===scale){return;}
this._scaleSpring.resetTo(scale);this._updateForScale();this._needsDraw=true;}else{if(sameTarget){return;}
this._scaleSpring.springTo(scale);this._updateForScale();this._needsDraw=true;}
if(!sameTarget){this._raiseBoundsChange();}},_updateForScale:function(){this._worldWidthTarget=this._scaleSpring.target.value;this._worldHeightTarget=this.normHeight*this._scaleSpring.target.value;this._worldWidthCurrent=this._scaleSpring.current.value;this._worldHeightCurrent=this.normHeight*this._scaleSpring.current.value;},_raiseBoundsChange:function(){this.raiseEvent('bounds-change');},_isBottomItem:function(){return this.viewer.world.getItemAt(0)===this;}});function updateViewport(tiledImage){tiledImage._needsDraw=false;var tile,level,best=null,haveDrawn=false,currentTime=$.now(),viewportBounds=tiledImage.viewport.getBoundsWithMargins(true),zeroRatioC=tiledImage.viewport.deltaPixelsFromPointsNoRotate(tiledImage.source.getPixelRatio(0),true).x*tiledImage._scaleSpring.current.value,lowestLevel=Math.max(tiledImage.source.minLevel,Math.floor(Math.log(tiledImage.minZoomImageRatio)/Math.log(2))),highestLevel=Math.min(Math.abs(tiledImage.source.maxLevel),Math.abs(Math.floor(Math.log(zeroRatioC/tiledImage.minPixelRatio)/Math.log(2)))),renderPixelRatioC,renderPixelRatioT,zeroRatioT,optimalRatio,levelOpacity,levelVisibility;while(tiledImage.lastDrawn.length>0){tile=tiledImage.lastDrawn.pop();tile.beingDrawn=false;}
if(!tiledImage.wrapHorizontal&&!tiledImage.wrapVertical){var tiledImageBounds=tiledImage.getClippedBounds(true);var intersection=viewportBounds.intersection(tiledImageBounds);if(intersection===null){return;}
viewportBounds=intersection;}
viewportBounds=viewportBounds.getBoundingBox();viewportBounds.x-=tiledImage._xSpring.current.value;viewportBounds.y-=tiledImage._ySpring.current.value;var viewportTL=viewportBounds.getTopLeft();var viewportBR=viewportBounds.getBottomRight();if(!tiledImage.wrapHorizontal&&(viewportBR.x<0||viewportTL.x>tiledImage._worldWidthCurrent)){return;}
if(!tiledImage.wrapVertical&&(viewportBR.y<0||viewportTL.y>tiledImage._worldHeightCurrent)){return;}
if(!tiledImage.wrapHorizontal){viewportTL.x=Math.max(viewportTL.x,0);viewportBR.x=Math.min(viewportBR.x,tiledImage._worldWidthCurrent);}
if(!tiledImage.wrapVertical){viewportTL.y=Math.max(viewportTL.y,0);viewportBR.y=Math.min(viewportBR.y,tiledImage._worldHeightCurrent);}
lowestLevel=Math.min(lowestLevel,highestLevel);var drawLevel;for(level=highestLevel;level>=lowestLevel;level--){drawLevel=false;renderPixelRatioC=tiledImage.viewport.deltaPixelsFromPointsNoRotate(tiledImage.source.getPixelRatio(level),true).x*tiledImage._scaleSpring.current.value;if((!haveDrawn&&renderPixelRatioC>=tiledImage.minPixelRatio)||(level==lowestLevel)){drawLevel=true;haveDrawn=true;}else if(!haveDrawn){continue;}
renderPixelRatioT=tiledImage.viewport.deltaPixelsFromPointsNoRotate(tiledImage.source.getPixelRatio(level),false).x*tiledImage._scaleSpring.current.value;zeroRatioT=tiledImage.viewport.deltaPixelsFromPointsNoRotate(tiledImage.source.getPixelRatio(Math.max(tiledImage.source.getClosestLevel(tiledImage.viewport.containerSize)-1,0)),false).x*tiledImage._scaleSpring.current.value;optimalRatio=tiledImage.immediateRender?1:zeroRatioT;levelOpacity=Math.min(1,(renderPixelRatioC-0.5)/0.5);levelVisibility=optimalRatio/Math.abs(optimalRatio-renderPixelRatioT);best=updateLevel(tiledImage,haveDrawn,drawLevel,level,levelOpacity,levelVisibility,viewportTL,viewportBR,currentTime,best);if(providesCoverage(tiledImage.coverage,level)){break;}}
drawTiles(tiledImage,tiledImage.lastDrawn);if(best&&!best.context2D){loadTile(tiledImage,best,currentTime);}}
function updateLevel(tiledImage,haveDrawn,drawLevel,level,levelOpacity,levelVisibility,viewportTL,viewportBR,currentTime,best){var x,y,tileTL,tileBR,numberOfTiles,viewportCenter=tiledImage.viewport.pixelFromPoint(tiledImage.viewport.getCenter());if(tiledImage.viewer){tiledImage.viewer.raiseEvent('update-level',{tiledImage:tiledImage,havedrawn:haveDrawn,level:level,opacity:levelOpacity,visibility:levelVisibility,topleft:viewportTL,bottomright:viewportBR,currenttime:currentTime,best:best});}
tileTL=tiledImage.source.getTileAtPoint(level,viewportTL.divide(tiledImage._scaleSpring.current.value));tileBR=tiledImage.source.getTileAtPoint(level,viewportBR.divide(tiledImage._scaleSpring.current.value));numberOfTiles=tiledImage.source.getNumTiles(level);resetCoverage(tiledImage.coverage,level);if(!tiledImage.wrapHorizontal){tileBR.x=Math.min(tileBR.x,numberOfTiles.x-1);}
if(!tiledImage.wrapVertical){tileBR.y=Math.min(tileBR.y,numberOfTiles.y-1);}
for(x=tileTL.x;x<=tileBR.x;x++){for(y=tileTL.y;y<=tileBR.y;y++){best=updateTile(tiledImage,drawLevel,haveDrawn,x,y,level,levelOpacity,levelVisibility,viewportCenter,numberOfTiles,currentTime,best);}}
return best;}
function updateTile(tiledImage,drawLevel,haveDrawn,x,y,level,levelOpacity,levelVisibility,viewportCenter,numberOfTiles,currentTime,best){var tile=getTile(x,y,level,tiledImage.source,tiledImage.tilesMatrix,currentTime,numberOfTiles,tiledImage._worldWidthCurrent,tiledImage._worldHeightCurrent),drawTile=drawLevel;if(tiledImage.viewer){tiledImage.viewer.raiseEvent('update-tile',{tiledImage:tiledImage,tile:tile});}
setCoverage(tiledImage.coverage,level,x,y,false);if(!tile.exists){return best;}
if(haveDrawn&&!drawTile){if(isCovered(tiledImage.coverage,level,x,y)){setCoverage(tiledImage.coverage,level,x,y,true);}else{drawTile=true;}}
if(!drawTile){return best;}
positionTile(tile,tiledImage.source.tileOverlap,tiledImage.viewport,viewportCenter,levelVisibility,tiledImage);if(!tile.loaded){if(tile.context2D){setTileLoaded(tiledImage,tile);}else{var imageRecord=tiledImage._tileCache.getImageRecord(tile.url);if(imageRecord){var image=imageRecord.getImage();setTileLoaded(tiledImage,tile,image);}}}
if(tile.loaded){var needsDraw=blendTile(tiledImage,tile,x,y,level,levelOpacity,currentTime);if(needsDraw){tiledImage._needsDraw=true;}}else if(tile.loading){}else{best=compareTiles(best,tile);}
return best;}
function getTile(x,y,level,tileSource,tilesMatrix,time,numTiles,worldWidth,worldHeight){var xMod,yMod,bounds,exists,url,context2D,tile;if(!tilesMatrix[level]){tilesMatrix[level]={};}
if(!tilesMatrix[level][x]){tilesMatrix[level][x]={};}
if(!tilesMatrix[level][x][y]){xMod=(numTiles.x+(x%numTiles.x))%numTiles.x;yMod=(numTiles.y+(y%numTiles.y))%numTiles.y;bounds=tileSource.getTileBounds(level,xMod,yMod);exists=tileSource.tileExists(level,xMod,yMod);url=tileSource.getTileUrl(level,xMod,yMod);context2D=tileSource.getContext2D?tileSource.getContext2D(level,xMod,yMod):undefined;bounds.x+=(x-xMod)/numTiles.x;bounds.y+=(worldHeight/worldWidth)*((y-yMod)/numTiles.y);tilesMatrix[level][x][y]=new $.Tile(level,x,y,bounds,exists,url,context2D);}
tile=tilesMatrix[level][x][y];tile.lastTouchTime=time;return tile;}
function loadTile(tiledImage,tile,time){tile.loading=true;tiledImage._imageLoader.addJob({src:tile.url,crossOriginPolicy:tiledImage.crossOriginPolicy,callback:function(image,errorMsg){onTileLoad(tiledImage,tile,time,image,errorMsg);},abort:function(){tile.loading=false;}});}
function onTileLoad(tiledImage,tile,time,image,errorMsg){if(!image){$.console.log("Tile %s failed to load: %s - error: %s",tile,tile.url,errorMsg);tiledImage.viewer.raiseEvent("tile-load-failed",{tile:tile,tiledImage:tiledImage,time:time,message:errorMsg});tile.loading=false;tile.exists=false;return;}
if(time<tiledImage.lastResetTime){$.console.log("Ignoring tile %s loaded before reset: %s",tile,tile.url);tile.loading=false;return;}
var finish=function(){var cutoff=Math.ceil(Math.log(tiledImage.source.getTileWidth(tile.level))/Math.log(2));setTileLoaded(tiledImage,tile,image,cutoff);};if(!tiledImage._midDraw){finish();}else{window.setTimeout(finish,1);}}
function setTileLoaded(tiledImage,tile,image,cutoff){var increment=0;function getCompletionCallback(){increment++;return completionCallback;}
function completionCallback(){increment--;if(increment===0){tile.loading=false;tile.loaded=true;if(!tile.context2D){tiledImage._tileCache.cacheTile({image:image,tile:tile,cutoff:cutoff,tiledImage:tiledImage});}
tiledImage._needsDraw=true;}}
tiledImage.viewer.raiseEvent("tile-loaded",{tile:tile,tiledImage:tiledImage,image:image,getCompletionCallback:getCompletionCallback});getCompletionCallback()();}
function positionTile(tile,overlap,viewport,viewportCenter,levelVisibility,tiledImage){var boundsTL=tile.bounds.getTopLeft();boundsTL.x*=tiledImage._scaleSpring.current.value;boundsTL.y*=tiledImage._scaleSpring.current.value;boundsTL.x+=tiledImage._xSpring.current.value;boundsTL.y+=tiledImage._ySpring.current.value;var boundsSize=tile.bounds.getSize();boundsSize.x*=tiledImage._scaleSpring.current.value;boundsSize.y*=tiledImage._scaleSpring.current.value;var positionC=viewport.pixelFromPointNoRotate(boundsTL,true),positionT=viewport.pixelFromPointNoRotate(boundsTL,false),sizeC=viewport.deltaPixelsFromPointsNoRotate(boundsSize,true),sizeT=viewport.deltaPixelsFromPointsNoRotate(boundsSize,false),tileCenter=positionT.plus(sizeT.divide(2)),tileDistance=viewportCenter.distanceTo(tileCenter);if(!overlap){sizeC=sizeC.plus(new $.Point(1,1));}
tile.position=positionC;tile.size=sizeC;tile.distance=tileDistance;tile.visibility=levelVisibility;}
function blendTile(tiledImage,tile,x,y,level,levelOpacity,currentTime){var blendTimeMillis=1000*tiledImage.blendTime,deltaTime,opacity;if(!tile.blendStart){tile.blendStart=currentTime;}
deltaTime=currentTime-tile.blendStart;opacity=blendTimeMillis?Math.min(1,deltaTime/(blendTimeMillis)):1;if(tiledImage.alwaysBlend){opacity*=levelOpacity;}
tile.opacity=opacity;tiledImage.lastDrawn.push(tile);if(opacity==1){setCoverage(tiledImage.coverage,level,x,y,true);tiledImage._hasOpaqueTile=true;}else if(deltaTime<blendTimeMillis){return true;}
return false;}
function providesCoverage(coverage,level,x,y){var rows,cols,i,j;if(!coverage[level]){return false;}
if(x===undefined||y===undefined){rows=coverage[level];for(i in rows){if(rows.hasOwnProperty(i)){cols=rows[i];for(j in cols){if(cols.hasOwnProperty(j)&&!cols[j]){return false;}}}}
return true;}
return(coverage[level][x]===undefined||coverage[level][x][y]===undefined||coverage[level][x][y]===true);}
function isCovered(coverage,level,x,y){if(x===undefined||y===undefined){return providesCoverage(coverage,level+1);}else{return(providesCoverage(coverage,level+1,2*x,2*y)&&providesCoverage(coverage,level+1,2*x,2*y+1)&&providesCoverage(coverage,level+1,2*x+1,2*y)&&providesCoverage(coverage,level+1,2*x+1,2*y+1));}}
function setCoverage(coverage,level,x,y,covers){if(!coverage[level]){$.console.warn("Setting coverage for a tile before its level's coverage has been reset: %s",level);return;}
if(!coverage[level][x]){coverage[level][x]={};}
coverage[level][x][y]=covers;}
function resetCoverage(coverage,level){coverage[level]={};}
function compareTiles(previousBest,tile){if(!previousBest){return tile;}
if(tile.visibility>previousBest.visibility){return tile;}else if(tile.visibility==previousBest.visibility){if(tile.distance<previousBest.distance){return tile;}}
return previousBest;}
function drawTiles(tiledImage,lastDrawn){if(lastDrawn.length===0){return;}
var tile=lastDrawn[0];var useSketch=tiledImage.opacity<1||(tiledImage.compositeOperation&&tiledImage.compositeOperation!=='source-over')||(!tiledImage._isBottomItem()&&tile._hasTransparencyChannel());var sketchScale;var sketchTranslate;var zoom=tiledImage.viewport.getZoom(true);var imageZoom=tiledImage.viewportToImageZoom(zoom);if(imageZoom>tiledImage.smoothTileEdgesMinZoom&&!tiledImage.iOSDevice){useSketch=true;sketchScale=tile.getScaleForEdgeSmoothing();sketchTranslate=tile.getTranslationForEdgeSmoothing(sketchScale,tiledImage._drawer.getCanvasSize(false),tiledImage._drawer.getCanvasSize(true));}
var bounds;if(useSketch){if(!sketchScale){bounds=tiledImage.viewport.viewportToViewerElementRectangle(tiledImage.getClippedBounds(true)).getIntegerBoundingBox().times($.pixelDensityRatio);}
tiledImage._drawer._clear(true,bounds);}
if(tiledImage.viewport.degrees!==0&&!sketchScale){tiledImage._drawer._offsetForRotation(tiledImage.viewport.degrees,useSketch);}
var usedClip=false;if(tiledImage._clip){tiledImage._drawer.saveContext(useSketch);var box=tiledImage.imageToViewportRectangle(tiledImage._clip,true);var clipRect=tiledImage._drawer.viewportToDrawerRectangle(box);if(sketchScale){clipRect=clipRect.times(sketchScale);}
if(sketchTranslate){clipRect=clipRect.translate(sketchTranslate);}
tiledImage._drawer.setClip(clipRect,useSketch);usedClip=true;}
if(tiledImage.placeholderFillStyle&&tiledImage._hasOpaqueTile===false){var placeholderRect=tiledImage._drawer.viewportToDrawerRectangle(tiledImage.getBounds(true));if(sketchScale){placeholderRect=placeholderRect.times(sketchScale);}
if(sketchTranslate){placeholderRect=placeholderRect.translate(sketchTranslate);}
var fillStyle=null;if(typeof tiledImage.placeholderFillStyle==="function"){fillStyle=tiledImage.placeholderFillStyle(tiledImage,tiledImage._drawer.context);}
else{fillStyle=tiledImage.placeholderFillStyle;}
tiledImage._drawer.drawRectangle(placeholderRect,fillStyle,useSketch);}
for(var i=lastDrawn.length-1;i>=0;i--){tile=lastDrawn[i];tiledImage._drawer.drawTile(tile,tiledImage._drawingHandler,useSketch,sketchScale,sketchTranslate);tile.beingDrawn=true;if(tiledImage.viewer){tiledImage.viewer.raiseEvent('tile-drawn',{tiledImage:tiledImage,tile:tile});}}
if(usedClip){tiledImage._drawer.restoreContext(useSketch);}
if(tiledImage.viewport.degrees!==0&&!sketchScale){tiledImage._drawer._restoreRotationChanges(useSketch);}
if(useSketch){var offsetForRotation=tiledImage.viewport.degrees!==0&&sketchScale;if(offsetForRotation){tiledImage._drawer._offsetForRotation(tiledImage.viewport.degrees,false);}
tiledImage._drawer.blendSketch({opacity:tiledImage.opacity,scale:sketchScale,translate:sketchTranslate,compositeOperation:tiledImage.compositeOperation,bounds:bounds});if(offsetForRotation){tiledImage._drawer._restoreRotationChanges(false);}}
drawDebugInfo(tiledImage,lastDrawn);}
function drawDebugInfo(tiledImage,lastDrawn){if(tiledImage.debugMode){for(var i=lastDrawn.length-1;i>=0;i--){var tile=lastDrawn[i];try{tiledImage._drawer.drawDebugInfo(tile,lastDrawn.length,i);}catch(e){$.console.error(e);}}}}}(OpenSeadragon));(function($){var TileRecord=function(options){$.console.assert(options,"[TileCache.cacheTile] options is required");$.console.assert(options.tile,"[TileCache.cacheTile] options.tile is required");$.console.assert(options.tiledImage,"[TileCache.cacheTile] options.tiledImage is required");this.tile=options.tile;this.tiledImage=options.tiledImage;};var ImageRecord=function(options){$.console.assert(options,"[ImageRecord] options is required");$.console.assert(options.image,"[ImageRecord] options.image is required");this._image=options.image;this._tiles=[];};ImageRecord.prototype={destroy:function(){this._image=null;this._renderedContext=null;this._tiles=null;},getImage:function(){return this._image;},getRenderedContext:function(){if(!this._renderedContext){var canvas=document.createElement('canvas');canvas.width=this._image.width;canvas.height=this._image.height;this._renderedContext=canvas.getContext('2d');this._renderedContext.drawImage(this._image,0,0);this._image=null;}
return this._renderedContext;},setRenderedContext:function(renderedContext){$.console.error("ImageRecord.setRenderedContext is deprecated. "+
"The rendered context should be created by the ImageRecord "+
"itself when calling ImageRecord.getRenderedContext.");this._renderedContext=renderedContext;},addTile:function(tile){$.console.assert(tile,'[ImageRecord.addTile] tile is required');this._tiles.push(tile);},removeTile:function(tile){for(var i=0;i<this._tiles.length;i++){if(this._tiles[i]===tile){this._tiles.splice(i,1);return;}}
$.console.warn('[ImageRecord.removeTile] trying to remove unknown tile',tile);},getTileCount:function(){return this._tiles.length;}};$.TileCache=function(options){options=options||{};this._maxImageCacheCount=options.maxImageCacheCount||$.DEFAULT_SETTINGS.maxImageCacheCount;this._tilesLoaded=[];this._imagesLoaded=[];this._imagesLoadedCount=0;};$.TileCache.prototype={numTilesLoaded:function(){return this._tilesLoaded.length;},cacheTile:function(options){$.console.assert(options,"[TileCache.cacheTile] options is required");$.console.assert(options.tile,"[TileCache.cacheTile] options.tile is required");$.console.assert(options.tile.url,"[TileCache.cacheTile] options.tile.url is required");$.console.assert(options.tiledImage,"[TileCache.cacheTile] options.tiledImage is required");var cutoff=options.cutoff||0;var insertionIndex=this._tilesLoaded.length;var imageRecord=this._imagesLoaded[options.tile.url];if(!imageRecord){$.console.assert(options.image,"[TileCache.cacheTile] options.image is required to create an ImageRecord");imageRecord=this._imagesLoaded[options.tile.url]=new ImageRecord({image:options.image});this._imagesLoadedCount++;}
imageRecord.addTile(options.tile);options.tile.cacheImageRecord=imageRecord;if(this._imagesLoadedCount>this._maxImageCacheCount){var worstTile=null;var worstTileIndex=-1;var worstTileRecord=null;var prevTile,worstTime,worstLevel,prevTime,prevLevel,prevTileRecord;for(var i=this._tilesLoaded.length-1;i>=0;i--){prevTileRecord=this._tilesLoaded[i];prevTile=prevTileRecord.tile;if(prevTile.level<=cutoff||prevTile.beingDrawn){continue;}else if(!worstTile){worstTile=prevTile;worstTileIndex=i;worstTileRecord=prevTileRecord;continue;}
prevTime=prevTile.lastTouchTime;worstTime=worstTile.lastTouchTime;prevLevel=prevTile.level;worstLevel=worstTile.level;if(prevTime<worstTime||(prevTime==worstTime&&prevLevel>worstLevel)){worstTile=prevTile;worstTileIndex=i;worstTileRecord=prevTileRecord;}}
if(worstTile&&worstTileIndex>=0){this._unloadTile(worstTileRecord);insertionIndex=worstTileIndex;}}
this._tilesLoaded[insertionIndex]=new TileRecord({tile:options.tile,tiledImage:options.tiledImage});},clearTilesFor:function(tiledImage){$.console.assert(tiledImage,'[TileCache.clearTilesFor] tiledImage is required');var tileRecord;for(var i=0;i<this._tilesLoaded.length;++i){tileRecord=this._tilesLoaded[i];if(tileRecord.tiledImage===tiledImage){this._unloadTile(tileRecord);this._tilesLoaded.splice(i,1);i--;}}},getImageRecord:function(url){$.console.assert(url,'[TileCache.getImageRecord] url is required');return this._imagesLoaded[url];},_unloadTile:function(tileRecord){$.console.assert(tileRecord,'[TileCache._unloadTile] tileRecord is required');var tile=tileRecord.tile;var tiledImage=tileRecord.tiledImage;tile.unload();tile.cacheImageRecord=null;var imageRecord=this._imagesLoaded[tile.url];imageRecord.removeTile(tile);if(!imageRecord.getTileCount()){imageRecord.destroy();delete this._imagesLoaded[tile.url];this._imagesLoadedCount--;}
tiledImage.viewer.raiseEvent("tile-unloaded",{tile:tile,tiledImage:tiledImage});}};}(OpenSeadragon));(function($){$.World=function(options){var _this=this;$.console.assert(options.viewer,"[World] options.viewer is required");$.EventSource.call(this);this.viewer=options.viewer;this._items=[];this._needsDraw=false;this._autoRefigureSizes=true;this._needsSizesFigured=false;this._delegatedFigureSizes=function(event){if(_this._autoRefigureSizes){_this._figureSizes();}else{_this._needsSizesFigured=true;}};this._figureSizes();};$.extend($.World.prototype,$.EventSource.prototype,{addItem:function(item,options){$.console.assert(item,"[World.addItem] item is required");$.console.assert(item instanceof $.TiledImage,"[World.addItem] only TiledImages supported at this time");options=options||{};if(options.index!==undefined){var index=Math.max(0,Math.min(this._items.length,options.index));this._items.splice(index,0,item);}else{this._items.push(item);}
if(this._autoRefigureSizes){this._figureSizes();}else{this._needsSizesFigured=true;}
this._needsDraw=true;item.addHandler('bounds-change',this._delegatedFigureSizes);this.raiseEvent('add-item',{item:item});},getItemAt:function(index){$.console.assert(index!==undefined,"[World.getItemAt] index is required");return this._items[index];},getIndexOfItem:function(item){$.console.assert(item,"[World.getIndexOfItem] item is required");return $.indexOf(this._items,item);},getItemCount:function(){return this._items.length;},setItemIndex:function(item,index){$.console.assert(item,"[World.setItemIndex] item is required");$.console.assert(index!==undefined,"[World.setItemIndex] index is required");var oldIndex=this.getIndexOfItem(item);if(index>=this._items.length){throw new Error("Index bigger than number of layers.");}
if(index===oldIndex||oldIndex===-1){return;}
this._items.splice(oldIndex,1);this._items.splice(index,0,item);this._needsDraw=true;this.raiseEvent('item-index-change',{item:item,previousIndex:oldIndex,newIndex:index});},removeItem:function(item){$.console.assert(item,"[World.removeItem] item is required");var index=$.indexOf(this._items,item);if(index===-1){return;}
item.removeHandler('bounds-change',this._delegatedFigureSizes);item.destroy();this._items.splice(index,1);this._figureSizes();this._needsDraw=true;this._raiseRemoveItem(item);},removeAll:function(){this.viewer._cancelPendingImages();var item;for(var i=0;i<this._items.length;i++){item=this._items[i];item.removeHandler('bounds-change',this._delegatedFigureSizes);item.destroy();}
var removedItems=this._items;this._items=[];this._figureSizes();this._needsDraw=true;for(i=0;i<removedItems.length;i++){item=removedItems[i];this._raiseRemoveItem(item);}},resetItems:function(){for(var i=0;i<this._items.length;i++){this._items[i].reset();}},update:function(){var animated=false;for(var i=0;i<this._items.length;i++){animated=this._items[i].update()||animated;}
return animated;},draw:function(){for(var i=0;i<this._items.length;i++){this._items[i].draw();}
this._needsDraw=false;},needsDraw:function(){for(var i=0;i<this._items.length;i++){if(this._items[i].needsDraw()){return true;}}
return this._needsDraw;},getHomeBounds:function(){return this._homeBounds.clone();},getContentFactor:function(){return this._contentFactor;},setAutoRefigureSizes:function(value){this._autoRefigureSizes=value;if(value&this._needsSizesFigured){this._figureSizes();this._needsSizesFigured=false;}},arrange:function(options){options=options||{};var immediately=options.immediately||false;var layout=options.layout||$.DEFAULT_SETTINGS.collectionLayout;var rows=options.rows||$.DEFAULT_SETTINGS.collectionRows;var columns=options.columns||$.DEFAULT_SETTINGS.collectionColumns;var tileSize=options.tileSize||$.DEFAULT_SETTINGS.collectionTileSize;var tileMargin=options.tileMargin||$.DEFAULT_SETTINGS.collectionTileMargin;var increment=tileSize+tileMargin;var wrap;if(!options.rows&&columns){wrap=columns;}else{wrap=Math.ceil(this._items.length/rows);}
var x=0;var y=0;var item,box,width,height,position;this.setAutoRefigureSizes(false);for(var i=0;i<this._items.length;i++){if(i&&(i%wrap)===0){if(layout==='horizontal'){y+=increment;x=0;}else{x+=increment;y=0;}}
item=this._items[i];box=item.getBounds();if(box.width>box.height){width=tileSize;}else{width=tileSize*(box.width/box.height);}
height=width*(box.height/box.width);position=new $.Point(x+((tileSize-width)/2),y+((tileSize-height)/2));item.setPosition(position,immediately);item.setWidth(width,immediately);if(layout==='horizontal'){x+=increment;}else{y+=increment;}}
this.setAutoRefigureSizes(true);},_figureSizes:function(){var oldHomeBounds=this._homeBounds?this._homeBounds.clone():null;var oldContentSize=this._contentSize?this._contentSize.clone():null;var oldContentFactor=this._contentFactor||0;if(!this._items.length){this._homeBounds=new $.Rect(0,0,1,1);this._contentSize=new $.Point(1,1);this._contentFactor=1;}else{var item=this._items[0];var bounds=item.getBounds();this._contentFactor=item.getContentSize().x/bounds.width;var clippedBounds=item.getClippedBounds();var left=clippedBounds.x;var top=clippedBounds.y;var right=clippedBounds.x+clippedBounds.width;var bottom=clippedBounds.y+clippedBounds.height;for(var i=1;i<this._items.length;i++){item=this._items[i];bounds=item.getBounds();this._contentFactor=Math.max(this._contentFactor,item.getContentSize().x/bounds.width);clippedBounds=item.getClippedBounds();left=Math.min(left,clippedBounds.x);top=Math.min(top,clippedBounds.y);right=Math.max(right,clippedBounds.x+clippedBounds.width);bottom=Math.max(bottom,clippedBounds.y+clippedBounds.height);}
this._homeBounds=new $.Rect(left,top,right-left,bottom-top);this._contentSize=new $.Point(this._homeBounds.width*this._contentFactor,this._homeBounds.height*this._contentFactor);}
if(this._contentFactor!==oldContentFactor||!this._homeBounds.equals(oldHomeBounds)||!this._contentSize.equals(oldContentSize)){this.raiseEvent('metrics-change',{});}},_raiseRemoveItem:function(item){this.raiseEvent('remove-item',{item:item});}});}(OpenSeadragon));